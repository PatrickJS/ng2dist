{"version":3,"sources":["key_events_spec.es6"],"names":[],"mappings":"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","file":"examples/e2e_test/key_events/key_events_spec.js","sourcesContent":["var testUtil = require('angular2/src/test_lib/e2e_util');\ndescribe('key_events', function () {\n\n  var URL = 'examples/src/key_events/index.html';\n\n  afterEach(testUtil.verifyNoBrowserErrors);\n  beforeEach(() => {\n    browser.get(URL);\n  });\n\n  it('should display correct key names', function() {\n    var firstArea = element.all(by.css('.sample-area')).get(0);\n    expect(firstArea.getText()).toBe('(none)');\n\n    // testing different key categories:\n    firstArea.sendKeys(protractor.Key.ENTER);\n    expect(firstArea.getText()).toBe('enter');\n\n    firstArea.sendKeys(protractor.Key.SHIFT, protractor.Key.ENTER);\n    expect(firstArea.getText()).toBe('shift.enter');\n\n    firstArea.sendKeys(protractor.Key.CONTROL, protractor.Key.SHIFT, protractor.Key.ENTER);\n    expect(firstArea.getText()).toBe('control.shift.enter');\n\n    firstArea.sendKeys(' ');\n    expect(firstArea.getText()).toBe('space');\n\n    firstArea.sendKeys('a');\n    expect(firstArea.getText()).toBe('a');\n\n    firstArea.sendKeys(protractor.Key.CONTROL, 'b');\n    expect(firstArea.getText()).toBe('control.b');\n\n    firstArea.sendKeys(protractor.Key.F1);\n    expect(firstArea.getText()).toBe('f1');\n\n    firstArea.sendKeys(protractor.Key.ALT, protractor.Key.F1);\n    expect(firstArea.getText()).toBe('alt.f1');\n\n    firstArea.sendKeys(protractor.Key.CONTROL, protractor.Key.F1);\n    expect(firstArea.getText()).toBe('control.f1');\n\n    // There is an issue with protractor.Key.NUMPAD0 (and other NUMPADx):\n    // chromedriver does not correctly set the location property on the event to\n    // specify that the key is on the numeric keypad (event.location = 3)\n    // so the following test fails:\n    // firstArea.sendKeys(protractor.Key.NUMPAD0);\n    // expect(firstArea.getText()).toBe('0');\n  });\n\n  it('should correctly react to the specified key', function() {\n    var secondArea = element.all(by.css('.sample-area')).get(1);\n    secondArea.sendKeys(protractor.Key.SHIFT, protractor.Key.ENTER);\n    expect(secondArea.getText()).toEqual('You pressed shift.enter!');\n  });\n\n  it('should not react to incomplete keys', function() {\n    var secondArea = element.all(by.css('.sample-area')).get(1);\n    secondArea.sendKeys(protractor.Key.ENTER);\n    expect(secondArea.getText()).toEqual('');\n  });\n\n  it('should not react to keys with more modifiers', function() {\n    var secondArea = element.all(by.css('.sample-area')).get(1);\n    secondArea.sendKeys(protractor.Key.CONTROL, protractor.Key.SHIFT, protractor.Key.ENTER);\n    expect(secondArea.getText()).toEqual('');\n  });\n\n});\n"]}