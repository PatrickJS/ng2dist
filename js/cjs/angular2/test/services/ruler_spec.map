{"version":3,"sources":["ruler_spec.js"],"names":[],"mappings":"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","file":"angular2/test/services/ruler_spec.js","sourcesContent":["import {AsyncTestCompleter, inject, ddescribe, describe, it, iit, xit, expect, SpyObject} from 'angular2/test_lib';\n\nimport {DOM, DomAdapter} from 'angular2/src/dom/dom_adapter';\nimport {NgElement} from 'angular2/src/core/compiler/ng_element';\n\nimport {Ruler, Rectangle} from 'angular2/src/services/ruler';\nimport {createRectangle} from './rectangle_mock';\n\nclass DomAdapterMock extends DomAdapter {\n  rect;\n  constructor(rect) {\n    super();\n    this.rect = rect;\n  }\n\n  getBoundingClientRect(elm) {\n    return this.rect;\n  }\n}\n\nfunction assertDimensions(rect: Rectangle, left, right, top, bottom, width, height) {\n  expect(rect.left).toEqual(left);\n  expect(rect.right).toEqual(right);\n  expect(rect.top).toEqual(top);\n  expect(rect.bottom).toEqual(bottom);\n  expect(rect.width).toEqual(width);\n  expect(rect.height).toEqual(height);\n}\n\nexport function main() {\n\n  describe('ruler service', () => {\n\n    it('should allow measuring NgElements',\n      inject([AsyncTestCompleter], (async) => {\n        var ruler = new Ruler(new DomAdapterMock(createRectangle(10, 20, 200, 100)));\n\n        ruler.measure(new FakeNgElement(null)).then((rect) => {\n          assertDimensions(rect, 10, 210, 20, 120, 200, 100);\n          async.done();\n        });\n      }));\n\n\n    it('should return 0 for all rectangle values while measuring elements in a document fragment',\n      inject([AsyncTestCompleter], (async) => {\n        var ruler = new Ruler(DOM);\n\n        ruler.measure(new FakeNgElement(DOM.createElement('div'))).then((rect) => {\n          //here we are using an element created in a doc fragment so all the measures will come back as 0\n          assertDimensions(rect, 0, 0, 0, 0, 0, 0);\n          async.done();\n        });\n    }));\n\n  });\n}\n\nclass FakeNgElement extends NgElement {\n  _domElement;\n\n  constructor(domElement) {\n    super(null, null);\n    this._domElement = domElement;\n  }\n\n  get domElement() {\n    return this._domElement;\n  }\n}"]}