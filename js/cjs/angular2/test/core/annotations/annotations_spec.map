{"version":3,"sources":["annotations_spec.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;MAArC,EAAC,GAAE,YAAqB;AAAE,iBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;SAA1D,EAAC,8BAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,+BAAqB,wCAA2B,CAAA,+BAAqB,GAAK,EAAC,OAAM,8BAAmB,CAAC,AAD/D,CACgE;AADtG,YAAQ;AAAG,WAAO;AAAG,KAAC;AAAG,MAAE;AAAG,SAAK;AAAG,aAAS;SAAvD,EAAC,4DAAoB,CAAA,OAAM,AAAC,6CAAkB,CACtC,CAAA,6DAAqB,sEAA2B,CAAA,6DAAqB,GAAK,EAAC,OAAM,4DAAmB,CAAC,AAD/D,CACgE;AAAtG,YAAQ;AAAG,WAAO;AAD1B,AAAI,EAAA,iBAGJ,SAAM,eAAa,CACL,AAAe;IAAd,UAAQ,8CAAK,GAAC;AAAK,AAJlC,gBAAc,iBAAiB,AAAC,iBAAkB,KAAK,MAIf,EAAC,SAAQ,CAAG,UAAQ,CAAC,CAJa,CAIX;AAC/D,AALwC,CAAA;AAAxC,AAAI,EAAA,iCAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,wBAGA,UAAQ,CAFmB;AAMjD,OAAS,KAAG,CAAE,AAAD;AAClB,SAAO,AAAC,CAAC,WAAU,GAAG,SAAC,AAAD;AACpB,WAAO,AAAC,CAAC,WAAU,GAAG,SAAC,AAAD;AACpB,OAAC,AAAC,CAAC,6CAA4C,GAAG,SAAC,AAAD,CAAM;AACtD,AAAI,UAAA,CAAA,CAAA,EAAI,IAAI,eAAa,AAAC,EAAC,CAAC;AAC5B,aAAK,AAAC,CAAC,CAAA,iBAAiB,AAAC,CAAC,QAAO,CAAC,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;MAClD,EAAC,CAAC;AAEF,OAAC,AAAC,CAAC,8DAA6D,GAAG,SAAC,AAAD,CAAM;AACvE,AAAI,UAAA,CAAA,CAAA,EAAI,IAAI,eAAa,AAAC,CAAC,CAAC,SAAQ,CAAE,GAAC,CAAC,CAAC,CAAC;AAC1C,aAAK,AAAC,CAAC,CAAA,iBAAiB,AAAC,CAAC,QAAO,CAAC,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;MAClD,EAAC,CAAC;AAEF,OAAC,AAAC,CAAC,0BAAyB,GAAG,SAAC,AAAD,CAAM;AACnC,AAAI,UAAA,CAAA,CAAA,EAAI,IAAI,eAAa,AAAC,CAAC,CAAC,SAAQ,CAAE,EAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAClD,aAAK,AAAC,CAAC,CAAA,iBAAiB,AAAC,CAAC,QAAO,CAAC,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;MACjD,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ,EAAC,CAAC;AACJ;AACA","file":"angular2/test/core/annotations/annotations_spec.js","sourcesContent":["import {ddescribe, describe, it, iit, expect, beforeEach} from 'angular2/test_lib';\nimport {Directive, onChange} from 'angular2/src/core/annotations/annotations';\n\nclass DummyDirective extends Directive {\n  constructor({lifecycle} = {}) { super({lifecycle: lifecycle}); }\n}\n\nexport function main() {\n  describe(\"Directive\", () => {\n    describe(\"lifecycle\", () => {\n      it(\"should be false when no lifecycle specified\", () => {\n        var d = new DummyDirective();\n        expect(d.hasLifecycleHook(onChange)).toBe(false);\n      });\n\n      it(\"should be false when the lifecycle does not contain the hook\", () => {\n        var d = new DummyDirective({lifecycle:[]});\n        expect(d.hasLifecycleHook(onChange)).toBe(false);\n      });\n\n      it(\"should be true otherwise\", () => {\n        var d = new DummyDirective({lifecycle:[onChange]});\n        expect(d.hasLifecycleHook(onChange)).toBe(true);\n      });\n    });\n  });\n}\n"]}