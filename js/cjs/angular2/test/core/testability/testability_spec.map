{"version":3,"sources":["testability_spec.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;MAArC,EAAC,GAAE,YAAqB;AAAE,iBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;SAA1D,EAAC,8BAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,+BAAqB,wCAA2B,CAAA,+BAAqB,GAAK,EAAC,OAAM,8BAAmB,CAAC,AAD/D,CACgE;AADtG,WAAO;AAAG,YAAQ;AAAG,KAAC;AAAG,MAAE;AAAG,MAAE;AAAG,YAAQ;AAAG,SAAK;AAAG,aAAS;EAC/D,YAAU,EADlB,EAAC,4DAAoB,CAAA,OAAM,AAAC,6CAAkB,CACtC,CAAA,6DAAqB,sEAA2B,CAAA,6DAAqB,GAAK,EAAC,OAAM,4DAAmB,CAAC,AAD/D,CACgE;AAGvG,OAAS,KAAG,CAAE,AAAD;AAClB,SAAO,AAAC,CAAC,aAAY,GAAG,SAAC,AAAD;AACtB,AAAI,MAAA,CAAA,WAAU;AAAG,eAAO,CAAC;AAEzB,aAAS,AAAC,EAAC,SAAC,AAAD,CAAM;AACf,gBAAU,EAAI,IAAI,YAAU,AAAC,EAAC,CAAC;AAC/B,aAAO,EAAI,MAAI,CAAC;IAClB,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,wCAAuC,GAAG,SAAC,AAAD,CAAM;AACjD,WAAK,AAAC,CAAC,WAAU,gBAAgB,AAAC,EAAC,CAAC,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;IAClD,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,wDAAuD,GAAG,SAAC,AAAD;AAC3D,gBAAU,WAAW,AAAC,EAAC,SAAC,AAAD;aAAM,CAAA,QAAO,EAAI,KAAG;MAAA,EAAC,CAAC;AAC7C,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;IAC7B,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,oEAAmE,GAAG,SAAC,AAAD;AACvE,gBAAU,cAAc,AAAC,CAAC,CAAA,CAAC,CAAC;AAC5B,gBAAU,WAAW,AAAC,EAAC,SAAC,AAAD;aAAM,CAAA,QAAO,EAAI,KAAG;MAAA,EAAC,CAAC;AAE7C,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;AAC5B,gBAAU,cAAc,AAAC,CAAC,CAAC,CAAA,CAAC,CAAC;AAC7B,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;IAC9B,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,0DAAyD,GAAG,SAAC,AAAD;AAC7D,gBAAU,cAAc,AAAC,CAAC,CAAA,CAAC,CAAC;AAC5B,gBAAU,WAAW,AAAC,EAAC,SAAC,AAAD;aAAM,CAAA,QAAO,EAAI,KAAG;MAAA,EAAC,CAAC;AAE7C,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;AAE5B,gBAAU,cAAc,AAAC,CAAC,CAAC,CAAA,CAAC,CAAC;AAC7B,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;IAC7B,EAAC,CAAC;EACJ,EAAC,CAAC;AACJ;AACA","file":"angular2/test/core/testability/testability_spec.js","sourcesContent":["import {describe, ddescribe, it, iit, xit, xdescribe, expect, beforeEach} from 'angular2/test_lib';\nimport {Testability} from 'angular2/src/core/testability/testability';\n\n\nexport function main() {\n  describe('Testability', () => {\n    var testability, executed;\n\n    beforeEach(() => {\n      testability = new Testability();\n      executed = false;\n    });\n\n    it('should start with a pending count of 0', () => {\n      expect(testability.getPendingCount()).toEqual(0);\n    });\n\n    it('should fire whenstable callbacks if pending count is 0', () => {\n      testability.whenStable(() => executed = true);\n      expect(executed).toBe(true);\n    });\n\n    it('should not call whenstable callbacks when there are pending counts', () => {\n      testability.increaseCount(2);\n      testability.whenStable(() => executed = true);\n\n      expect(executed).toBe(false);\n      testability.increaseCount(-1);\n      expect(executed).toBe(false);\n    });\n\n    it('should fire whenstable callbacks when pending drops to 0', () => {\n      testability.increaseCount(2);\n      testability.whenStable(() => executed = true);\n\n      expect(executed).toBe(false);\n\n      testability.increaseCount(-2);\n      expect(executed).toBe(true);\n    });\n  });\n}\n"]}