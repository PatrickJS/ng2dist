{"version":3,"sources":["application_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/application_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xdescribe,\n  xit,\n} from 'angular2/test_lib';\nimport {bootstrap} from 'angular2/src/core/application';\nimport {appDocumentToken, appElementToken} from 'angular2/src/core/application_tokens';\nimport {Component, Decorator} from 'angular2/src/core/annotations/annotations';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {bind, Inject} from 'angular2/di';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\nimport {Testability, TestabilityRegistry} from 'angular2/src/core/testability/testability';\n\n@Component({selector: 'hello-app'})\n@View({template: '{{greeting}} world!'})\nclass HelloRootCmp {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\n@Component({selector: 'hello-app'})\n@View({template: 'before: <content></content> after: done'})\nclass HelloRootCmpContent {\n  constructor() { }\n}\n\n@Component({selector: 'hello-app-2'})\n@View({template: '{{greeting}} world, again!'})\nclass HelloRootCmp2 {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\n@Component({selector: 'hello-app'})\n@View({template: ''})\nclass HelloRootCmp3 {\n  appBinding;\n\n  constructor(@Inject(\"appBinding\") appBinding) {\n    this.appBinding = appBinding;\n  }\n}\n\n@Component({selector: 'hello-app'})\n@View({template: ''})\nclass HelloRootCmp4 {\n  lc;\n\n  constructor(@Inject(LifeCycle) lc) {\n    this.lc = lc;\n  }\n}\n\n@Component({selector: 'hello-app'})\nclass HelloRootMissingTemplate { }\n\n@Decorator({selector: 'hello-app'})\nclass HelloRootDirectiveIsNotCmp { }\n\nexport function main() {\n  var fakeDoc, el, el2, testBindings, lightDom;\n\n  beforeEach(() => {\n    fakeDoc = DOM.createHtmlDocument();\n    el = DOM.createElement('hello-app', fakeDoc);\n    el2 = DOM.createElement('hello-app-2', fakeDoc);\n    lightDom = DOM.createElement('light-dom-el', fakeDoc);\n    DOM.appendChild(fakeDoc.body, el);\n    DOM.appendChild(fakeDoc.body, el2);\n    DOM.appendChild(el, lightDom);\n    DOM.setText(lightDom, 'loading');\n    testBindings = [bind(appDocumentToken).toValue(fakeDoc)];\n  });\n\n  describe('bootstrap factory method', () => {\n    it('should throw if no View found', inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootMissingTemplate, testBindings, (e,t) => {throw e;});\n      PromiseWrapper.then(refPromise, null, (reason) => {\n        expect(reason.message).toContain('No template found for HelloRootMissingTemplate');\n        async.done();\n      });\n    }));\n\n    it('should throw if bootstrapped Directive is not a Component', inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootDirectiveIsNotCmp, testBindings, (e,t) => {throw e;});\n      PromiseWrapper.then(refPromise, null, (reason) => {\n        expect(reason.message).toContain(`Could not load 'HelloRootDirectiveIsNotCmp' because it is not a component.`);\n        async.done();\n      });\n    }));\n\n    it('should throw if no element is found', inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmp, [], (e,t) => {throw e;});\n      PromiseWrapper.then(refPromise, null, (reason) => {\n        expect(reason.message).toContain(\n            'The app selector \"hello-app\" did not match any elements');\n        async.done();\n      });\n    }));\n\n    it('should create an injector promise', () => {\n      var refPromise = bootstrap(HelloRootCmp, testBindings);\n      expect(refPromise).not.toBe(null);\n    });\n\n    it('should resolve an injector promise and contain bindings', inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmp, testBindings);\n      refPromise.then((ref) => {\n        expect(ref.injector.get(appElementToken)).toBe(el);\n        async.done();\n      });\n    }));\n\n    it('should provide the application component in the injector', inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmp, testBindings);\n      refPromise.then((ref) => {\n        expect(ref.injector.get(HelloRootCmp)).toBeAnInstanceOf(HelloRootCmp);\n        async.done();\n      });\n    }));\n\n    it('should display hello world', inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmp, testBindings);\n      refPromise.then((ref) => {\n        expect(ref.injector.get(appElementToken)).toHaveText('hello world!');\n        async.done();\n      });\n    }));\n\n    it('should support multiple calls to bootstrap', inject([AsyncTestCompleter], (async) => {\n      var refPromise1 = bootstrap(HelloRootCmp, testBindings);\n      var refPromise2 = bootstrap(HelloRootCmp2, testBindings);\n      PromiseWrapper.all([refPromise1, refPromise2]).then((refs) => {\n        expect(refs[0].injector.get(appElementToken)).toHaveText('hello world!');\n        expect(refs[1].injector.get(appElementToken)).toHaveText('hello world, again!');\n        async.done();\n      });\n    }));\n\n    it(\"should make the provided bindings available to the application component\", inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmp3, [\n        testBindings,\n        bind(\"appBinding\").toValue(\"BoundValue\")\n      ]);\n\n      refPromise.then((ref) => {\n        expect(ref.injector.get(HelloRootCmp3).appBinding).toEqual(\"BoundValue\");\n        async.done();\n      });\n    }));\n\n    it(\"should avoid cyclic dependencies when root component requires Lifecycle through DI\", inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmp4, testBindings);\n\n      refPromise.then((ref) => {\n        expect(ref.injector.get(HelloRootCmp4).lc).toBe(ref.injector.get(LifeCycle));\n        async.done();\n      });\n    }));\n\n    it(\"should support shadow dom content tag\", inject([AsyncTestCompleter], (async) => {\n      var refPromise = bootstrap(HelloRootCmpContent, testBindings);\n      refPromise.then((ref) => {\n        expect(ref.injector.get(appElementToken)).toHaveText('before: loading after: done');\n        async.done();\n      });\n    }));\n\n    it('should register each application with the testability registry', inject([AsyncTestCompleter], (async) => {\n      var refPromise1 = bootstrap(HelloRootCmp, testBindings);\n      var refPromise2 = bootstrap(HelloRootCmp2, testBindings);\n\n      PromiseWrapper.all([refPromise1, refPromise2]).then((refs) => {\n        var registry = refs[0].injector.get(TestabilityRegistry);\n        PromiseWrapper.all([\n            refs[0].injector.asyncGet(Testability),\n            refs[1].injector.asyncGet(Testability)]).then((testabilities) => {\n          expect(registry.findTestabilityInTree(el)).toEqual(testabilities[0]);\n          expect(registry.findTestabilityInTree(el2)).toEqual(testabilities[1]);\n          async.done();\n        });\n      });\n    }));\n  });\n}\n"]}