{"version":3,"sources":["integration_spec.js"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/integration_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  dispatchEvent,\n  expect,\n  iit,\n  inject,\n  beforeEachBindings,\n  it,\n  xit\n} from 'angular2/test_lib';\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Type, isPresent, BaseException, assertionsEnabled, isJsObject, global} from 'angular2/src/facade/lang';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\n\nimport {Injector, bind} from 'angular2/di';\nimport {dynamicChangeDetection,\n  ChangeDetection, DynamicChangeDetection, Pipe, PipeRegistry, BindingPropagationConfig, ON_PUSH} from 'angular2/change_detection';\n\nimport {Decorator, Component, Viewport, DynamicComponent} from 'angular2/src/core/annotations/annotations';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {Parent, Ancestor} from 'angular2/src/core/annotations/visibility';\nimport {EventEmitter, Attribute} from 'angular2/src/core/annotations/di';\nimport {DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {ElementRef} from 'angular2/src/core/compiler/element_injector';\n\nimport {If} from 'angular2/src/directives/if';\n\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\n\nexport function main() {\n  describe('integration tests', function() {\n    var ctx;\n\n    beforeEach( () => {\n      ctx = new MyComp();\n    });\n\n    describe('react to record changes', function() {\n      it('should consume text node changes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div>{{ctxProp}}</div>'}));\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          ctx.ctxProp = 'Hello World!';\n\n          view.detectChanges();\n          expect(DOM.getInnerHTML(view.rootNodes[0])).toEqual('Hello World!');\n          async.done();\n        });\n      }));\n\n      it('should consume element binding changes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div [id]=\"ctxProp\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Hello World!';\n          view.detectChanges();\n\n          expect(view.rootNodes[0].id).toEqual('Hello World!');\n          async.done();\n        });\n      }));\n\n      it('should consume binding to aria-* attributes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div [attr.aria-label]=\"ctxProp\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Initial aria label';\n          view.detectChanges();\n          expect(DOM.getAttribute(view.rootNodes[0], 'aria-label')).toEqual('Initial aria label');\n\n          ctx.ctxProp = 'Changed aria label';\n          view.detectChanges();\n          expect(DOM.getAttribute(view.rootNodes[0], 'aria-label')).toEqual('Changed aria label');\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to property names where attr name and property name do not match', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div [tabindex]=\"ctxNumProp\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n          expect(view.rootNodes[0].tabIndex).toEqual(0);\n\n          ctx.ctxNumProp = 5;\n          view.detectChanges();\n          expect(view.rootNodes[0].tabIndex).toEqual(5);\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to camel-cased properties using dash-cased syntax in templates', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<input [read-only]=\"ctxBoolProp\">'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n          expect(view.rootNodes[0].readOnly).toBeFalsy();\n\n          ctx.ctxBoolProp = true;\n          view.detectChanges();\n          expect(view.rootNodes[0].readOnly).toBeTruthy();\n\n          async.done();\n        });\n      }));\n\n      it('should consume binding to inner-html', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div inner-html=\"{{ctxProp}}\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Some <span>HTML</span>';\n          view.detectChanges();\n          expect(DOM.getInnerHTML(view.rootNodes[0])).toEqual('Some <span>HTML</span>');\n\n          ctx.ctxProp = 'Some other <div>HTML</div>';\n          view.detectChanges();\n          expect(DOM.getInnerHTML(view.rootNodes[0])).toEqual('Some other <div>HTML</div>');\n\n          async.done();\n        });\n      }));\n\n      it('should ignore bindings to unknown properties', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({template: '<div unknown=\"{{ctxProp}}\"></div>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Some value';\n          view.detectChanges();\n          expect(DOM.hasProperty(view.rootNodes[0], 'unknown')).toBeFalsy();\n\n          async.done();\n        });\n      }));\n\n      it('should consume directive watch expression change.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var tpl =\n          '<div>' +\n            '<div my-dir [elprop]=\"ctxProp\"></div>' +\n            '<div my-dir elprop=\"Hi there!\"></div>' +\n            '<div my-dir elprop=\"Hi {{\\'there!\\'}}\"></div>' +\n            '<div my-dir elprop=\"One more {{ctxProp}}\"></div>' +\n          '</div>'\n        tb.overrideView(MyComp, new View({template: tpl, directives: [MyDir]}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Hello World!';\n          view.detectChanges();\n\n          expect(view.rawView.elementInjectors[0].get(MyDir).dirProp).toEqual('Hello World!');\n          expect(view.rawView.elementInjectors[1].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.rawView.elementInjectors[2].get(MyDir).dirProp).toEqual('Hi there!');\n          expect(view.rawView.elementInjectors[3].get(MyDir).dirProp).toEqual('One more Hello World!');\n          async.done();\n        });\n      }));\n\n      describe('pipes', () => {\n        beforeEachBindings(() => {\n          return [bind(ChangeDetection).toFactory(\n            () => new DynamicChangeDetection(new PipeRegistry({\n                \"double\" : [new DoublePipeFactory()]\n              })),\n            []\n          )];\n        });\n\n        it(\"should support pipes in bindings and bind config\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp,\n            new View({\n              template: '<component-with-pipes #comp [prop]=\"ctxProp | double\"></component-with-pipes>',\n              directives: [ComponentWithPipes]\n            }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n\n            ctx.ctxProp = 'a';\n            view.detectChanges();\n\n            var comp = view.rawView.locals.get(\"comp\");\n\n            // it is doubled twice: once in the binding, second time in the bind config\n            expect(comp.prop).toEqual('aaaa');\n            async.done();\n          });\n        }));\n      });\n\n      it('should support nested components.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<child-cmp></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n\n          expect(view.rootNodes).toHaveText('hello');\n          async.done();\n        });\n      }));\n\n      // GH issue 328 - https://github.com/angular/angular/issues/328\n      it('should support different directive types on a single node', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            template: '<child-cmp my-dir [elprop]=\"ctxProp\"></child-cmp>',\n            directives: [MyDir, ChildComp]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'Hello World!';\n          view.detectChanges();\n\n          var elInj = view.rawView.elementInjectors[0];\n          expect(elInj.get(MyDir).dirProp).toEqual('Hello World!');\n          expect(elInj.get(ChildComp).dirProp).toEqual(null);\n\n          async.done();\n        });\n      }));\n\n      it('should support directives where a binding attribute is not given', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            // No attribute \"el-prop\" specified.\n            template: '<p my-dir></p>',\n            directives: [MyDir]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          async.done();\n        });\n      }));\n\n      it('should support directives where a selector matches property binding', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            template: '<p [id]=\"ctxProp\"></p>',\n            directives: [IdComponent]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          ctx.ctxProp = 'some_id';\n          view.detectChanges();\n          expect(view.rootNodes[0].id).toEqual('some_id');\n          expect(view.rootNodes).toHaveText('Matched on id with some_id');\n\n          ctx.ctxProp = 'other_id';\n          view.detectChanges();\n          expect(view.rootNodes[0].id).toEqual('other_id');\n          expect(view.rootNodes).toHaveText('Matched on id with other_id');\n\n          async.done();\n        });\n      }));\n\n      it('should support template directives via `<template>` elements.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({\n            template: '<div><template some-viewport var-greeting=\"some-tmpl\"><copy-me>{{greeting}}</copy-me></template></div>',\n            directives: [SomeViewport]\n          }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n\n          var childNodesOfWrapper = view.rootNodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          async.done();\n        });\n      }));\n\n      it('should support template directives via `template` attribute.', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div><copy-me template=\"some-viewport: var greeting=some-tmpl\">{{greeting}}</copy-me></div>',\n          directives: [SomeViewport]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          view.detectChanges();\n\n          var childNodesOfWrapper = view.rootNodes[0].childNodes;\n          // 1 template + 2 copies.\n          expect(childNodesOfWrapper.length).toBe(3);\n          expect(childNodesOfWrapper[1].childNodes[0].nodeValue).toEqual('hello');\n          expect(childNodesOfWrapper[2].childNodes[0].nodeValue).toEqual('again');\n          async.done();\n        });\n      }));\n\n      it('should assign the component instance to a var-', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<p><child-cmp var-alice></child-cmp></p>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          expect(view.rawView.locals).not.toBe(null);\n          expect(view.rawView.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          async.done();\n        })\n      }));\n\n      it('should assign two component instances each with a var-', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<p><child-cmp var-alice></child-cmp><child-cmp var-bob></p>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          expect(view.rawView.locals).not.toBe(null);\n          expect(view.rawView.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n          expect(view.rawView.locals.get('bob')).toBeAnInstanceOf(ChildComp);\n          expect(view.rawView.locals.get('alice')).not.toBe(view.rawView.locals.get('bob'));\n\n          async.done();\n        })\n      }));\n\n      it('should assign the component instance to a var- with shorthand syntax', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<child-cmp #alice></child-cmp>',\n          directives: [ChildComp]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          expect(view.rawView.locals).not.toBe(null);\n          expect(view.rawView.locals.get('alice')).toBeAnInstanceOf(ChildComp);\n\n          async.done();\n        })\n      }));\n\n      it('should assign the element instance to a user-defined variable', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({template: '<p><div var-alice><i>Hello</i></div></p>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(view.rawView.locals).not.toBe(null);\n\n          var value = view.rawView.locals.get('alice');\n          expect(value).not.toBe(null);\n          expect(value.domElement.tagName.toLowerCase()).toEqual('div');\n\n          async.done();\n        })\n      }));\n\n\n      it('should assign the element instance to a user-defined variable with camelCase using dash-case', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp,\n          new View({template: '<p><div var-super-alice><i>Hello</i></div></p>'}));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          expect(view.rawView.locals).not.toBe(null);\n\n          var value = view.rawView.locals.get('superAlice');\n          expect(value).not.toBe(null);\n          expect(value.domElement.tagName.toLowerCase()).toEqual('div');\n\n          async.done();\n        })\n      }));\n\n      describe(\"BindingPropagationConfig\", () => {\n        it(\"can be used to disable the change detection of the component's template\",\n          inject([TestBed, AsyncTestCompleter], (tb, async) => {\n\n          tb.overrideView(MyComp, new View({\n            template: '<push-cmp #cmp></push-cmp>',\n            directives: [[[PushBasedComp]]]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n\n            var cmp = view.rawView.locals.get('cmp');\n\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(1);\n\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(1);\n\n            cmp.propagate();\n\n            view.detectChanges();\n            expect(cmp.numberOfChecks).toEqual(2);\n            async.done();\n          })\n        }));\n\n        it('should not affect updating properties on the component', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<push-cmp [prop]=\"ctxProp\" #cmp></push-cmp>',\n            directives: [[[PushBasedComp]]]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n\n            var cmp = view.rawView.locals.get('cmp');\n\n            ctx.ctxProp = \"one\";\n            view.detectChanges();\n            expect(cmp.prop).toEqual(\"one\");\n\n            ctx.ctxProp = \"two\";\n            view.detectChanges();\n            expect(cmp.prop).toEqual(\"two\");\n\n            async.done();\n          })\n        }));\n      });\n\n      it('should create a component that injects a @Parent', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<some-directive><cmp-with-parent #child></cmp-with-parent></some-directive>',\n          directives: [SomeDirective, CompWithParent]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var childComponent = view.rawView.locals.get('child');\n          expect(childComponent.myParent).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects an @Ancestor', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: `\n            <some-directive>\n              <p>\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var childComponent = view.rawView.locals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        })\n      }));\n\n      it('should create a component that injects an @Ancestor through viewport directive', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: `\n            <some-directive>\n              <p *if=\"true\">\n                <cmp-with-ancestor #child></cmp-with-ancestor>\n              </p>\n            </some-directive>`,\n          directives: [SomeDirective, CompWithAncestor, If]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          view.detectChanges();\n\n          var subview = view.rawView.viewContainers[1].get(0);\n          var childComponent = subview.locals.get('child');\n          expect(childComponent.myAncestor).toBeAnInstanceOf(SomeDirective);\n\n          async.done();\n        });\n      }));\n\n      it('should support events via EventEmitter', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<div emitter listener></div>',\n          directives: [DecoratorEmitingEvent, DecoratorListeningEvent]\n        }));\n\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n\n          var injector = view.rawView.elementInjectors[0];\n\n          var emitter = injector.get(DecoratorEmitingEvent);\n          var listener = injector.get(DecoratorListeningEvent);\n\n          expect(emitter.msg).toEqual('');\n          expect(listener.msg).toEqual('');\n\n          emitter.fireEvent('fired !');\n          expect(emitter.msg).toEqual('fired !');\n          expect(listener.msg).toEqual('fired !');\n\n          async.done();\n        });\n      }));\n\n      if (DOM.supportsDOMEvents()) {\n        it('should support render events', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div listener></div>',\n            directives: [DecoratorListeningDomEvent]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n\n            var injector = view.rawView.elementInjectors[0];\n\n            var listener = injector.get(DecoratorListeningDomEvent);\n\n            dispatchEvent(view.rootNodes[0], 'domEvent');\n\n            expect(listener.eventType).toEqual('domEvent');\n\n            async.done();\n          });\n        }));\n\n        it('should support render global events', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div listener></div>',\n            directives: [DecoratorListeningDomEvent]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n            var injector = view.rawView.elementInjectors[0];\n\n            var listener = injector.get(DecoratorListeningDomEvent);\n            dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n            expect(listener.eventType).toEqual('window_domEvent');\n\n            listener = injector.get(DecoratorListeningDomEvent);\n            dispatchEvent(DOM.getGlobalEventTarget(\"document\"), 'domEvent');\n            expect(listener.eventType).toEqual('document_domEvent');\n\n            view.rawView.dehydrate();\n            listener = injector.get(DecoratorListeningDomEvent);\n            dispatchEvent(DOM.getGlobalEventTarget(\"body\"), 'domEvent');\n            expect(listener.eventType).toEqual('');\n\n            async.done();\n          });\n        }));\n        \n        it('should support render global events from multiple directives', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<div *if=\"ctxBoolProp\" listener listenerother></div>',\n            directives: [If, DecoratorListeningDomEvent, DecoratorListeningDomEventOther]\n          }));\n\n          tb.createView(MyComp, {context: ctx}).then((view) => {\n            globalCounter = 0;\n            ctx.ctxBoolProp = true;\n            view.detectChanges();\n\n            var subview = view.rawView.viewContainers[0].get(0);\n            var injector = subview.elementInjectors[0];\n            var listener = injector.get(DecoratorListeningDomEvent);\n            var listenerother = injector.get(DecoratorListeningDomEventOther);\n            dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n            expect(listener.eventType).toEqual('window_domEvent');\n            expect(listenerother.eventType).toEqual('other_domEvent');\n            expect(globalCounter).toEqual(1);\n\n            ctx.ctxBoolProp = false;\n            view.detectChanges();\n            dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n            expect(globalCounter).toEqual(1);\n\n            ctx.ctxBoolProp = true;\n            view.detectChanges();\n            dispatchEvent(DOM.getGlobalEventTarget(\"window\"), 'domEvent');\n            expect(globalCounter).toEqual(2);\n\n            async.done();\n          });\n        }));\n      }\n\n      describe(\"dynamic components\", () => {\n        it('should support loading components dynamically', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<dynamic-comp #dynamic></dynamic-comp>',\n            directives: [DynamicComp]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            var dynamicComponent = view.rawView.locals.get(\"dynamic\");\n            expect(dynamicComponent).toBeAnInstanceOf(DynamicComp);\n\n            dynamicComponent.done.then((_) => {\n              view.detectChanges();\n              expect(view.rootNodes).toHaveText('hello');\n              async.done();\n            });\n          });\n        }));\n\n        it('should inject dependencies of the dynamically-loaded component', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          tb.overrideView(MyComp, new View({\n            template: '<dynamic-comp #dynamic></dynamic-comp>',\n            directives: [DynamicComp]\n          }));\n\n          tb.createView(MyComp).then((view) => {\n            var dynamicComponent = view.rawView.locals.get(\"dynamic\");\n            dynamicComponent.done.then((ref) => {\n              expect(ref.instance.dynamicallyCreatedComponentService).toBeAnInstanceOf(DynamicallyCreatedComponentService);\n              async.done();\n            });\n          });\n        }));\n      });\n\n      it('should support static attributes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        tb.overrideView(MyComp, new View({\n          template: '<input static type=\"text\" title>',\n          directives: [NeedsAttribute]\n        }));\n        tb.createView(MyComp, {context: ctx}).then((view) => {\n          var injector = view.rawView.elementInjectors[0];\n          var needsAttribute = injector.get(NeedsAttribute);\n          expect(needsAttribute.typeAttribute).toEqual('text');\n          expect(needsAttribute.titleAttribute).toEqual('');\n          expect(needsAttribute.fooAttribute).toEqual(null);\n\n          async.done();\n        });\n      }));\n\n\n    });\n\n    // Disabled until a solution is found, refs:\n    // - https://github.com/angular/angular/issues/776\n    // - https://github.com/angular/angular/commit/81f3f32\n    xdescribe('Missing directive checks', () => {\n\n      if (assertionsEnabled()) {\n\n        function expectCompileError(tb, inlineTpl, errMessage, done) {\n          tb.overrideView(MyComp, new View({template: inlineTpl}));\n          PromiseWrapper.then(tb.createView(MyComp),\n            (value) => {\n              throw new BaseException(\"Test failure: should not have come here as an exception was expected\");\n            },\n            (err) => {\n              expect(err.message).toEqual(errMessage);\n              done();\n            }\n          );\n        }\n\n        it('should raise an error if no directive is registered for a template with template bindings', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div><div template=\"if: foo\"></div></div>',\n            'Missing directive to handle \\'if\\' in <div template=\"if: foo\">',\n            () => async.done()\n          );\n        }));\n\n        it('should raise an error for missing template directive (1)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div><template foo></template></div>',\n            'Missing directive to handle: <template foo>',\n            () => async.done()\n          );\n        }));\n\n        it('should raise an error for missing template directive (2)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div><template *if=\"condition\"></template></div>',\n            'Missing directive to handle: <template *if=\"condition\">',\n            () => async.done()\n          );\n        }));\n\n        it('should raise an error for missing template directive (3)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          expectCompileError(\n            tb,\n            '<div *if=\"condition\"></div>',\n            'Missing directive to handle \\'if\\' in MyComp: <div *if=\"condition\">',\n            () => async.done()\n          );\n        }));\n      }\n    });\n\n  });\n}\n\nclass DynamicallyCreatedComponentService {\n}\n\n@DynamicComponent({\n  selector: 'dynamic-comp'\n})\nclass DynamicComp {\n  done;\n  constructor(loader:DynamicComponentLoader, location:ElementRef) {\n    this.done = loader.loadIntoExistingLocation(DynamicallyCreatedCmp, location);\n  }\n}\n\n@Component({\n  selector: 'hello-cmp',\n  injectables: [DynamicallyCreatedComponentService]\n})\n@View({\n  template: \"{{greeting}}\"\n})\nclass DynamicallyCreatedCmp {\n  greeting:string;\n  dynamicallyCreatedComponentService:DynamicallyCreatedComponentService;\n  constructor(a:DynamicallyCreatedComponentService) {\n    this.greeting = \"hello\";\n    this.dynamicallyCreatedComponentService = a;\n  }\n}\n\n@Decorator({\n  selector: '[my-dir]',\n  properties: {'dirProp':'elprop'}\n})\nclass MyDir {\n  dirProp:string;\n  constructor() {\n    this.dirProp = '';\n  }\n}\n\n@Component({\n  selector: 'push-cmp',\n  properties: {\n    'prop': 'prop'\n  },\n  changeDetection:ON_PUSH\n})\n@View({template: '{{field}}'})\nclass PushBasedComp {\n  numberOfChecks:number;\n  bpc:BindingPropagationConfig;\n  prop;\n\n  constructor(bpc:BindingPropagationConfig) {\n    this.numberOfChecks = 0;\n    this.bpc = bpc;\n  }\n\n  get field(){\n    this.numberOfChecks++;\n    return \"fixed\";\n  }\n\n  propagate() {\n    this.bpc.shouldBePropagatedFromRoot();\n  }\n}\n\n@Component()\n@View({directives: [\n]})\nclass MyComp {\n  ctxProp:string;\n  ctxNumProp;\n  ctxBoolProp;\n  constructor() {\n    this.ctxProp = 'initial value';\n    this.ctxNumProp = 0;\n    this.ctxBoolProp = false;\n  }\n}\n\n\n@Component({\n  selector: 'component-with-pipes',\n  properties: {\n    \"prop\": \"prop | double\"\n  }\n})\n@View({\n  template: ''\n})\nclass ComponentWithPipes {\n  prop:string;\n}\n\n@Component({\n  selector: 'child-cmp',\n  injectables: [MyService]\n})\n@View({\n  directives: [MyDir],\n  template: '{{ctxProp}}'\n})\nclass ChildComp {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Decorator({\n  selector: 'some-directive'\n})\nclass SomeDirective { }\n\n@Component({\n  selector: 'cmp-with-parent'\n})\n@View({\n  template: '<p>Component with an injected parent</p>',\n  directives: [SomeDirective]\n})\nclass CompWithParent {\n  myParent: SomeDirective;\n  constructor(@Parent() someComp: SomeDirective) {\n    this.myParent = someComp;\n  }\n}\n\n@Component({\n  selector: 'cmp-with-ancestor'\n})\n@View({\n  template: '<p>Component with an injected ancestor</p>',\n  directives: [SomeDirective]\n})\nclass CompWithAncestor {\n  myAncestor: SomeDirective;\n  constructor(@Ancestor() someComp: SomeDirective) {\n    this.myAncestor = someComp;\n  }\n}\n\n@Component({\n  selector: '[child-cmp2]',\n  injectables: [MyService]\n})\nclass ChildComp2 {\n  ctxProp:string;\n  dirProp:string;\n  constructor(service: MyService) {\n    this.ctxProp = service.greeting;\n    this.dirProp = null;\n  }\n}\n\n@Viewport({\n  selector: '[some-viewport]'\n})\nclass SomeViewport {\n  constructor(container: ViewContainer) {\n    container.create().setLocal('some-tmpl', 'hello');\n    container.create().setLocal('some-tmpl', 'again');\n  }\n}\n\nclass MyService {\n  greeting:string;\n  constructor() {\n    this.greeting = 'hello';\n  }\n}\n\nclass DoublePipe extends Pipe {\n  supports(obj) {\n    return true;\n  }\n\n  transform(value) {\n    return `${value}${value}`;\n  }\n}\n\nclass DoublePipeFactory {\n  supports(obj) {\n    return true;\n  }\n\n  create(bpc) {\n    return new DoublePipe();\n  }\n}\n\n@Decorator({\n  selector: '[emitter]',\n  hostListeners: {'event': 'onEvent($event)'}\n})\nclass DecoratorEmitingEvent {\n  msg: string;\n  emitter;\n\n  constructor(@EventEmitter('event') emitter:Function) {\n    this.msg = '';\n    this.emitter = emitter;\n  }\n\n  fireEvent(msg: string) {\n    this.emitter(msg);\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n\n@Decorator({\n  selector: '[listener]',\n  hostListeners: {'event': 'onEvent($event)'}\n})\nclass DecoratorListeningEvent {\n  msg: string;\n\n  constructor() {\n    this.msg = '';\n  }\n\n  onEvent(msg: string) {\n    this.msg = msg;\n  }\n}\n\n@Decorator({\n  selector: '[listener]',\n  hostListeners: {\n    'domEvent': 'onEvent($event.type)',\n    'window:domEvent': 'onWindowEvent($event.type)',\n    'document:domEvent': 'onDocumentEvent($event.type)',\n    'body:domEvent': 'onBodyEvent($event.type)'\n  }\n})\nclass DecoratorListeningDomEvent {\n  eventType: string;\n  constructor() {\n    this.eventType = '';\n  }\n  onEvent(eventType: string) {\n    this.eventType = eventType;\n  }\n  onWindowEvent(eventType: string) {\n    this.eventType = \"window_\" + eventType;\n  }\n  onDocumentEvent(eventType: string) {\n    this.eventType = \"document_\" + eventType;\n  }\n  onBodyEvent(eventType: string) {\n    this.eventType = \"body_\" + eventType;\n  }\n}\n\nvar globalCounter = 0;\n@Decorator({\n  selector: '[listenerother]',\n  hostListeners: {\n    'window:domEvent': 'onEvent($event.type)'\n  }\n})\nclass DecoratorListeningDomEventOther {\n  eventType: string;\n  counter: int;\n  constructor() {\n    this.eventType = '';\n  }\n  onEvent(eventType: string) {\n    globalCounter++;\n    this.eventType = \"other_\" + eventType;\n  }\n}\n\n@Component({\n  selector: '[id]',\n  properties: {'id': 'id'}\n})\n@View({\n  template: '<div>Matched on id with {{id}}</div>'\n})\nclass IdComponent {\n  id: string;\n}\n\n@Decorator({\n  selector: '[static]'\n})\nclass NeedsAttribute {\n  typeAttribute;\n  titleAttribute;\n  fooAttribute;\n  constructor(@Attribute('type') typeAttribute: string, @Attribute('title') titleAttribute: string, @Attribute('foo') fooAttribute: string) {\n    this.typeAttribute = typeAttribute;\n    this.titleAttribute = titleAttribute;\n    this.fooAttribute = fooAttribute;\n  }\n}\n"]}