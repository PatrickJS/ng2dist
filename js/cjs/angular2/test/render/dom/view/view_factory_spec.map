{"version":3,"sources":["view_factory_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/view/view_factory_spec.js","sourcesContent":["import {describe, ddescribe, it, iit, xit, xdescribe, expect, beforeEach, el} from 'angular2/test_lib';\n\nimport {ViewFactory} from 'angular2/src/render/dom/view/view_factory';\nimport {RenderProtoView} from 'angular2/src/render/dom/view/proto_view';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\n\nexport function main() {\n  function createViewFactory({capacity}):ViewFactory {\n    return new ViewFactory(capacity, null, null);\n  }\n\n  function createPv() {\n    return new RenderProtoView({\n      element: el('<div></div>'),\n      isRootView: false,\n      elementBinders: []\n    });\n  }\n\n  describe('RenderViewFactory', () => {\n    it('should create views', () => {\n      var pv = createPv();\n      var vf = createViewFactory({\n        capacity: 1\n      });\n      expect(vf.getView(pv) instanceof RenderView).toBe(true);\n    });\n\n    describe('caching', () => {\n\n      it('should support multiple RenderProtoViews', () => {\n        var pv1 = createPv();\n        var pv2 = createPv();\n        var vf = createViewFactory({ capacity: 2 });\n        var view1 = vf.getView(pv1);\n        var view2 = vf.getView(pv2);\n        vf.returnView(view1);\n        vf.returnView(view2);\n\n        expect(vf.getView(pv1)).toBe(view1);\n        expect(vf.getView(pv2)).toBe(view2);\n      });\n\n      it('should reuse the newest view that has been returned', () => {\n        var pv = createPv();\n        var vf = createViewFactory({ capacity: 2 });\n        var view1 = vf.getView(pv);\n        var view2 = vf.getView(pv);\n        vf.returnView(view1);\n        vf.returnView(view2);\n\n        expect(vf.getView(pv)).toBe(view2);\n      });\n\n      it('should not add views when the capacity has been reached', () => {\n        var pv = createPv();\n        var vf = createViewFactory({ capacity: 2 });\n        var view1 = vf.getView(pv);\n        var view2 = vf.getView(pv);\n        var view3 = vf.getView(pv);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        vf.returnView(view3);\n\n        expect(vf.getView(pv)).toBe(view2);\n        expect(vf.getView(pv)).toBe(view1);\n      });\n\n    });\n\n  });\n}\n"]}