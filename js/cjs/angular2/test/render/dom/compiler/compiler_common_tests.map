{"version":3,"sources":["compiler_common_tests.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/compiler/compiler_common_tests.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  IS_DARTIUM,\n  it,\n} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {List, ListWrapper, Map, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\nimport {Type, isBlank, stringify, isPresent} from 'angular2/src/facade/lang';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nimport {Compiler, CompilerCache} from 'angular2/src/render/dom/compiler/compiler';\nimport {ProtoViewDto, ViewDefinition} from 'angular2/src/render/api';\nimport {CompileElement} from 'angular2/src/render/dom/compiler/compile_element';\nimport {CompileStep} from 'angular2/src/render/dom/compiler/compile_step'\nimport {CompileStepFactory} from 'angular2/src/render/dom/compiler/compile_step_factory';\nimport {CompileControl} from 'angular2/src/render/dom/compiler/compile_control';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\n\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\n\nexport function runCompilerCommonTests() {\n  describe('compiler', function() {\n    var mockStepFactory;\n\n    function createCompiler(processClosure, urlData = null) {\n      if (isBlank(urlData)) {\n        urlData = MapWrapper.create();\n      }\n      var tplLoader =  new FakeTemplateLoader(urlData);\n      mockStepFactory = new MockStepFactory([new MockStep(processClosure)]);\n      return new Compiler(mockStepFactory, tplLoader);\n    }\n\n    it('should run the steps and build the AppProtoView of the root element', inject([AsyncTestCompleter], (async) => {\n      var compiler = createCompiler((parent, current, control) => {\n        current.inheritedProtoView.bindVariable('b', 'a');\n      });\n      compiler.compile(new ViewDefinition({\n        componentId: 'someComponent',\n        template: '<div></div>'\n      })).then( (protoView) => {\n        expect(protoView.variableBindings).toEqual(MapWrapper.createFromStringMap({\n          'a': 'b'\n        }));\n        async.done();\n      });\n    }));\n\n    it('should use the inline template and compile in sync', inject([AsyncTestCompleter], (async) => {\n      var compiler = createCompiler(EMPTY_STEP);\n      compiler.compile(new ViewDefinition({\n        componentId: 'someId',\n        template: 'inline component'\n      })).then( (protoView) => {\n        expect(DOM.getInnerHTML(protoView.render.delegate.element)).toEqual('inline component');\n        async.done();\n      });\n    }));\n\n    it('should load url templates', inject([AsyncTestCompleter], (async) => {\n      var urlData = MapWrapper.createFromStringMap({\n        'someUrl': 'url component'\n      });\n      var compiler = createCompiler(EMPTY_STEP, urlData);\n      compiler.compile(new ViewDefinition({\n        componentId: 'someId',\n        absUrl: 'someUrl'\n      })).then( (protoView) => {\n        expect(DOM.getInnerHTML(protoView.render.delegate.element)).toEqual('url component');\n        async.done();\n      });\n    }));\n\n    it('should report loading errors', inject([AsyncTestCompleter], (async) => {\n      var compiler = createCompiler(EMPTY_STEP, MapWrapper.create());\n      PromiseWrapper.catchError(compiler.compile(new ViewDefinition({\n        componentId: 'someId',\n        absUrl: 'someUrl'\n      })), (e) => {\n        expect(e.message).toContain(`Failed to load the template \"someId\"`);\n        async.done();\n      });\n    }));\n\n    it('should wait for async subtasks to be resolved', inject([AsyncTestCompleter], (async) => {\n      var subTasksCompleted = false;\n\n      var completer = PromiseWrapper.completer();\n\n      var compiler = createCompiler( (parent, current, control) => {\n        ListWrapper.push(mockStepFactory.subTaskPromises, completer.promise.then((_) => {\n          subTasksCompleted = true;\n        }));\n      });\n\n      // It should always return a Promise because the subtask is async\n      var pvPromise = compiler.compile(new ViewDefinition({\n        componentId: 'someId',\n        template: 'some component'\n      }));\n      expect(pvPromise).toBePromise();\n      expect(subTasksCompleted).toEqual(false);\n\n      // The Promise should resolve after the subtask is ready\n      completer.resolve(null);\n      pvPromise.then((protoView) => {\n        expect(subTasksCompleted).toEqual(true);\n        async.done();\n      });\n    }));\n\n  });\n\n}\n\nclass MockStepFactory extends CompileStepFactory {\n  steps:List<CompileStep>;\n  subTaskPromises:List<Promise>;\n  constructor(steps) {\n    super();\n    this.steps = steps;\n  }\n  createSteps(template, subTaskPromises) {\n    this.subTaskPromises = subTaskPromises;\n    ListWrapper.forEach(this.subTaskPromises, (p) => ListWrapper.push(subTaskPromises, p) );\n    return this.steps;\n  }\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\nvar EMPTY_STEP = (parent, current, control) => {\n  if (isPresent(parent)) {\n    current.inheritedProtoView = parent.inheritedProtoView;\n  }\n};\n\nclass FakeTemplateLoader extends TemplateLoader {\n  _urlData: Map<string, string>;\n  constructor(urlData) {\n    super(null, new UrlResolver());\n    this._urlData = urlData;\n  }\n\n  load(template: ViewDefinition) {\n    if (isPresent(template.template)) {\n      return PromiseWrapper.resolve(DOM.createTemplate(template.template));\n    }\n\n    if (isPresent(template.absUrl)) {\n      var content = MapWrapper.get(this._urlData, template.absUrl);\n      if (isPresent(content)) {\n        return PromiseWrapper.resolve(DOM.createTemplate(content));\n      }\n    }\n\n    return PromiseWrapper.reject('Load failed');\n  }\n}\n"]}