{"version":3,"sources":["pipeline_spec.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;MAArC,EAAC,GAAE,YAAqB;AAAE,iBAAwB;IAAE,AAA9B,CAAC;oBAAvB,EAAC,GAAE,YAAqB;AAAE,+BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;;;;;SAA1D,EAAC,8BAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,+BAAqB,wCAA2B,CAAA,+BAAqB,GAAK,EAAC,OAAM,8BAAmB,CAAC,AAD/D,CACgE;AADtG,WAAO;AAAG,aAAS;AAAG,KAAC;AAAG,SAAK;AAAG,MAAE;AAAG,YAAQ;AAAG,KAAC;SAA3D,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAAtG,cAAU;AAAG,OAAG;AAAG,aAAS;EAC5B,IAAE,EAFV,EAAC,+CAAoB,CAAA,OAAM,AAAC,gCAAkB,CACtC,CAAA,gDAAqB,yDAA2B,CAAA,gDAAqB,GAAK,EAAC,OAAM,+CAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAEtG,YAAQ;AAAG,gBAAY;AAAG,gBAAY;EAEtC,gBAAc,EALtB,EAAC,0EAAoB,CAAA,OAAM,AAAC,qDAAkB,CACtC,CAAA,2EAAqB,oFAA2B,CAAA,2EAAqB,GAAK,EAAC,OAAM,0EAAmB,CAAC,AAD/D,CACgE;EAKtG,eAAa,EANrB,EAAC,yEAAoB,CAAA,OAAM,AAAC,oDAAkB,CACtC,CAAA,0EAAqB,mFAA2B,CAAA,0EAAqB,GAAK,EAAC,OAAM,yEAAmB,CAAC,AAD/D,CACgE;EAMtG,YAAU,EAPlB,EAAC,sEAAoB,CAAA,OAAM,AAAC,iDAAkB,CACtC,CAAA,uEAAqB,gFAA2B,CAAA,uEAAqB,GAAK,EAAC,OAAM,sEAAmB,CAAC,AAD/D,CACgE;EAOtG,eAAa,EARrB,EAAC,yEAAoB,CAAA,OAAM,AAAC,oDAAkB,CACtC,CAAA,0EAAqB,mFAA2B,CAAA,0EAAqB,GAAK,EAAC,OAAM,yEAAmB,CAAC,AAD/D,CACgE;EAStG,iBAAe,EAVvB,EAAC,2EAAoB,CAAA,OAAM,AAAC,mDAAkB,CACtC,CAAA,4EAAqB,qFAA2B,CAAA,4EAAqB,GAAK,EAAC,OAAM,2EAAmB,CAAC,AAD/D,CACgE;AAWvG,OAAS,KAAG,CAAE,AAAD;AAClB,SAAO,AAAC,CAAC,kBAAiB,GAAG,SAAC,AAAD;AAC3B,WAAO,AAAC,CAAC,sBAAqB,GAAG,SAAC,AAAD;AAC/B,OAAC,AAAC,CAAC,uEAAsE,GAAG,SAAC,AAAD,CAAM;AAChF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,oEAAmE,CAAC,CAAC;AAEtF,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,GAAI,gBAAc,AAAC,CAAC,CAAC,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAEhF,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;MACvD,EAAC,CAAC;AAEF,OAAC,AAAC,CAAC,4DAA2D,GAAG,SAAC,AAAD,CAAM;AACrE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,oFAAmF,CAAC,CAAC;AAEtG,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,mBAAiB,AAAC,EAAC,CAAG,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAAC,CAAC,CAAC;AAC1F,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAEvC,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAC,CAAC;AACtC,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAC,CAAC,CAAC;MAClD,EAAC,CAAC;IACJ,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,8CAA6C,GAAG,SAAC,AAAD;AACjD,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,2DAA0D,CAAC,CAAC;AAC7E,AAAI,QAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAC7E,WAAI,SAAQ,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAG,WAAS,CAAC,CAAC,CAAG;AAC5D,gBAAM,mBAAmB,EAAI,IAAI,iBAAe,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC;QACpE;AAAA,MACF,EAAC,CAAC,CAAC,CAAC;AACJ,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACvC,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,mBAAmB,CAAC,KAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,mBAAmB,CAAC,CAAC;AACzE,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,mBAAmB,CAAC,KAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,mBAAmB,CAAC,CAAC;IAC3E,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,kDAAiD,GAAG,SAAC,AAAD;AACrD,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,4DAA2D,CAAC,CAAC;AAC9E,AAAI,QAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAC7E,WAAI,SAAQ,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAG,OAAK,CAAC,CAAC,CAAG;AACxD,gBAAM,YAAY,AAAC,EAAC,CAAC;QACvB;AAAA,MACF,EAAC,CAAC,CAAC,CAAC;AACJ,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACvC,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,CAAC,KAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,CAAC,CAAC;AACjF,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,CAAC,KAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,CAAC,CAAC;IACnF,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,uCAAsC,GAAG,SAAC,AAAD,CAAM;AAChD,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,EAAC,AAAC,CAAC,aAAY,CAAC,CAAC;AACnC,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,GAAI,gBAAc,AAAC,CAAC,EAAC,CAAC,QAAQ,AAAC,CAAC,WAAU,CAAC,CAAC;AAC1D,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,WAAW,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;IAC1C,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,sDAAqD,GAAG,SAAC,AAAD;AACzD,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,6DAA4D,CAAC,CAAC;AAC/E,AAAI,QAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAC7E,WAAI,SAAQ,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAG,OAAK,CAAC,CAAC,CAAG;AACxD,gBAAM,YAAY,AAAC,EAAC,CAAC;QACvB;AAAA,MACF,EAAC,CAAC,CAAC,CAAC;AACJ,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACvC,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,iBAAiB,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;AAClE,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,iBAAiB,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;AAClE,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,iBAAiB,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;AAClE,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,OAAO,CAAC,KAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,CAAC,CAAC;AACxF,WAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,OAAO,CAAC,KAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,uBAAuB,CAAC,CAAC;IAC1F,EAAC,CAAC;AAEF,KAAC,AAAC,CAAC,4EAA2E,GAAG,SAAC,AAAD,CAAM;AACrF,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,2EAA0E,CAAC,CAAC;AAC7F,AAAI,QAAA,CAAA,IAAG,EAAI,GAAC,CAAC;AACb,AAAI,QAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,GAAI,yBAAuB,AAAC,EAAC,CAC7B,CAAA,gBAAe,AAAC,CAAC,IAAG,CAAC,CACvB,CAAC,CAAC;AACF,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAEvC,WAAK,AAAC,CAAC,OAAM,OAAO,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;AAC9B,WAAK,AAAC,CAAC,IAAG,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAC,CAAA;IACnC,EAAC,CAAC;AAEF,WAAO,AAAC,CAAC,mBAAkB,GAAG,SAAC,AAAD;AAC5B,OAAC,AAAC,CAAC,wEAAuE,GAAG,SAAC,AAAD,CAAM;AACjF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,gEAA+D,CAAC,CAAC;AAClF,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;MACjE,EAAC,CAAC;AAEF,OAAC,AAAC,CAAC,yEAAwE,GAAG,SAAC,AAAD,CAAM;AAClF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0EAAyE,CAAC,CAAC;AAC5F,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,kBAAgB,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AACnF,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;MAC5E,EAAC,CAAC;AAEF,OAAC,AAAC,CAAC,2EAA0E,GAAG,SAAC,AAAD,CAAM;AACpF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0EAAyE,CAAC,CAAC;AAC5F,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AAChE,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,YAAU,CAAG,YAAU,CAAG,YAAU,CAAC,CAAC,CAAC;AACnF,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,IAAE,CAAG,UAAQ,CAAG,IAAE,CAAC,CAAC,CAAC;MAC5E,EAAC,CAAC;AAEF,OAAC,AAAC,CAAC,4DAA2D,GAAG,SAAC,AAAD,CAAM;AACrE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,gEAA+D,CAAC,CAAC;AAClF,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,iBAAgB,AAAC,CAAC,OAAM,CAAG,SAAO,CAAC,CACnC,CAAA,gBAAe,AAAC,CAAC,QAAO,CAAC,CAC3B,CAAC,CAAC;AACF,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,YAAU,CAAG,kBAAgB,CAAG,YAAU,CAAG,MAAI,CAAC,CAAC,CAAC;AACnF,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,UAAQ,CAAG,UAAQ,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;MAC5E,EAAC,CAAC;IAEJ,EAAC,CAAC;AAEF,WAAO,AAAC,CAAC,kBAAiB,GAAG,SAAC,AAAD;AAC3B,OAAC,AAAC,CAAC,8DAA6D,GAAG,SAAC,AAAD;AACjE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,sCAAqC,CAAC,CAAC;AACxD,AAAI,UAAA,CAAA,SAAQ,EAAI,GAAC,CAAC;AAClB,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,eAAa,AAAC,CAAC,EAAC,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAC;AAC3D,AAAI,UAAA,CAAA,QAAO,EAAI,IAAI,gBAAc,AAAC,CAAC,CACjC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AACzC,aAAI,aAAY,OAAO,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAG,KAAG,CAAC,CAAG,IAAE,CAAC,CAAG;AACtE,kBAAM,SAAS,AAAC,CAAC,QAAO,CAAC,CAAC;UAC5B;AAAA,QACF,EAAC,CACD,CAAA,gBAAe,AAAC,CAAC,SAAQ,CAAC,CAC5B,CAAC,CAAC;AACF,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,QAAO,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,aAAK,AAAC,CAAC,MAAK,CAAE,CAAA,CAAC,CAAC,KAAK,AAAC,CAAC,QAAO,CAAC,CAAC;AAChC,aAAK,AAAC,CAAC,SAAQ,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,MAAI,CAAG,MAAI,CAAC,CAAC,CAAC;AAC9C,aAAK,AAAC,CAAC,WAAU,AAAC,CAAC,MAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAE,CAAG,IAAE,CAAG,IAAE,CAAC,CAAC,CAAC;MACtD,EAAC,CAAC;IACJ,EAAC,CAAC;EAEJ,EAAC,CAAC;AACJ;AArLA,AAAI,EAAA,WAuLJ,SAAM,SAAO,CAEC,OAAM,CAAG;AACnB,AA1LJ,gBAAc,iBAAiB,AAAC,WAAkB,KAAK,MAAmB,CA0L/D;AACP,KAAG,eAAe,EAAI,QAAM,CAAC;AAC/B,AA5LsC,CAAA;AAAxC,AAAI,EAAA,qBAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,YA6L3B,OAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AAC7E,OAAG,eAAe,AAAC,CAAC,MAAK,CAAG,QAAM,CAAG,QAAM,CAAC,CAAC;EAC/C,MARqB,YAAU,CAtLuB;AADxD,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA4LT,cAAa,IAAW,cAAa,IAAW,cAAa,GA5L7B;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,qBAkMG,SAAM,mBAAiB;AAlM9B,gBAAc,iBAAiB,AAAC,qBACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;;AAwMlD,AAzMwC,CAAA;AAAxC,AAAI,EAAA,yCAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,sBAmM3B,OAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AAC7E,AAAI,MAAA,CAAA,YAAW,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC;AACpD,OAAI,UAAS,SAAS,AAAC,CAAC,YAAW,CAAG,kBAAgB,CAAC,CAAG;AACxD,YAAM,gBAAgB,EAAI,MAAI,CAAC;IACjC;AAAA,EACF,MANsC,YAAU,CAjMM;AADxD,KAAK,eAAe,AAAC,oDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkMT,cAAa,IAAW,cAAa,IAAW,cAAa,GAlM7B;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,2BA2MJ,SAAM,yBAAuB;AA3M7B,gBAAc,iBAAiB,AAAC,2BACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;;AAiNlD,AAlNwC,CAAA;AAAxC,AAAI,EAAA,qDAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,4BA4M3B,OAAM,CAAN,UAAQ,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AAC7E,AAAI,MAAA,CAAA,YAAW,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAC,CAAC;AACpD,OAAI,UAAS,SAAS,AAAC,CAAC,YAAW,CAAG,iBAAe,CAAC,CAAG;AACvD,YAAM,qBAAqB,AAAC,EAAC,CAAC;IAChC;AAAA,EACF,MANqC,YAAU,CA1MO;AADxD,KAAK,eAAe,AAAC,0DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA2MT,cAAa,IAAW,cAAa,IAAW,cAAa,GA3M7B;EAAC,CAAC,CAAC,CAAC;AAmNrD,OAAS,SAAO,CAAE,GAAE,CAAG,CAAA,MAAK,CAAG,CAAA,OAAM,CAAG;AACtC,AAAI,IAAA,CAAA,QAAO,EAAI,GAAC,CAAC;AACjB,KAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AACrB,WAAO,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,MAAK,QAAQ,CAAG,KAAG,CAAC,CAAA,CAAI,IAAE,CAAC;EACzD;AAAA,AACA,YAAU,KAAK,AAAC,CAAC,GAAE,CAAG,CAAA,QAAO,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAG,KAAG,CAAC,CAAC,CAAC;AAC3E;AAAA,AAEA,OAAS,iBAAe,CAAE,GAAE;AAC1B,OAAO,IAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAChD,WAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;EAChC,EAAC,CAAC;AACJ;AAEA,OAAS,kBAAgB,CAAE,SAAQ,CAAG,CAAA,GAAE;AACtC,AAAI,IAAA,CAAA,aAAY,EAAI,EAAA,CAAC;AACrB,OAAO,IAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AAChD,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,GAAE,aAAa,AAAC,CAAC,OAAM,QAAQ,CAAG,UAAQ,CAAC,CAAC;AACjE,OAAI,SAAQ,AAAC,CAAC,cAAa,CAAC,CAAG;AAC7B,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,aAAY,SAAS,AAAC,CAAC,cAAa,CAAG,GAAC,CAAC,CAAC;AAC5D,YAAO,WAAU,EAAI,EAAA,CAAG;AACtB,cAAM,UAAU,AAAC,CAAC,GAAI,eAAa,AAAC,CAAC,EAAC,AAAC,EAAC,UAAS,EAAC,UAAQ,EAAC,IAAG,EAAC,CAAA,aAAY,EAAE,EAAC,UAAO,EAAC,CAAC,CAAC,CAAC;AACzF,kBAAU,EAAE,CAAC;MACf;AAAA,IACF;AAAA,AACA,WAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;EAChC,EAAC,CAAC;AACJ;AAEA,OAAS,YAAU,CAAE,MAAK;AACxB,AAAI,IAAA,CAAA,KAAI,EAAI,GAAC,CAAC;AACd,YAAU,QAAQ,AAAC,CAAC,MAAK,GAAG,SAAC,OAAM,CAAM;AACvC,WAAO,AAAC,CAAC,KAAI,CAAG,KAAG,CAAG,QAAM,CAAC,CAAC;EAChC,EAAC,CAAC;AACF,OAAO,MAAI,CAAC;AACd;AACA","file":"angular2/test/render/dom/compiler/pipeline_spec.js","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {ListWrapper, List, MapWrapper} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {isPresent, NumberWrapper, StringWrapper} from 'angular2/src/facade/lang';\n\nimport {CompilePipeline} from 'angular2/src/render/dom/compiler/compile_pipeline';\nimport {CompileElement} from 'angular2/src/render/dom/compiler/compile_element';\nimport {CompileStep} from 'angular2/src/render/dom/compiler/compile_step'\nimport {CompileControl} from 'angular2/src/render/dom/compiler/compile_control';\n\nimport {ProtoViewBuilder} from 'angular2/src/render/dom/view/proto_view_builder';\n\nexport function main() {\n  describe('compile_pipeline', () => {\n    describe('children compilation', () => {\n      it('should walk the tree in depth first order including template contents', () => {\n        var element = el('<div id=\"1\"><template id=\"2\"><span id=\"3\"></span></template></div>');\n\n        var step0Log = [];\n        var results = new CompilePipeline([createLoggerStep(step0Log)]).process(element);\n\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(resultIdLog(results)).toEqual(['1', '2', '3']);\n      });\n\n      it('should stop walking the tree when compileChildren is false', () => {\n        var element = el('<div id=\"1\"><template id=\"2\" ignore-children><span id=\"3\"></span></template></div>');\n\n        var step0Log = [];\n        var pipeline = new CompilePipeline([new IgnoreChildrenStep(), createLoggerStep(step0Log)]);\n        var results = pipeline.process(element);\n\n        expect(step0Log).toEqual(['1', '1<2']);\n        expect(resultIdLog(results)).toEqual(['1', '2']);\n      });\n    });\n\n    it('should inherit protoViewBuilders to children', () => {\n      var element = el('<div><div><span viewroot><span></span></span></div></div>');\n      var pipeline = new CompilePipeline([new MockStep((parent, current, control) => {\n        if (isPresent(DOM.getAttribute(current.element, 'viewroot'))) {\n          current.inheritedProtoView = new ProtoViewBuilder(current.element);\n        }\n      })]);\n      var results = pipeline.process(element);\n      expect(results[0].inheritedProtoView).toBe(results[1].inheritedProtoView);\n      expect(results[2].inheritedProtoView).toBe(results[3].inheritedProtoView);\n    });\n\n    it('should inherit elementBinderBuilders to children', () => {\n      var element = el('<div bind><div><span bind><span></span></span></div></div>');\n      var pipeline = new CompilePipeline([new MockStep((parent, current, control) => {\n        if (isPresent(DOM.getAttribute(current.element, 'bind'))) {\n          current.bindElement();\n        }\n      })]);\n      var results = pipeline.process(element);\n      expect(results[0].inheritedElementBinder).toBe(results[1].inheritedElementBinder);\n      expect(results[2].inheritedElementBinder).toBe(results[3].inheritedElementBinder);\n    });\n\n    it('should mark root elements as viewRoot', () => {\n      var rootElement = el('<div></div>');\n      var results = new CompilePipeline([]).process(rootElement);\n      expect(results[0].isViewRoot).toBe(true);\n    });\n\n    it('should calculate distanceToParent / parent correctly', () => {\n      var element = el('<div bind><div bind></div><div><div bind></div></div></div>');\n      var pipeline = new CompilePipeline([new MockStep((parent, current, control) => {\n        if (isPresent(DOM.getAttribute(current.element, 'bind'))) {\n          current.bindElement();\n        }\n      })]);\n      var results = pipeline.process(element);\n      expect(results[0].inheritedElementBinder.distanceToParent).toBe(0);\n      expect(results[1].inheritedElementBinder.distanceToParent).toBe(1);\n      expect(results[3].inheritedElementBinder.distanceToParent).toBe(2);\n      expect(results[1].inheritedElementBinder.parent).toBe(results[0].inheritedElementBinder);\n      expect(results[3].inheritedElementBinder.parent).toBe(results[0].inheritedElementBinder);\n    });\n\n    it('should not execute further steps when ignoreCurrentElement has been called', () => {\n      var element = el('<div id=\"1\"><span id=\"2\" ignore-current></span><span id=\"3\"></span></div>');\n      var logs = [];\n      var pipeline = new CompilePipeline([\n        new IgnoreCurrentElementStep(),\n        createLoggerStep(logs),\n      ]);\n      var results = pipeline.process(element);\n\n      expect(results.length).toBe(2);\n      expect(logs).toEqual(['1', '1<3'])\n    });\n\n    describe('control.addParent', () => {\n      it('should report the new parent to the following processor and the result', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createLoggerStep(step1Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', '3']);\n      });\n\n      it('should allow to add a parent by multiple processors to the same element', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" wrap1=\"1\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createWrapperStep('wrap1', step1Log),\n          createLoggerStep(step2Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap1#0', 'wrap1#0<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap1#0', '2', '3']);\n      });\n\n      it('should allow to add a parent by multiple processors to different elements', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"1\" id=\"2\"><b id=\"3\" wrap1=\"1\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var step2Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createWrapperStep('wrap1', step1Log),\n          createLoggerStep(step2Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<3']);\n        expect(step2Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<2', '2<wrap1#0', 'wrap1#0<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', '2', 'wrap1#0', '3']);\n      });\n\n      it('should allow to add multiple parents by the same processor', () => {\n        var element = el('<div id=\"1\"><span wrap0=\"2\" id=\"2\"><b id=\"3\"></b></span></div>');\n        var step0Log = [];\n        var step1Log = [];\n        var pipeline = new CompilePipeline([\n          createWrapperStep('wrap0', step0Log),\n          createLoggerStep(step1Log)\n        ]);\n        var result = pipeline.process(element);\n        expect(step0Log).toEqual(['1', '1<2', '2<3']);\n        expect(step1Log).toEqual(['1', '1<wrap0#0', 'wrap0#0<wrap0#1', 'wrap0#1<2', '2<3']);\n        expect(resultIdLog(result)).toEqual(['1', 'wrap0#0', 'wrap0#1', '2', '3']);\n      });\n\n    });\n\n    describe('control.addChild', () => {\n      it('should report the new child to all processors and the result', () => {\n        var element = el('<div id=\"1\"><div id=\"2\"></div></div>');\n        var resultLog = [];\n        var newChild = new CompileElement(el('<div id=\"3\"></div>'));\n        var pipeline = new CompilePipeline([\n          new MockStep((parent, current, control) => {\n            if (StringWrapper.equals(DOM.getAttribute(current.element, 'id'), '1')) {\n              control.addChild(newChild);\n            }\n          }),\n          createLoggerStep(resultLog)\n        ]);\n        var result = pipeline.process(element);\n        expect(result[2]).toBe(newChild);\n        expect(resultLog).toEqual(['1', '1<2', '1<3']);\n        expect(resultIdLog(result)).toEqual(['1', '2', '3']);\n      });\n    });\n\n  });\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n\nexport class IgnoreChildrenStep extends CompileStep {\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attributeMap = DOM.attributeMap(current.element);\n    if (MapWrapper.contains(attributeMap, 'ignore-children')) {\n      current.compileChildren = false;\n    }\n  }\n}\n\nclass IgnoreCurrentElementStep extends CompileStep {\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    var attributeMap = DOM.attributeMap(current.element);\n    if (MapWrapper.contains(attributeMap, 'ignore-current')) {\n      control.ignoreCurrentElement();\n    }\n  }\n}\n\nfunction logEntry(log, parent, current) {\n  var parentId = '';\n  if (isPresent(parent)) {\n    parentId = DOM.getAttribute(parent.element, 'id') + '<';\n  }\n  ListWrapper.push(log, parentId + DOM.getAttribute(current.element, 'id'));\n}\n\nfunction createLoggerStep(log) {\n  return new MockStep((parent, current, control) => {\n    logEntry(log, parent, current);\n  });\n}\n\nfunction createWrapperStep(wrapperId, log) {\n  var nextElementId = 0;\n  return new MockStep((parent, current, control) => {\n    var parentCountStr = DOM.getAttribute(current.element, wrapperId);\n    if (isPresent(parentCountStr)) {\n      var parentCount = NumberWrapper.parseInt(parentCountStr, 10);\n      while (parentCount > 0) {\n        control.addParent(new CompileElement(el(`<a id=\"${wrapperId}#${nextElementId++}\"></a>`)));\n        parentCount--;\n      }\n    }\n    logEntry(log, parent, current);\n  });\n}\n\nfunction resultIdLog(result) {\n  var idLog = [];\n  ListWrapper.forEach(result, (current) => {\n    logEntry(idLog, null, current);\n  });\n  return idLog;\n}\n"]}