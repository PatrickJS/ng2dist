{"version":3,"sources":["view_splitter_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/compiler/view_splitter_spec.js","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ViewSplitter} from 'angular2/src/render/dom/compiler/view_splitter';\nimport {CompilePipeline} from 'angular2/src/render/dom/compiler/compile_pipeline';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Lexer, Parser} from 'angular2/change_detection';\n\nexport function main() {\n  describe('ViewSplitter', () => {\n\n    function createPipeline() {\n      return new CompilePipeline([new ViewSplitter(new Parser(new Lexer()))]);\n    }\n\n    describe('<template> elements', () => {\n\n      it('should move the content into a new <template> element and mark that as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n\n        expect(DOM.getOuterHTML(results[1].element)).toEqual('<template if=\"true\" class=\"ng-binding\"></template>');\n        expect(results[1].isViewRoot).toBe(false);\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<template>a</template>');\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should mark the new <template> element as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should not wrap the root element', () => {\n        var rootElement = el('<div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toBe(1);\n        expect(DOM.getOuterHTML(rootElement)).toEqual('<div></div>');\n      });\n\n      it('should copy over the elementDescription', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].elementDescription).toBe(results[1].elementDescription);\n      });\n\n      it('should clean out the inheritedElementBinder', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedElementBinder).toBe(null);\n      });\n\n      it('should create a nestedProtoView', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView).not.toBe(null);\n        expect(results[2].inheritedProtoView).toBe(results[1].inheritedElementBinder.nestedProtoView);\n        expect(DOM.getOuterHTML(results[2].inheritedProtoView.rootElement)).toEqual('<template>a</template>');\n      });\n\n    });\n\n    describe('elements with template attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template class=\"ng-binding\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span template=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should work with top-level template node', () => {\n        var rootElement = el('<template><div template>x</div></template>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template class=\"ng-binding\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div template></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"some-prop:expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].inheritedElementBinder.propertyBindings, 'someProp').source).toEqual('expr');\n        expect(MapWrapper.get(results[1].attrs(), 'some-prop')).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute to the nestedProtoView', () => {\n        var rootElement = el('<div><div template=\"var var-name=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView.variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n\n      it('should add entries without value as attributes to the element', () => {\n        var rootElement = el('<div><div template=\"varname\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].attrs(), 'varname')).toEqual('');\n        expect(results[1].inheritedElementBinder.propertyBindings).toEqual(MapWrapper.create());\n        expect(results[1].inheritedElementBinder.variableBindings).toEqual(MapWrapper.create());\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div template></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n      it('should copy over the elementDescription', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].elementDescription).toBe(results[1].elementDescription);\n      });\n\n      it('should clean out the inheritedElementBinder', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedElementBinder).toBe(null);\n      });\n\n      it('should create a nestedProtoView', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView).not.toBe(null);\n        expect(results[2].inheritedProtoView).toBe(results[1].inheritedElementBinder.nestedProtoView);\n        expect(DOM.getOuterHTML(results[2].inheritedProtoView.rootElement)).toEqual('<span template=\"\"></span>');\n      });\n\n    });\n\n    describe('elements with *directive_name attribute', () => {\n\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span *if></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template class=\"ng-binding\" if=\"\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span *if=\"\"></span>')\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div *foo=\"bar\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n\n      it('should work with top-level template node', () => {\n        var rootElement = el('<template><div *foo>x</div></template>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template class=\"ng-binding\" foo=\"\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div *prop=\"expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].inheritedElementBinder.propertyBindings, 'prop').source).toEqual('expr');\n        expect(MapWrapper.get(results[1].attrs(), 'prop')).toEqual('expr');\n      });\n\n      it('should add variable mappings from the template attribute to the nestedProtoView', () => {\n        var rootElement = el('<div><div *foreach=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView.variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div *varname></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].attrs(), 'varname')).toEqual('');\n        expect(results[1].inheritedElementBinder.propertyBindings).toEqual(MapWrapper.create());\n        expect(results[1].inheritedElementBinder.variableBindings).toEqual(MapWrapper.create());\n      });\n\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div *foo></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        // 1 root + 2 initial + 1 generated template elements\n        expect(results.length).toEqual(4);\n      });\n\n      it('should copy over the elementDescription', () => {\n        var rootElement = el('<div><span *foo></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].elementDescription).toBe(results[1].elementDescription);\n      });\n\n      it('should clean out the inheritedElementBinder', () => {\n        var rootElement = el('<div><span *foo></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedElementBinder).toBe(null);\n      });\n\n      it('should create a nestedProtoView', () => {\n        var rootElement = el('<div><span *foo></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView).not.toBe(null);\n        expect(results[2].inheritedProtoView).toBe(results[1].inheritedElementBinder.nestedProtoView);\n        expect(DOM.getOuterHTML(results[2].inheritedProtoView.rootElement)).toEqual('<span *foo=\"\"></span>');\n      });\n\n    });\n\n  });\n}\n"]}