{"version":3,"sources":["emulated_unscoped_shadow_dom_strategy_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  SpyObject,\n} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map, MapWrapper, ListWrapper} from 'angular2/src/facade/collection';\n\nimport {\n  EmulatedUnscopedShadowDomStrategy,\n} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {\n  resetShadowDomCache,\n} from 'angular2/src/render/dom/shadow_dom/util';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\n\nexport function main() {\n  var strategy;\n\n  describe('EmulatedUnscoped', () => {\n    var styleHost;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var view = new RenderView(null, [nodes], [], [], [], [], null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var styleElement = el('<style>.foo {background-image: url(\"img.jpg\");}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\".foo {\" +\n        \"background-image: url('http://base/img.jpg');\" +\n        \"}\");\n    });\n\n    it('should not inline import rules', () => {\n      var styleElement = el('<style>@import \"other.css\";</style>')\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\"@import 'http://base/other.css';\");\n    });\n\n    it('should move the style element to the style host', () => {\n      var compileElement = el('<div><style>.one {}</style></div>');\n      var styleElement = DOM.firstChild(compileElement);\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n\n      expect(compileElement).toHaveText('');\n      expect(styleHost).toHaveText('.one {}');\n    });\n\n    it('should insert the same style only once in the style host', () => {\n      var styleEls = [\n        el('<style>/*css1*/</style>'),\n        el('<style>/*css2*/</style>'),\n        el('<style>/*css1*/</style>')\n      ];\n      ListWrapper.forEach(styleEls, (styleEl) => {\n        strategy.processStyleElement('someComponent', 'http://base', styleEl);\n      });\n\n      expect(styleHost).toHaveText(\"/*css1*//*css2*/\");\n    });\n\n  });\n}\n\n"]}