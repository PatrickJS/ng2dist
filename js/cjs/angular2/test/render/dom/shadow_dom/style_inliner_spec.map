{"version":3,"sources":["style_inliner_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/shadow_dom/style_inliner_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\n\nimport {isBlank} from 'angular2/src/facade/lang';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {XHR} from 'angular2/src/services/xhr';\n\nimport {bind} from 'angular2/di';\n\nexport function main() {\n  describe('StyleInliner', () => {\n    beforeEachBindings(() => [\n      bind(XHR).toClass(FakeXHR),\n    ]);\n\n    describe('loading', () => {\n\n      it('should return a string when there is no import statement', inject([StyleInliner], (inliner) => {\n        var css = '.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).not.toBePromise();\n        expect(loadedCss).toEqual(css);\n      }));\n\n      it('should inline @import rules',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import url(\"one.css\");.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.one {}\\n.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n\n      it('should support url([unquoted url]) in @import rules',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import url(one.css);.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.one {}\\n.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n\n      it('should handle @import error gracefuly',\n        inject([StyleInliner, AsyncTestCompleter], (inliner, async) => {\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('/* failed to import http://base/one.css */\\n.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n\n      it('should inline multiple @import rules',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        xhr.reply('http://base/two.css', '.two {}');\n        var css = '@import \"one.css\";@import \"two.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.one {}\\n.two {}\\n.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n\n      it('should inline nested @import rules',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '@import \"two.css\";.one {}');\n        xhr.reply('http://base/two.css', '.two {}');\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.two {}\\n.one {}\\n.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n\n      it('should handle circular dependencies gracefuly',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '@import \"two.css\";.one {}');\n        xhr.reply('http://base/two.css', '@import \"one.css\";.two {}');\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('.two {}\\n.one {}\\n.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n\n      it('should handle invalid @import fracefuly',\n        inject([StyleInliner, AsyncTestCompleter], (inliner, async) => {\n        // Invalid rule: the url is not quoted\n        var css = '@import one.css;.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('/* Invalid import rule: \"@import one.css;\" */.main {}');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n    });\n\n    describe('media query', () => {\n      it('should wrap inlined content in media query',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import \"one.css\" (min-width: 700px) and (orientation: landscape);';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual('@media (min-width: 700px) and (orientation: landscape) {\\n.one {}\\n}\\n');\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n    });\n\n    describe('url rewritting', () => {\n      it('should rewrite url in inlined content',\n        inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        // it should rewrite both '@import' and 'url()'\n        xhr.reply('http://base/one.css', '@import \"./nested/two.css\";.one {background-image: url(\"one.jpg\");}');\n        xhr.reply('http://base/nested/two.css', '.two {background-image: url(\"../img/two.jpg\");}');\n        var css = '@import \"one.css\";'\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(\n          loadedCss,\n          function(css) {\n            expect(css).toEqual(\n              \".two {background-image: url('http://base/img/two.jpg');}\\n\" +\n              \".one {background-image: url('http://base/one.jpg');}\\n\"\n            );\n            async.done();\n          },\n          function(e) {\n            throw 'fail;'\n          }\n        );\n      }));\n    });\n  });\n}\n\nclass FakeXHR extends XHR {\n  _responses: Map;\n\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n\n  get(url: string): Promise<string> {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n\n    return PromiseWrapper.resolve(response);\n  }\n\n  reply(url: string, response: string) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\n"]}