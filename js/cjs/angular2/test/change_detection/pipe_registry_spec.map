{"version":3,"sources":["pipe_registry_spec.js"],"names":[],"mappings":"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","file":"angular2/test/change_detection/pipe_registry_spec.js","sourcesContent":["import {ddescribe, describe, it, iit, xit, expect, beforeEach, afterEach} from 'angular2/test_lib';\n\nimport {PipeRegistry} from 'angular2/src/change_detection/pipes/pipe_registry';\nimport {Pipe} from 'angular2/src/change_detection/pipes/pipe';\n\nexport function main() {\n  describe(\"pipe registry\", () => {\n    var firstPipe = new Pipe();\n    var secondPipe = new Pipe();\n\n    it(\"should return the first pipe supporting the data type\", () => {\n      var r = new PipeRegistry({\n        \"type\": [\n          new PipeFactory(false, firstPipe),\n          new PipeFactory(true, secondPipe)\n        ]\n      });\n\n      expect(r.get(\"type\", \"some object\", null)).toBe(secondPipe);\n    });\n\n    it(\"should throw when no matching type\", () => {\n      var r = new PipeRegistry({});\n      expect(() => r.get(\"unknown\", \"some object\", null)).toThrowError(\n        `Cannot find a pipe for type 'unknown' object 'some object'`\n      );\n    });\n\n    it(\"should throw when no matching pipe\", () => {\n      var r = new PipeRegistry({\n        \"type\" : []\n      });\n\n      expect(() => r.get(\"type\", \"some object\", null)).toThrowError(\n        `Cannot find a pipe for type 'type' object 'some object'`\n      );\n    });\n  });\n}\n\nclass PipeFactory {\n  shouldSupport:boolean;\n  pipe:any;\n\n  constructor(shouldSupport:boolean, pipe:any) {\n    this.shouldSupport = shouldSupport;\n    this.pipe = pipe;\n  }\n\n  supports(obj):boolean {\n    return this.shouldSupport;\n  }\n\n  create(bpc):Pipe {\n    return this.pipe;\n  }\n}"]}