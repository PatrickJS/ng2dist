{"version":3,"sources":["locals_spec.js"],"names":[],"mappings":"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","file":"angular2/test/change_detection/parser/locals_spec.js","sourcesContent":["import {ddescribe, describe, it, xit, iit, expect, beforeEach} from 'angular2/test_lib';\n\nimport {Locals} from 'angular2/src/change_detection/parser/locals';\n\nimport {MapWrapper} from 'angular2/src/facade/collection';\n\nexport function main() {\n  describe('Locals', () => {\n    var locals;\n    beforeEach(() => {\n      locals = new Locals(null,\n        MapWrapper.createFromPairs([['key', 'value'], ['nullKey', null]]));\n    });\n\n    it('should support getting values', () => {\n      expect(locals.get('key')).toBe('value');\n      expect(() => locals.get('notPresent')).toThrowError(new RegExp(\"Cannot find\"));\n    });\n\n    it('should support checking if key is present', () => {\n      expect(locals.contains('key')).toBe(true);\n      expect(locals.contains('nullKey')).toBe(true);\n      expect(locals.contains('notPresent')).toBe(false);\n    });\n\n    it('should support setting keys', () => {\n      locals.set('key', 'bar');\n      expect(locals.get('key')).toBe('bar');\n    });\n\n    it('should not support setting keys that are not present already', () => {\n      expect(() => locals.set('notPresent', 'bar')).toThrowError();\n    });\n\n    it('should clearValues', () => {\n      locals.clearValues();\n      expect(locals.get('key')).toBe(null);\n    });\n  })\n}\n"]}