{"version":3,"sources":["injector_spec.js"],"names":[],"mappings":"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","file":"angular2/test/di/injector_spec.js","sourcesContent":["import {isBlank} from 'angular2/src/facade/lang';\nimport {describe, ddescribe, it, iit, expect, beforeEach} from 'angular2/test_lib';\nimport {Injector, Inject, InjectLazy, Optional, bind, ResolvedBinding} from 'angular2/di';\n\nclass Engine {\n}\n\nclass BrokenEngine {\n  constructor() {\n    throw \"Broken Engine\";\n  }\n}\n\nclass DashboardSoftware {\n}\n\nclass Dashboard {\n  constructor(software: DashboardSoftware) {}\n}\n\nclass TurboEngine extends Engine {\n}\n\nclass Car {\n  engine:Engine;\n  constructor(engine:Engine) {\n    this.engine = engine;\n  }\n}\n\nclass CarWithLazyEngine {\n  engineFactory;\n  constructor(@InjectLazy(Engine) engineFactory) {\n    this.engineFactory = engineFactory;\n  }\n}\n\nclass CarWithOptionalEngine {\n  engine;\n  constructor(@Optional() engine:Engine) {\n    this.engine = engine;\n  }\n}\n\nclass CarWithDashboard {\n  engine:Engine;\n  dashboard:Dashboard;\n  constructor(engine:Engine, dashboard:Dashboard) {\n    this.engine = engine;\n    this.dashboard = dashboard;\n  }\n}\n\nclass SportsCar extends Car {\n  engine:Engine;\n  constructor(engine:Engine) {\n    super(engine);\n  }\n}\n\nclass CarWithInject {\n  engine:Engine;\n  constructor(@Inject(TurboEngine) engine:Engine) {\n    this.engine = engine;\n  }\n}\n\nclass CyclicEngine {\n  constructor(car:Car) {}\n}\n\nclass NoAnnotations {\n  constructor(secretDependency) {}\n}\n\nexport function main() {\n  describe('injector', function () {\n    it('should instantiate a class without dependencies', function () {\n      var injector = Injector.resolveAndCreate([Engine]);\n      var engine = injector.get(Engine);\n\n      expect(engine).toBeAnInstanceOf(Engine);\n    });\n\n    it('should resolve dependencies based on type information', function () {\n      var injector = Injector.resolveAndCreate([Engine, Car]);\n      var car = injector.get(Car);\n\n      expect(car).toBeAnInstanceOf(Car);\n      expect(car.engine).toBeAnInstanceOf(Engine);\n    });\n\n    it('should resolve dependencies based on @Inject annotation', function () {\n      var injector = Injector.resolveAndCreate([TurboEngine, Engine, CarWithInject]);\n      var car = injector.get(CarWithInject);\n\n      expect(car).toBeAnInstanceOf(CarWithInject);\n      expect(car.engine).toBeAnInstanceOf(TurboEngine);\n    });\n\n    it('should throw when no type and not @Inject', function () {\n      expect(() => Injector.resolveAndCreate([NoAnnotations])).toThrowError(\n        'Cannot resolve all parameters for NoAnnotations');\n    });\n\n    it('should cache instances', function () {\n      var injector = Injector.resolveAndCreate([Engine]);\n\n      var e1 = injector.get(Engine);\n      var e2 = injector.get(Engine);\n\n      expect(e1).toBe(e2);\n    });\n\n    it('should bind to a value', function () {\n      var injector = Injector.resolveAndCreate([\n        bind(Engine).toValue(\"fake engine\")\n      ]);\n\n      var engine = injector.get(Engine);\n      expect(engine).toEqual(\"fake engine\");\n    });\n\n    it('should bind to a factory', function () {\n      function sportsCarFactory(e:Engine) {\n        return new SportsCar(e);\n      }\n\n      var injector = Injector.resolveAndCreate([\n        Engine,\n        bind(Car).toFactory(sportsCarFactory)\n      ]);\n\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(SportsCar);\n      expect(car.engine).toBeAnInstanceOf(Engine);\n    });\n\n    it('should bind to an alias', function() {\n      var injector = Injector.resolveAndCreate([\n        Engine,\n        bind(SportsCar).toClass(SportsCar),\n        bind(Car).toAlias(SportsCar)\n      ]);\n\n      var car = injector.get(Car);\n      var sportsCar = injector.get(SportsCar);\n      expect(car).toBeAnInstanceOf(SportsCar);\n      expect(car).toBe(sportsCar);\n    });\n\n    it('should throw when the aliased binding does not exist', function () {\n      var injector = Injector.resolveAndCreate([\n        bind('car').toAlias(SportsCar)\n      ]);\n      expect(() => injector.get('car')).toThrowError('No provider for SportsCar! (car -> SportsCar)');\n    });\n\n    it('should support overriding factory dependencies', function () {\n      var injector = Injector.resolveAndCreate([\n        Engine,\n        bind(Car).toFactory((e) => new SportsCar(e), [Engine])\n      ]);\n\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(SportsCar);\n      expect(car.engine).toBeAnInstanceOf(Engine);\n    });\n\n    it('should support optional dependencies', function () {\n      var injector = Injector.resolveAndCreate([\n        CarWithOptionalEngine\n      ]);\n\n      var car = injector.get(CarWithOptionalEngine);\n      expect(car.engine).toEqual(null);\n    });\n\n    it(\"should flatten passed-in bindings\", function () {\n      var injector = Injector.resolveAndCreate([\n        [[Engine, Car]]\n      ]);\n\n      var car = injector.get(Car);\n      expect(car).toBeAnInstanceOf(Car);\n    });\n\n    it(\"should use the last binding \"+\n      \"when there are mutliple bindings for same token\", function () {\n      var injector = Injector.resolveAndCreate([\n        bind(Engine).toClass(Engine),\n        bind(Engine).toClass(TurboEngine)\n      ]);\n\n      expect(injector.get(Engine)).toBeAnInstanceOf(TurboEngine);\n    });\n\n    it('should use non-type tokens', function () {\n      var injector = Injector.resolveAndCreate([\n        bind('token').toValue('value')\n      ]);\n\n      expect(injector.get('token')).toEqual('value');\n    });\n\n    it('should throw when given invalid bindings', function () {\n      expect(() => Injector.resolveAndCreate([\"blah\"])).toThrowError('Invalid binding blah');\n      expect(() => Injector.resolveAndCreate([bind(\"blah\")])).toThrowError('Invalid binding blah');\n    });\n\n    it('should provide itself', function () {\n      var parent = Injector.resolveAndCreate([]);\n      var child = parent.resolveAndCreateChild([]);\n\n      expect(child.get(Injector)).toBe(child);\n    });\n\n    it('should throw when no provider defined', function () {\n      var injector = Injector.resolveAndCreate([]);\n      expect(() => injector.get('NonExisting')).toThrowError('No provider for NonExisting!');\n    });\n\n    it('should show the full path when no provider', function () {\n      var injector = Injector.resolveAndCreate([CarWithDashboard, Engine, Dashboard]);\n      expect(() => injector.get(CarWithDashboard)).\n        toThrowError('No provider for DashboardSoftware! (CarWithDashboard -> Dashboard -> DashboardSoftware)');\n    });\n\n    it('should throw when trying to instantiate a cyclic dependency', function () {\n      var injector = Injector.resolveAndCreate([\n        Car,\n        bind(Engine).toClass(CyclicEngine)\n      ]);\n\n      expect(() => injector.get(Car))\n        .toThrowError('Cannot instantiate cyclic dependency! (Car -> Engine -> Car)');\n\n      expect(() => injector.asyncGet(Car))\n        .toThrowError('Cannot instantiate cyclic dependency! (Car -> Engine -> Car)');\n    });\n\n    it('should show the full path when error happens in a constructor', function () {\n      var injector = Injector.resolveAndCreate([\n        Car,\n        bind(Engine).toClass(BrokenEngine)\n      ]);\n\n      try {\n        injector.get(Car);\n        throw \"Must throw\";\n      } catch (e) {\n        expect(e.message).toContain(\"Error during instantiation of Engine! (Car -> Engine)\");\n      }\n    });\n\n    it('should instantiate an object after a failed attempt', function () {\n      var isBroken = true;\n\n      var injector = Injector.resolveAndCreate([\n        Car,\n        bind(Engine).toFactory(() => isBroken ? new BrokenEngine() : new Engine())\n      ]);\n\n      expect(() => injector.get(Car)).toThrowError(new RegExp(\"Error\"));\n\n      isBroken = false;\n\n      expect(injector.get(Car)).toBeAnInstanceOf(Car);\n    });\n\n    it('should support null values', () => {\n      var injector = Injector.resolveAndCreate([bind('null').toValue(null)]);\n      expect(injector.get('null')).toBe(null);\n    });\n\n    describe(\"default bindings\", function () {\n      it(\"should be used when no matching binding found\", function () {\n        var injector = Injector.resolveAndCreate([], {defaultBindings: true});\n\n        var car = injector.get(Car);\n\n        expect(car).toBeAnInstanceOf(Car);\n      });\n\n      it(\"should use the matching binding when it is available\", function () {\n        var injector = Injector.resolveAndCreate([\n          bind(Car).toClass(SportsCar)\n        ], {defaultBindings: true});\n\n        var car = injector.get(Car);\n\n        expect(car).toBeAnInstanceOf(SportsCar);\n      });\n    });\n\n    describe(\"child\", function () {\n      it('should load instances from parent injector', function () {\n        var parent = Injector.resolveAndCreate([Engine]);\n        var child = parent.resolveAndCreateChild([]);\n\n        var engineFromParent = parent.get(Engine);\n        var engineFromChild = child.get(Engine);\n\n        expect(engineFromChild).toBe(engineFromParent);\n      });\n\n      it(\"should not use the child bindings when resolving the dependencies of a parent binding\", function () {\n        var parent = Injector.resolveAndCreate([\n          Car, Engine\n        ]);\n        var child = parent.resolveAndCreateChild([\n          bind(Engine).toClass(TurboEngine)\n        ]);\n\n        var carFromChild = child.get(Car);\n        expect(carFromChild.engine).toBeAnInstanceOf(Engine);\n      });\n\n      it('should create new instance in a child injector', function () {\n        var parent = Injector.resolveAndCreate([Engine]);\n        var child = parent.resolveAndCreateChild([\n          bind(Engine).toClass(TurboEngine)\n        ]);\n\n        var engineFromParent = parent.get(Engine);\n        var engineFromChild = child.get(Engine);\n\n        expect(engineFromParent).not.toBe(engineFromChild);\n        expect(engineFromChild).toBeAnInstanceOf(TurboEngine);\n      });\n\n      it(\"should create child injectors without default bindings\", function () {\n        var parent = Injector.resolveAndCreate([], {defaultBindings: true});\n        var child = parent.resolveAndCreateChild([]);\n\n        //child delegates to parent the creation of Car\n        var childCar = child.get(Car);\n        var parentCar = parent.get(Car);\n\n        expect(childCar).toBe(parentCar);\n      });\n    });\n\n    describe(\"lazy\", function () {\n      it(\"should create dependencies lazily\", function () {\n        var injector = Injector.resolveAndCreate([\n          Engine,\n          CarWithLazyEngine\n        ]);\n\n        var car = injector.get(CarWithLazyEngine);\n        expect(car.engineFactory()).toBeAnInstanceOf(Engine);\n      });\n\n      it(\"should cache instance created lazily\", function () {\n        var injector = Injector.resolveAndCreate([\n          Engine,\n          CarWithLazyEngine\n        ]);\n\n        var car = injector.get(CarWithLazyEngine);\n        var e1 = car.engineFactory();\n        var e2 = car.engineFactory();\n\n        expect(e1).toBe(e2);\n      });\n    });\n\n    describe('resolve', function() {\n      it('should resolve and flatten', function() {\n        var bindings = Injector.resolve([Engine, [BrokenEngine]]);\n        bindings.forEach(function(b) {\n          if (isBlank(b)) return;  // the result is a sparse array\n          expect(b instanceof ResolvedBinding).toBe(true);\n        });\n      });\n    });\n  });\n}\n"]}