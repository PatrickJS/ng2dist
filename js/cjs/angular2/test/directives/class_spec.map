{"version":3,"sources":["class_spec.js"],"names":[],"mappings":"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","file":"angular2/test/directives/class_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  } from 'angular2/test_lib';\n\nimport {StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {View} from 'angular2/src/core/annotations/view';\nimport {Component} from 'angular2/src/core/annotations/annotations';\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\nimport {CSSClass} from 'angular2/src/directives/class';\n\nexport function main() {\n  describe('binding to CSS class list', () => {\n\n    it('should add classes specified in an object literal',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"{foo: true, bar: false}\"></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n\n        async.done();\n      });\n    }));\n\n    it('should add and remove classes based on changes in object literal values',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"{foo: condition, bar: !condition}\"></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n\n        view.context.condition = false;\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding bar');\n\n        async.done();\n      });\n    }));\n\n    it('should add and remove classes based on changes to the expression object',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"expr\"></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n\n        StringMapWrapper.set(view.context.expr, 'bar', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo bar');\n\n        StringMapWrapper.set(view.context.expr, 'baz', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo bar baz');\n\n        StringMapWrapper.delete(view.context.expr, 'bar');\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo baz');\n\n        async.done();\n      });\n    }));\n\n    it('should retain existing classes when expression evaluates to null',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"expr\"></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n\n        view.context.expr = null;\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n\n        view.context.expr = {'foo': false, 'bar': true};\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding bar');\n\n        async.done();\n      });\n    }));\n\n    it('should co-operate with the class attribute',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"expr\" class=\"init foo\"></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        StringMapWrapper.set(view.context.expr, 'bar', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init foo ng-binding bar');\n\n        StringMapWrapper.set(view.context.expr, 'foo', false);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init ng-binding bar');\n\n        async.done();\n      });\n    }));\n\n    it('should co-operate with the class attribute and class.name binding',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div class=\"init foo\" [class]=\"expr\" [class.baz]=\"condition\"></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init foo ng-binding baz');\n\n        StringMapWrapper.set(view.context.expr, 'bar', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init foo ng-binding baz bar');\n\n        StringMapWrapper.set(view.context.expr, 'foo', false);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init ng-binding baz bar');\n\n        view.context.condition = false;\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init ng-binding bar');\n\n        async.done();\n      });\n    }));\n  })\n}\n\n@Component({selector: 'test-cmp'})\n@View({directives: [CSSClass]})\nclass TestComponent {\n  condition:boolean;\n  expr;\n  constructor() {\n    this.condition = true;\n    this.expr = {'foo': true, 'bar': false};\n  }\n}\n"]}