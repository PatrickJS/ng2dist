{"version":3,"sources":["if_spec.js"],"names":[],"mappings":"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","file":"angular2/test/directives/if_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  IS_DARTIUM,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {View} from 'angular2/src/core/annotations/view';\n\nimport {If} from 'angular2/src/directives/if';\n\nexport function main() {\n  describe('if directive', () => {\n    it('should work in a template attribute', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var html = '<div><copy-me template=\"if booleanCondition\">hello</copy-me></div>';\n\n      tb.createView(TestComponent, {html: html}).then((view) => {\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('hello');\n        async.done();\n      });\n    }));\n\n    it('should work in a template element', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var html = '<div><template [if]=\"booleanCondition\"><copy-me>hello2</copy-me></template></div>';\n\n      tb.createView(TestComponent, {html: html}).then((view) => {\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('hello2');\n        async.done();\n      });\n    }));\n\n    it('should toggle node when condition changes', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var html = '<div><copy-me template=\"if booleanCondition\">hello</copy-me></div>';\n\n      tb.createView(TestComponent, {html: html}).then((view) => {\n        view.context.booleanCondition = false;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(0);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n        view.context.booleanCondition = true;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('hello');\n\n        view.context.booleanCondition = false;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(0);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n        async.done();\n      });\n    }));\n\n    it('should handle nested if correctly', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var html = '<div><template [if]=\"booleanCondition\"><copy-me *if=\"nestedBooleanCondition\">hello</copy-me></template></div>';\n\n      tb.createView(TestComponent, {html: html}).then((view) => {\n        view.context.booleanCondition = false;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(0);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n        view.context.booleanCondition = true;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('hello');\n\n        view.context.nestedBooleanCondition = false;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(0);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n        view.context.nestedBooleanCondition = true;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('hello');\n\n        view.context.booleanCondition = false;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(0);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n        async.done();\n      });\n    }));\n\n    it('should update several nodes with if', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var html =\n      '<div>' +\n        '<copy-me template=\"if numberCondition + 1 >= 2\">helloNumber</copy-me>' +\n        '<copy-me template=\"if stringCondition == \\'foo\\'\">helloString</copy-me>' +\n        '<copy-me template=\"if functionCondition(stringCondition, numberCondition)\">helloFunction</copy-me>' +\n      '</div>';\n\n      tb.createView(TestComponent, {html: html}).then((view) => {\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(3);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('helloNumberhelloStringhelloFunction');\n\n        view.context.numberCondition = 0;\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('helloString');\n\n        view.context.numberCondition = 1;\n        view.context.stringCondition = \"bar\";\n        view.detectChanges();\n        expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n        expect(DOM.getText(view.rootNodes[0])).toEqual('helloNumber');\n        async.done();\n      });\n    }));\n\n\n    if (!IS_DARTIUM) {\n      it('should not add the element twice if the condition goes from true to true (JS)',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var html = '<div><copy-me template=\"if numberCondition\">hello</copy-me></div>';\n\n        tb.createView(TestComponent, {html: html}).then((view) => {\n          view.detectChanges();\n          expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n          expect(DOM.getText(view.rootNodes[0])).toEqual('hello');\n\n          view.context.numberCondition = 2;\n          view.detectChanges();\n          expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(1);\n          expect(DOM.getText(view.rootNodes[0])).toEqual('hello');\n\n          async.done();\n        });\n      }));\n\n      it('should not recreate the element if the condition goes from true to true (JS)',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var html = '<div><copy-me template=\"if numberCondition\">hello</copy-me></div>';\n\n          tb.createView(TestComponent, {html: html}).then((view) => {\n            view.detectChanges();\n            DOM.addClass(view.rootNodes[0].childNodes[1], \"foo\");\n\n            view.context.numberCondition = 2;\n            view.detectChanges();\n            expect(DOM.hasClass(view.rootNodes[0].childNodes[1], \"foo\")).toBe(true);\n\n            async.done();\n          });\n      }));\n    }\n\n    if (IS_DARTIUM) {\n      it('should not create the element if the condition is not a boolean (DART)',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var html = '<div><copy-me template=\"if numberCondition\">hello</copy-me></div>';\n\n          tb.createView(TestComponent, {html: html}).then((view) => {\n            expect(() => view.detectChanges()).toThrowError();\n            expect(DOM.querySelectorAll(view.rootNodes[0], 'copy-me').length).toEqual(0);\n            expect(DOM.getText(view.rootNodes[0])).toEqual('');\n            async.done();\n          });\n      }));\n    }\n\n  });\n}\n\n@Component({selector: 'test-cmp'})\n@View({directives: [If]})\nclass TestComponent {\n  booleanCondition: boolean;\n  nestedBooleanCondition: boolean;\n  numberCondition: number;\n  stringCondition: string;\n  functionCondition: Function;\n  constructor() {\n    this.booleanCondition = true;\n    this.nestedBooleanCondition = true;\n    this.numberCondition = 1;\n    this.stringCondition = \"foo\";\n    this.functionCondition = function(s, n){\n      return s == \"foo\" && n == 1;\n    };\n  }\n}\n"]}