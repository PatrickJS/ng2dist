{"version":3,"sources":["for_spec.js"],"names":[],"mappings":"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","file":"angular2/test/directives/for_spec.js","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {ListWrapper} from 'angular2/src/facade/collection';\n\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {View} from 'angular2/src/core/annotations/view';\n\nimport {For} from 'angular2/src/directives/for';\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\n\nexport function main() {\n  describe('for', () => {\n    var TEMPLATE = '<div><copy-me template=\"for #item of items\">{{item.toString()}};</copy-me></div>';\n\n    it('should reflect initial elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;');\n        async.done();\n      });\n    }));\n\n    it('should reflect added elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n\n        ListWrapper.push(view.context.items, 3);\n        view.detectChanges();\n\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;3;');\n        async.done();\n      });\n    }));\n\n    it('should reflect removed elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n\n        ListWrapper.removeAt(view.context.items, 1);\n        view.detectChanges();\n\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;');\n        async.done();\n      });\n    }));\n\n    it('should reflect moved elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n\n        ListWrapper.removeAt(view.context.items, 0);\n        ListWrapper.push(view.context.items, 1);\n        view.detectChanges();\n\n        expect(DOM.getText(view.rootNodes[0])).toEqual('2;1;');\n        async.done();\n      });\n    }));\n\n    it('should reflect a mix of all changes (additions/removals/moves)',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.context.items = [0, 1, 2, 3, 4, 5];\n        view.detectChanges();\n\n        view.context.items = [6, 2, 7, 0, 4, 8];\n        view.detectChanges();\n\n        expect(DOM.getText(view.rootNodes[0])).toEqual('6;2;7;0;4;8;');\n        async.done();\n      });\n    }));\n\n    it('should iterate over an array of objects', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<ul><li template=\"for #item of items\">{{item[\"name\"]}};</li></ul>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n\n        // INIT\n        view.context.items = [{'name': 'misko'}, {'name':'shyam'}];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('misko;shyam;');\n\n        // GROW\n        ListWrapper.push(view.context.items, {'name': 'adam'});\n        view.detectChanges();\n\n        expect(DOM.getText(view.rootNodes[0])).toEqual('misko;shyam;adam;');\n\n        // SHRINK\n        ListWrapper.removeAt(view.context.items, 2);\n        ListWrapper.removeAt(view.context.items, 0);\n        view.detectChanges();\n\n        expect(DOM.getText(view.rootNodes[0])).toEqual('shyam;');\n        async.done();\n      });\n    }));\n\n    it('should gracefully handle nulls', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<ul><li template=\"for #item of null\">{{item}};</li></ul>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n        async.done();\n      });\n    }));\n\n    it('should gracefully handle ref changing to null and back',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;');\n\n        view.context.items = null;\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n        view.context.items = [1, 2, 3];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;3;');\n        async.done();\n      });\n    }));\n\n    it('should throw on ref changing to string', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;');\n\n        view.context.items = 'whaaa';\n        expect(() => view.detectChanges()).toThrowError();\n        async.done();\n      });\n    }));\n\n    it('should works with duplicates', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        var a = new Foo();\n        view.context.items = [a, a];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('foo;foo;');\n        async.done();\n      });\n    }));\n\n    it('should repeat over nested arrays', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template =\n        '<div>'+\n          '<div template=\"for #item of items\">' +\n            '<div template=\"for #subitem of item\">' +\n              '{{subitem}}-{{item.length}};' +\n            '</div>|'+\n          '</div>'+\n        '</div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [['a', 'b'], ['c']];\n        view.detectChanges();\n        view.detectChanges();\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('a-2;b-2;|c-1;|');\n\n        view.context.items = [['e'], ['f', 'g']];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('e-1;|f-2;g-2;|');\n\n        async.done();\n      });\n    }));\n\n    it('should repeat over nested arrays with no intermediate element',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template =\n          '<div><template [for] #item [of]=\"items\">' +\n            '<div template=\"for #subitem of item\">' +\n            '{{subitem}}-{{item.length}};' +\n          '</div></template></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [['a', 'b'], ['c']];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('a-2;b-2;c-1;');\n\n        view.context.items = [['e'], ['f', 'g']];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('e-1;f-2;g-2;');\n        async.done();\n      });\n    }));\n\n    it('should display indices correctly',\n      inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template =\n        '<div><copy-me template=\"for: var item of items; var i=index\">{{i.toString()}}</copy-me></div>';\n\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('0123456789');\n\n        view.context.items = [1, 2, 6, 7, 4, 3, 5, 8, 9, 0];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('0123456789');\n        async.done();\n      });\n    }));\n\n  });\n}\n\nclass Foo {\n  toString() {\n    return 'foo';\n  }\n}\n\n@Component({selector: 'test-cmp'})\n@View({directives: [For]})\nclass TestComponent {\n  items: any;\n  constructor() {\n    this.items = [1, 2];\n  }\n}\n"]}