{"version":3,"sources":["xhr_impl.es6"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;SAArC,EAAC,GAAE,YAAqB;AAAE,oBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;EAAlD,WAAS,EAAjB,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;AAAtG,UAAM;AAAG,iBAAa;EACtB,IAAE,EAFV,EAAC,UAAoB,CAAA,OAAM,AAAC,SAAkB,CACtC,CAAA,WAAqB,oBAA2B,CAAA,WAAqB,GAAK,EAAC,OAAM,UAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,UAKG,SAAM,QAAM;AALnB,gBAAc,iBAAiB,AAAC,UACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;;AA2BlD,AA5BwC,CAAA;AAAxC,AAAI,EAAA,mBAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,WAM3B,GAAE,CAAF,UAAI,GAAE,AAAQ,CAAoB;AAChC,AAAI,MAAA,CAAA,SAAQ,EAAI,CAAA,cAAa,UAAU,AAAC,EAAC,CAAC;AAC1C,AAAI,MAAA,CAAA,GAAE,EAAI,IAAI,eAAa,AAAC,EAAC,CAAC;AAC9B,MAAE,KAAK,AAAC,CAAC,KAAI,CAAG,IAAE,CAAG,KAAG,CAAC,CAAC;AAC1B,MAAE,aAAa,EAAI,OAAK,CAAC;AAEzB,MAAE,OAAO,EAAI,UAAS,AAAD,CAAG;AACtB,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,GAAE,OAAO,CAAC;AACvB,SAAI,GAAE,GAAK,OAAK,CAAA,EAAK,CAAA,MAAK,GAAK,IAAE,CAAG;AAClC,gBAAQ,QAAQ,AAAC,CAAC,GAAE,aAAa,CAAC,CAAC;MACrC,KAAO;AACL,gBAAQ,OAAO,AAAC,EAAC,iBAAiB,EAAC,IAAE,EAAG,CAAC;MAC3C;AAAA,IACF,CAAC;AAED,MAAE,QAAQ,EAAI,UAAS,AAAD,CAAG;AACvB,cAAQ,OAAO,AAAC,EAAC,iBAAiB,EAAC,IAAE,EAAG,CAAC;IAC3C,CAAC;AAED,MAAE,KAAK,AAAC,EAAC,CAAC;AACV,SAAO,CAAA,SAAQ,QAAQ,CAAC;EAC1B,MAtB2B,IAAE,CAJyB;AADxD,KAAK,eAAe,AAAC,wBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAGzB,WAAS,AAAC,EAAC,EAHqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AA4BrD","file":"angular2/src/services/xhr_impl.js","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {XHR} from './xhr';\n\n@Injectable()\nexport class XHRImpl extends XHR {\n  get(url: string): Promise<string> {\n    var completer = PromiseWrapper.completer();\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'text';\n\n    xhr.onload = function() {\n      var status = xhr.status;\n      if (200 <= status && status <= 300) {\n        completer.resolve(xhr.responseText);\n      } else {\n        completer.reject(`Failed to load ${url}`);\n      }\n    };\n\n    xhr.onerror = function() {\n      completer.reject(`Failed to load ${url}`);\n    };\n\n    xhr.send();\n    return completer.promise;\n  }\n}\n"]}