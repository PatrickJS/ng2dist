{"version":3,"sources":["exceptions.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;wCAArC,EAAC,GAAE,YAAqB;AAAE,mDAAwB;IAAE,AAA9B,CAAC;sBAAvB,EAAC,GAAE,YAAqB;AAAE,iCAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;EAAlD,YAAU,EAAlB,EAAC,sBAAoB,CAAA,OAAM,AAAC,kBAAkB,CACtC,CAAA,uBAAqB,gCAA2B,CAAA,uBAAqB,GAAK,EAAC,OAAM,sBAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,yCAEG,SAAM,uCAAqC,CAGpC,KAAI,AAAY,CAAG,CAAA,MAAK,AAAI,CAAG;AACzC,AANJ,gBAAc,iBAAiB,AAAC,yCAAkB,KAAK,MAAmB,CAM/D;AACP,KAAG,QAAQ,EAAI,EAAA,cAAc,EAAC,CAAA,KAAI,mBAAmB,EAAC,uCAAqC,KAC3F,mBAAmB,EAAC,CAAA,MAAK,cAAc,EAAC,sBAAqB,EAAC,CAAA,MAAK,aAAa,EAAC,IAAE,CAAA,CAAC;AACtF,AATsC,CAAA;AAAxC,AAAI,EAAA,iFAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,0CAW3B,QAAO,CAAP,UAAS,AAAD,CAAU;AAChB,SAAO,CAAA,IAAG,QAAQ,CAAC;EACrB,MAX0D,MAAI,CADR;AADxD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAIN,WAAU,IAL9B,eAAc,KAAO,OAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,uBAgBG,SAAM,qBAAmB,CAKlB,KAAI,AAAY,CAAG,CAAA,iBAAgB,AAAI,CAAG;AACpD,AAtBJ,gBAAc,iBAAiB,AAAC,uBAAkB,KAAK,MAAmB,CAsB/D;AACP,KAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,KAAG,SAAS,EAAI,CAAA,KAAI,mBAAmB,CAAC;AACxC,KAAG,QAAQ,IAAO,IAAG,kBAAkB,EAAC,QAAO,EAAC,CAAA,IAAG,SAAS,EAAC,IAAE,CAAA,CAAC;AAClE,AA1BsC,CAAA;AAAxC,AAAI,EAAA,6CAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,wBA4B3B,QAAO,CAAP,UAAS,AAAD,CAAU;AAChB,SAAO,CAAA,IAAG,QAAQ,CAAC;EACrB,MAdwC,MAAI,CAfU;AADxD,KAAK,eAAe,AAAC,oCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoBN,WAAU,IArB9B,eAAc,KAAO,OAC4B;EAAC,CAAC,CAAC,CAAC;AA8BrD","file":"angular2/src/change_detection/exceptions.js","sourcesContent":["import {ProtoRecord} from './proto_record';\n\nexport class ExpressionChangedAfterItHasBeenChecked extends Error {\n  message:string;\n\n  constructor(proto:ProtoRecord, change:any) {\n    super();\n    this.message = `Expression '${proto.expressionAsString}' has changed after it was checked. ` +\n    `Previous value: '${change.previousValue}'. Current value: '${change.currentValue}'`;\n  }\n\n  toString():string {\n    return this.message;\n  }\n}\n\nexport class ChangeDetectionError extends Error {\n  message:string;\n  originalException:any;\n  location:string;\n\n  constructor(proto:ProtoRecord, originalException:any) {\n    super();\n    this.originalException = originalException;\n    this.location = proto.expressionAsString;\n    this.message = `${this.originalException} in [${this.location}]`;\n  }\n\n  toString():string {\n    return this.message;\n  }\n}"]}