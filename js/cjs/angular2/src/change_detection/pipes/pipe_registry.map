{"version":3,"sources":["pipe_registry.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;cAArC,EAAC,GAAE,YAAqB;AAAE,yBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;SAA1D,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AADtG,OAAG;AAAG,cAAU;SAAxB,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAAtG,UAAM;AAAG,YAAQ;AAAG,gBAAY;AAAG,QAAI;EACvC,KAAG,EAFX,EAAC,WAAoB,CAAA,OAAM,AAAC,UAAkB,CACtC,CAAA,YAAqB,qBAA2B,CAAA,YAAqB,GAAK,EAAC,OAAM,WAAmB,CAAC,AAD/D,CACgE;EAEtG,yBAAuB,EAH/B,EAAC,mDAAoB,CAAA,OAAM,AAAC,iCAAkB,CACtC,CAAA,oDAAqB,6DAA2B,CAAA,oDAAqB,GAAK,EAAC,OAAM,mDAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,eAKG,SAAM,aAAW,CAGV,MAAK,CAAE;AACjB,KAAG,OAAO,EAAI,OAAK,CAAC;AACtB,AAVsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,gBAY3B,GAAE,CAAF,UAAI,IAAG,AAAO,CAAG,CAAA,GAAE,CAAG,CAAA,GAAE,AAAyB;AAC/C,AAAI,MAAA,CAAA,aAAY,EAAI,CAAA,IAAG,OAAO,CAAE,IAAG,CAAC,CAAC;AACrC,OAAI,OAAM,AAAC,CAAC,aAAY,CAAC,CAAG;AAC1B,UAAM,IAAI,cAAY,AAAC,EAAC,+BAA+B,EAAC,KAAG,EAAC,aAAY,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC;IAClF;AAAA,AAEI,MAAA,CAAA,cAAa,EAAI,CAAA,WAAU,KAAK,AAAC,CAAC,aAAY,GAChD,SAAC,UAAS;WAAM,CAAA,UAAS,SAAS,AAAC,CAAC,GAAE,CAAC;IAAA,EAAC,CAAC;AAE3C,OAAI,OAAM,AAAC,CAAC,cAAa,CAAC,CAAG;AAC3B,UAAM,IAAI,cAAY,AAAC,EAAC,+BAA+B,EAAC,KAAG,EAAC,aAAY,EAAC,IAAE,EAAC,IAAE,EAAC,CAAC;IAClF;AAAA,AAEA,SAAO,CAAA,cAAa,OAAO,AAAC,CAAC,GAAE,CAAC,CAAC;EACnC,MA1BmF;AAArF,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,eAYO,wBAAuB,GAXF;EAAC,CAAC,CAAC,CAAC;AA0BrD","file":"angular2/src/change_detection/pipes/pipe_registry.js","sourcesContent":["import {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent, BaseException, CONST} from 'angular2/src/facade/lang';\nimport {Pipe} from './pipe';\nimport {BindingPropagationConfig} from '../binding_propagation_config';\n\nexport class PipeRegistry {\n  config;\n\n  constructor(config){\n    this.config = config;\n  }\n\n  get(type:string, obj, bpc:BindingPropagationConfig):Pipe {\n    var listOfConfigs = this.config[type];\n    if (isBlank(listOfConfigs)) {\n      throw new BaseException(`Cannot find a pipe for type '${type}' object '${obj}'`);\n    }\n\n    var matchingConfig = ListWrapper.find(listOfConfigs,\n      (pipeConfig) => pipeConfig.supports(obj));\n\n    if (isBlank(matchingConfig)) {\n      throw new BaseException(`Cannot find a pipe for type '${type}' object '${obj}'`);\n    }\n\n    return matchingConfig.create(bpc);\n  }\n}"]}