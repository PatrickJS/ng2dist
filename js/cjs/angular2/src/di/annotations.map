{"version":3,"sources":["annotations.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;QAArC,EAAC,GAAE,YAAqB;AAAE,mBAAwB;IAAE,AAA9B,CAAC;eAAvB,EAAC,GAAE,YAAqB;AAAE,0BAAwB;IAAE,AAA9B,CAAC;YAAvB,EAAC,GAAE,YAAqB;AAAE,uBAAwB;IAAE,AAA9B,CAAC;UAAvB,EAAC,GAAE,YAAqB;AAAE,qBAAwB;IAAE,AAA9B,CAAC;sBAAvB,EAAC,GAAE,YAAqB;AAAE,iCAAwB;IAAE,AAA9B,CAAC;YAAvB,EAAC,GAAE,YAAqB;AAAE,uBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;EAAlD,MAAI,EAAZ,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,SAYG,SAAM,OAAK,CAGJ,KAAI,CAAG;AACjB,KAAG,MAAM,EAAI,MAAI,CAAC;AACpB,AAjBsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,gBAAwD;AAArF,KAAK,eAAe,AAAC,uBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAavB,MAAI,AAAC,EAAC,EAbwC;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,gBAgCG,SAAM,cAAY,CAGX,KAAI,CAAG;AACjB,KAAG,MAAM,EAAI,MAAI,CAAC;AACpB,AArCsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,uBAAwD;AAArF,KAAK,eAAe,AAAC,8BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAiCvB,MAAI,AAAC,EAAC,EAjCwC;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,aAoDG,SAAM,WAAS,CAGR,KAAI,CAAG;AACjB,KAAG,MAAM,EAAI,MAAI,CAAC;AACpB,AAzDsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,oBAAwD;AAArF,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAqDvB,MAAI,AAAC,EAAC,EArDwC;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,WAwEG,SAAM,SAAO,CAEN,AAAD,CAAG,GACd,AA3EsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,kBAAwD;AAArF,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAwEvB,MAAI,AAAC,EAAC,EAxEwC;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,uBAyGG,SAAM,qBAAmB,CAElB,AAAD,CAAG,GACd,AA5GsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,wBA8G3B,GAAI,MAAI,EAAI;AACV,SAAO,KAAG,CAAC;EACb,MAhHmF;AAArF,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAyGvB,MAAI,AAAC,EAAC,EAzGwC;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,aAgIG,SAAM,WAAS,CAER,AAAD,CAAG,GACd,AAnIsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,oBAAwD;AAArF,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAgIvB,MAAI,AAAC,EAAC,EAhIwC;EAAC,CAAC,CAAC,CAAC;AAoIrD","file":"angular2/src/di/annotations.js","sourcesContent":["import {CONST} from \"angular2/src/facade/lang\";\n\n/**\n * A parameter annotation that creates a synchronous eager dependency.\n *\n * ```\n * class AComponent {\n *   constructor(@Inject('aServiceToken') aService) {}\n * }\n * ```\n *\n */\nexport class Inject {\n  token;\n  @CONST()\n  constructor(token) {\n    this.token = token;\n  }\n}\n\n/**\n * A parameter annotation that creates an asynchronous eager dependency.\n *\n * ```\n * class AComponent {\n *   constructor(@InjectPromise('aServiceToken') aServicePromise) {\n *     aServicePromise.then(aService => ...);\n *   }\n * }\n * ```\n *\n */\nexport class InjectPromise {\n  token;\n  @CONST()\n  constructor(token) {\n    this.token = token;\n  }\n}\n\n/**\n * A parameter annotation that creates a synchronous lazy dependency.\n *\n * ```\n * class AComponent {\n *   constructor(@InjectLazy('aServiceToken') aServiceFn) {\n *     aService = aServiceFn();\n *   }\n * }\n * ```\n *\n */\nexport class InjectLazy {\n  token;\n  @CONST()\n  constructor(token) {\n    this.token = token;\n  }\n}\n\n/**\n * A parameter annotation that marks a dependency as optional.\n *\n * ```\n * class AComponent {\n *   constructor(@Optional() dp:Dependency) {\n *     this.dp = dp;\n *   }\n * }\n * ```\n *\n */\nexport class Optional {\n  @CONST()\n  constructor() {\n  }\n}\n\n/**\n * `DependencyAnnotation` is used by the framework to extend DI.\n *\n * Only annotations implementing `DependencyAnnotation` will be added\n * to the list of dependency properties.\n *\n * For example:\n *\n * ```\n * class Parent extends DependencyAnnotation {}\n * class NotDependencyProperty {}\n *\n * class AComponent {\n *   constructor(@Parent @NotDependencyProperty aService:AService) {}\n * }\n * ```\n *\n * will create the following dependency:\n *\n * ```\n * new Dependency(Key.get(AService), [new Parent()])\n * ```\n *\n * The framework can use `new Parent()` to handle the `aService` dependency\n * in a specific way.\n *\n */\nexport class DependencyAnnotation {\n  @CONST()\n  constructor() {\n  }\n\n  get token() {\n    return null;\n  }\n}\n\n/**\n * A class annotation that marks a class as available to `Injector`s for\n * creation.\n *\n * ```\n * class NeedsService {\n *   constructor(svc:UsefulService) {}\n * }\n *\n * @Injectable\n * class UsefulService {}\n * ```\n */\nexport class Injectable {\n  @CONST()\n  constructor() {\n  }\n}\n"]}