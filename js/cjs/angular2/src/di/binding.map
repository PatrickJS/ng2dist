{"version":3,"sources":["binding.js"],"names":[],"mappings":"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","file":"angular2/src/di/binding.js","sourcesContent":["import {Type, isBlank, isPresent, CONST} from 'angular2/src/facade/lang';\nimport {List, MapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {Key} from './key';\nimport {Inject, InjectLazy, InjectPromise, Optional, DependencyAnnotation} from './annotations';\nimport {NoAnnotationError} from './exceptions';\n\nexport class Dependency {\n  key:Key;\n  asPromise:boolean;\n  lazy:boolean;\n  optional:boolean;\n  properties:List;\n\n  constructor(key:Key, asPromise:boolean, lazy:boolean, optional:boolean, properties:List) {\n    this.key = key;\n    this.asPromise = asPromise;\n    this.lazy = lazy;\n    this.optional = optional;\n    this.properties = properties;\n  }\n\n  static fromKey(key:Key) {\n    return new Dependency(key, false, false, false, []);\n  }\n}\n\nvar _EMPTY_LIST = [];  // TODO: make const when supported\n\n/**\n * Declaration of a dependency binding.\n */\nexport class Binding {\n  token;\n  toClass:Type;\n  toValue;\n  toAlias;\n  toFactory:Function;\n  toAsyncFactory:Function;\n  dependencies:List;\n\n  @CONST()\n  constructor(\n      token,\n      {\n        toClass,\n        toValue,\n        toAlias,\n        toFactory,\n        toAsyncFactory,\n        deps\n      }) {\n    this.token = token;\n    this.toClass = toClass;\n    this.toValue = toValue;\n    this.toAlias = toAlias;\n    this.toFactory = toFactory;\n    this.toAsyncFactory = toAsyncFactory;\n    this.dependencies = deps;\n  }\n\n  resolve(): ResolvedBinding {\n    var factoryFn:Function;\n    var resolvedDeps;\n    var isAsync = false;\n    if (isPresent(this.toClass)) {\n      factoryFn = reflector.factory(this.toClass);\n      resolvedDeps = _dependenciesFor(this.toClass);\n    } else if (isPresent(this.toAlias)) {\n      factoryFn = (aliasInstance) => aliasInstance;\n      resolvedDeps = [Dependency.fromKey(Key.get(this.toAlias))];\n    } else if (isPresent(this.toFactory)) {\n      factoryFn = this.toFactory;\n      resolvedDeps = _constructDependencies(this.toFactory, this.dependencies);\n    } else if (isPresent(this.toAsyncFactory)) {\n      factoryFn = this.toAsyncFactory;\n      resolvedDeps = _constructDependencies(this.toAsyncFactory, this.dependencies);\n      isAsync = true;\n    } else {\n      factoryFn = () => this.toValue;\n      resolvedDeps = _EMPTY_LIST;\n    }\n\n    return new ResolvedBinding(\n      Key.get(this.token),\n      factoryFn,\n      resolvedDeps,\n      isAsync\n    );\n  }\n}\n\n/// Dependency binding with resolved keys and dependencies.\nexport class ResolvedBinding {\n  key:Key;\n  factory:Function;\n  dependencies:List<Dependency>;\n  providedAsPromise:boolean;\n\n  constructor(key:Key, factory:Function, dependencies:List<Dependency>, providedAsPromise:boolean) {\n    this.key = key;\n    this.factory = factory;\n    this.dependencies = dependencies;\n    this.providedAsPromise = providedAsPromise;\n  }\n}\n\n/**\n * Provides fluent API for imperative construction of [Binding] objects.\n */\nexport function bind(token):BindingBuilder {\n  return new BindingBuilder(token);\n}\n\n/**\n * Helper class for [bind] function.\n */\nexport class BindingBuilder {\n  token;\n\n  constructor(token) {\n    this.token = token;\n  }\n\n  toClass(type:Type):Binding {\n    return new Binding(this.token, {toClass: type});\n  }\n\n  toValue(value):Binding {\n    return new Binding(this.token, {toValue: value});\n  }\n\n  toAlias(aliasToken):Binding {\n    return new Binding(this.token, {toAlias: aliasToken});\n  }\n\n  toFactory(factoryFunction:Function, dependencies:List = null):Binding {\n    return new Binding(this.token, {\n      toFactory: factoryFunction,\n      deps: dependencies\n    });\n  }\n\n  toAsyncFactory(factoryFunction:Function, dependencies:List = null):Binding {\n    return new Binding(this.token, {\n      toAsyncFactory: factoryFunction,\n      deps: dependencies\n    });\n  }\n}\n\nfunction _constructDependencies(factoryFunction:Function, dependencies:List) {\n  return isBlank(dependencies) ?\n    _dependenciesFor(factoryFunction) :\n    ListWrapper.map(dependencies, (t) => Dependency.fromKey(Key.get(t)));\n}\n\nfunction _dependenciesFor(typeOrFunc):List {\n  var params = reflector.parameters(typeOrFunc);\n  if (isBlank(params)) return [];\n  if (ListWrapper.any(params, (p) => isBlank(p))) throw new NoAnnotationError(typeOrFunc);\n  return ListWrapper.map(params, (p) => _extractToken(typeOrFunc, p));\n}\n\nfunction _extractToken(typeOrFunc, annotations) {\n  var depProps = [];\n  var token = null;\n  var optional = false;\n  var lazy = false;\n  var asPromise = false;\n\n  for (var i = 0; i < annotations.length; ++i) {\n    var paramAnnotation = annotations[i];\n\n    if (paramAnnotation instanceof Type) {\n      token = paramAnnotation;\n\n    } else if (paramAnnotation instanceof Inject) {\n      token = paramAnnotation.token;\n\n    } else if (paramAnnotation instanceof InjectPromise) {\n      token = paramAnnotation.token;\n      asPromise = true;\n\n    } else if (paramAnnotation instanceof InjectLazy) {\n      token = paramAnnotation.token;\n      lazy = true;\n\n    } else if (paramAnnotation instanceof Optional) {\n      optional = true;\n\n    } else if (paramAnnotation instanceof DependencyAnnotation) {\n      if (isPresent(paramAnnotation.token)) {\n       token = paramAnnotation.token;\n      }\n      ListWrapper.push(depProps, paramAnnotation);\n\n    }\n  }\n\n  if (isPresent(token)) {\n    return _createDependency(token, asPromise, lazy, optional, depProps);\n  } else {\n    throw new NoAnnotationError(typeOrFunc);\n  }\n}\n\nfunction _createDependency(token, asPromise, lazy, optional, depProps):Dependency {\n  return new Dependency(Key.get(token), asPromise, lazy, optional, depProps);\n}\n"]}