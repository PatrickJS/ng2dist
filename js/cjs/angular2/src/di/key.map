{"version":3,"sources":["key.js"],"names":[],"mappings":"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","file":"angular2/src/di/key.js","sourcesContent":["import {KeyMetadataError} from './exceptions';\nimport {MapWrapper, Map} from 'angular2/src/facade/collection';\nimport {int, isPresent} from 'angular2/src/facade/lang';\n\nexport class Key {\n  token;\n  id:int;\n  metadata:any;\n  constructor(token, id:int) {\n    this.token = token;\n    this.id = id;\n    this.metadata = null;\n  }\n\n  static setMetadata(key:Key, metadata):Key {\n    if (isPresent(key.metadata) && key.metadata !== metadata) {\n      throw new KeyMetadataError();\n    }\n    key.metadata = metadata;\n    return key;\n  }\n\n  static get(token):Key {\n    return _globalKeyRegistry.get(token);\n  }\n\n  static get numberOfKeys():int {\n    return _globalKeyRegistry.numberOfKeys;\n  }\n}\n\nexport class KeyRegistry {\n  _allKeys:Map;\n  constructor() {\n    this._allKeys = MapWrapper.create();\n  }\n\n  get(token):Key {\n    if (token instanceof Key) return token;\n\n    if (MapWrapper.contains(this._allKeys, token)) {\n      return MapWrapper.get(this._allKeys, token);\n    }\n\n    var newKey = new Key(token, Key.numberOfKeys);\n    MapWrapper.set(this._allKeys, token, newKey);\n    return newKey;\n  }\n\n  get numberOfKeys():int {\n    return MapWrapper.size(this._allKeys);\n  }\n}\n\nvar _globalKeyRegistry = new KeyRegistry();\n"]}