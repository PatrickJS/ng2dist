{"version":3,"sources":["get_testability.es6"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;gBAArC,EAAC,GAAE,YAAqB;AAAE,2BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;SAA1D,EAAC,4DAAoB,CAAA,OAAM,AAAC,6CAAkB,CACtC,CAAA,6DAAqB,sEAA2B,CAAA,6DAAqB,GAAK,EAAC,OAAM,4DAAmB,CAAC,AAD/D,CACgE;AADtG,sBAAkB;AAAG,cAAU;AAAvC,AAAI,EAAA,oBAEJ,SAAM,kBAAgB,CAGR,WAAU,AAAa,CAAG;AACpC,KAAG,aAAa,EAAI,YAAU,CAAC;AACjC,AAPsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAS3B,WAAS,CAAT,UAAW,QAAO,AAAU,CAAG;AAC7B,OAAG,aAAa,WAAW,AAAC,CAAC,QAAO,CAAC,CAAC;EACxC;AAEA,aAAW,CAAX,UAAa,KAAI,CAAG,CAAA,OAAM,AAAQ,CAAG,CAAA,UAAS,AAAS,CAAG;AACxD,SAAO,CAAA,IAAG,aAAa,aAAa,AAAC,CAAC,KAAI,CAAG,QAAM,CAAG,WAAS,CAAC,CAAC;EACnE;AAAA,KAfmF;AAArF,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAIC,WAAU,GAJY;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAQH,QAAO,GARmB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAD1B,eAAc,KAAO,WAArB,eAAc,KAAO,WAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,iBAkBG,SAAM,eAAa;;AAkB1B,AApCwC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,sBAmBpB,WAAU,CAAjB,UAAmB,QAAO,AAAqB,CAAG;AAChD,OAAI,CAAC,MAAK,SAAS,CAAG;AACpB,WAAK,SAAS,EAAI,GAAC,CAAC;IACtB;AAAA,AACA,SAAK,SAAS,eAAe,EAAI,UAAS,IAAG,CAAsB;AACjE,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,QAAO,sBAAsB,AAAC,CAAC,IAAG,CAAC,CAAC;AAEtD,SAAI,WAAU,GAAK,KAAG,CAAG;AACvB,YAAM,IAAI,MAAI,AAAC,CAAC,yCAAwC,CAAC,CAAC;MAC5D;AAAA,AACA,WAAO,IAAI,kBAAgB,AAAC,CAAC,WAAU,CAAC,CAAC;IAC3C,CAAC;AACD,SAAK,SAAS,gBAAgB,EAAI,UAAS,AAAD,CAAG,GAG7C,CAAC;EACH,EAnCmF;AAArF,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkBK,mBAAkB,GAlBA;EAAC,CAAC,CAAC,CAAC;AAoCrD","file":"angular2/src/core/testability/get_testability.js","sourcesContent":["import {TestabilityRegistry, Testability} from 'angular2/src/core/testability/testability';\n\nclass PublicTestability {\n  _testabililty: Testability;\n\n  constructor(testability: Testability) {\n    this._testability = testability;\n  }\n\n  whenStable(callback: Function) {\n    this._testability.whenStable(callback);\n  }\n\n  findBindings(using, binding: string, exactMatch: boolean) {\n    return this._testability.findBindings(using, binding, exactMatch);\n  }\n}\n\nexport class GetTestability {\n  static addToWindow(registry: TestabilityRegistry) {\n    if (!window.angular2) {\n      window.angular2 = {};\n    }\n    window.angular2.getTestability = function(elem): PublicTestability {\n      var testability = registry.findTestabilityInTree(elem);\n\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return new PublicTestability(testability);\n    };\n    window.angular2.resumeBootstrap = function() {\n      // Intentionally left blank. This will allow Protractor to run\n      // against angular2 without turning off Angular synchronization.\n    };\n  }\n}\n"]}