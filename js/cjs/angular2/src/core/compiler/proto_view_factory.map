{"version":3,"sources":["proto_view_factory.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/proto_view_factory.js","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {List, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {reflector} from 'angular2/src/reflection/reflection';\n\nimport {ChangeDetection} from 'angular2/change_detection';\nimport {Component, Viewport, DynamicComponent} from '../annotations/annotations';\n\nimport * as renderApi from 'angular2/src/render/api';\nimport {AppProtoView} from './view';\nimport {ProtoElementInjector, DirectiveBinding} from './element_injector';\n\n@Injectable()\nexport class ProtoViewFactory {\n  _changeDetection:ChangeDetection;\n  _renderer:renderApi.Renderer;\n\n  constructor(changeDetection:ChangeDetection, renderer:renderApi.Renderer) {\n    this._changeDetection = changeDetection;\n    this._renderer = renderer;\n  }\n\n  createProtoView(componentBinding:DirectiveBinding, renderProtoView: renderApi.ProtoViewDto, directives:List<DirectiveBinding>):AppProtoView {\n    var protoChangeDetector;\n    if (isBlank(componentBinding)) {\n      protoChangeDetector = this._changeDetection.createProtoChangeDetector('root', null);\n    } else {\n      var componentAnnotation:Component = componentBinding.annotation;\n      protoChangeDetector = this._changeDetection.createProtoChangeDetector(\n        'dummy', componentAnnotation.changeDetection\n      );\n    }\n    var protoView = new AppProtoView(this._renderer, renderProtoView.render, protoChangeDetector);\n\n    for (var i=0; i<renderProtoView.elementBinders.length; i++) {\n      var renderElementBinder = renderProtoView.elementBinders[i];\n      var sortedDirectives = new SortedDirectives(renderElementBinder.directives, directives);\n      var parentPeiWithDistance = this._findParentProtoElementInjectorWithDistance(\n        i, protoView.elementBinders, renderProtoView.elementBinders\n      );\n      var protoElementInjector = this._createProtoElementInjector(\n        i, parentPeiWithDistance,\n        sortedDirectives, renderElementBinder\n      );\n      this._createElementBinder(\n        protoView, renderElementBinder, protoElementInjector, sortedDirectives\n      );\n      this._createDirectiveBinders(protoView, sortedDirectives);\n    }\n    MapWrapper.forEach(renderProtoView.variableBindings, (mappedName, varName) => {\n      protoView.bindVariable(varName, mappedName);\n    });\n    return protoView;\n  }\n\n  _findParentProtoElementInjectorWithDistance(binderIndex, elementBinders, renderElementBinders) {\n    var distance = 0;\n    do {\n      var renderElementBinder = renderElementBinders[binderIndex];\n      binderIndex = renderElementBinder.parentIndex;\n      if (binderIndex !== -1) {\n        distance += renderElementBinder.distanceToParent;\n        var elementBinder = elementBinders[binderIndex];\n        if (isPresent(elementBinder.protoElementInjector)) {\n          return new ParentProtoElementInjectorWithDistance(elementBinder.protoElementInjector, distance);\n        }\n      }\n    } while (binderIndex !== -1);\n    return new ParentProtoElementInjectorWithDistance(null, -1);\n  }\n\n  _createProtoElementInjector(binderIndex, parentPeiWithDistance, sortedDirectives, renderElementBinder) {\n    var protoElementInjector = null;\n    // Create a protoElementInjector for any element that either has bindings *or* has one\n    // or more var- defined. Elements with a var- defined need a their own element injector\n    // so that, when hydrating, $implicit can be set to the element.\n    var hasVariables = MapWrapper.size(renderElementBinder.variableBindings) > 0;\n    if (sortedDirectives.directives.length > 0 || hasVariables) {\n      protoElementInjector = new ProtoElementInjector(\n          parentPeiWithDistance.protoElementInjector, binderIndex,\n          sortedDirectives.directives,\n          isPresent(sortedDirectives.componentDirective), parentPeiWithDistance.distance\n      );\n      protoElementInjector.attributes = renderElementBinder.readAttributes;\n      // Viewport directives are treated differently than other element with var- definitions.\n      if (hasVariables && !isPresent(sortedDirectives.viewportDirective)) {\n        protoElementInjector.exportComponent = isPresent(sortedDirectives.componentDirective);\n        protoElementInjector.exportElement = isBlank(sortedDirectives.componentDirective);\n\n        // experiment\n        var exportImplicitName = MapWrapper.get(renderElementBinder.variableBindings, '\\$implicit');\n        if (isPresent(exportImplicitName)) {\n          protoElementInjector.exportImplicitName = exportImplicitName;\n        }\n      }\n    }\n    return protoElementInjector;\n  }\n\n  _createElementBinder(protoView, renderElementBinder, protoElementInjector, sortedDirectives) {\n    var parent = null;\n    if (renderElementBinder.parentIndex !== -1) {\n      parent = protoView.elementBinders[renderElementBinder.parentIndex];\n    }\n    var elBinder = protoView.bindElement(\n      parent,\n      renderElementBinder.distanceToParent,\n      protoElementInjector,\n      sortedDirectives.componentDirective,\n      sortedDirectives.viewportDirective\n    );\n    // text nodes\n    for (var i=0; i<renderElementBinder.textBindings.length; i++) {\n      protoView.bindTextNode(renderElementBinder.textBindings[i].ast);\n    }\n    // element properties\n    MapWrapper.forEach(renderElementBinder.propertyBindings, (astWithSource, propertyName) => {\n      protoView.bindElementProperty(astWithSource.ast, propertyName);\n    });\n    // events\n    protoView.bindEvent(renderElementBinder.eventBindings, -1);\n    // variables\n    // The view's locals needs to have a full set of variable names at construction time\n    // in order to prevent new variables from being set later in the lifecycle. Since we don't want\n    // to actually create variable bindings for the $implicit bindings, add to the\n    // protoLocals manually.\n    MapWrapper.forEach(renderElementBinder.variableBindings, (mappedName, varName) => {\n      MapWrapper.set(protoView.protoLocals, mappedName, null);\n    });\n    return elBinder;\n  }\n\n  _createDirectiveBinders(protoView, sortedDirectives) {\n    for (var i=0; i<sortedDirectives.renderDirectives.length; i++) {\n      var renderDirectiveMetadata = sortedDirectives.renderDirectives[i];\n      // directive properties\n      MapWrapper.forEach(renderDirectiveMetadata.propertyBindings, (astWithSource, propertyName) => {\n        // TODO: these setters should eventually be created by change detection, to make\n        // it monomorphic!\n        var setter = reflector.setter(propertyName);\n        protoView.bindDirectiveProperty(i, astWithSource.ast, propertyName, setter);\n      });\n      // directive events\n      protoView.bindEvent(renderDirectiveMetadata.eventBindings, i);\n    }\n  }\n\n}\n\nclass SortedDirectives {\n  componentDirective: DirectiveBinding;\n  viewportDirective: DirectiveBinding;\n  renderDirectives: List<renderApi.DirectiveMetadata>;\n  directives: List<DirectiveBinding>;\n\n  constructor(renderDirectives, allDirectives) {\n    this.renderDirectives = [];\n    this.directives = [];\n    this.viewportDirective = null;\n    this.componentDirective = null;\n    ListWrapper.forEach(renderDirectives, (renderDirectiveMetadata) => {\n      var directiveBinding = allDirectives[renderDirectiveMetadata.directiveIndex];\n      if ((directiveBinding.annotation instanceof Component) || (directiveBinding.annotation instanceof DynamicComponent)) {\n        // component directives need to be the first binding in ElementInjectors!\n        this.componentDirective = directiveBinding;\n        ListWrapper.insert(this.renderDirectives, 0, renderDirectiveMetadata);\n        ListWrapper.insert(this.directives, 0, directiveBinding);\n      } else {\n        if (directiveBinding.annotation instanceof Viewport) {\n          this.viewportDirective = directiveBinding;\n        }\n        ListWrapper.push(this.renderDirectives, renderDirectiveMetadata);\n        ListWrapper.push(this.directives, directiveBinding);\n      }\n    });\n\n  }\n}\n\nclass ParentProtoElementInjectorWithDistance {\n  protoElementInjector:ProtoElementInjector;\n  distance:number;\n  constructor(protoElementInjector:ProtoElementInjector, distance:number) {\n    this.protoElementInjector = protoElementInjector;\n    this.distance = distance;\n  }\n}\n"]}