{"version":3,"sources":["application.js"],"names":[],"mappings":"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","file":"angular2/src/core/application.js","sourcesContent":["import {Injector, bind, OpaqueToken, Optional} from 'angular2/di';\nimport {NumberWrapper, Type, isBlank, isPresent, BaseException,\n    assertionsEnabled, print, stringify} from 'angular2/src/facade/lang';\nimport {BrowserDomAdapter} from 'angular2/src/dom/browser_adapter';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Compiler, CompilerCache} from './compiler/compiler';\nimport {Reflector, reflector} from 'angular2/src/reflection/reflection';\nimport {Parser, Lexer, ChangeDetection, dynamicChangeDetection, jitChangeDetection} from 'angular2/change_detection';\nimport {ExceptionHandler} from './exception_handler';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {TemplateResolver} from './compiler/template_resolver';\nimport {DirectiveMetadataReader} from './compiler/directive_metadata_reader';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\nimport {ShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/shadow_dom_strategy';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {XHR} from 'angular2/src/services/xhr';\nimport {XHRImpl} from 'angular2/src/services/xhr_impl';\nimport {EventManager, DomEventsPlugin} from 'angular2/src/render/dom/events/event_manager';\nimport {KeyEventsPlugin} from 'angular2/src/render/dom/events/key_events';\nimport {HammerGesturesPlugin} from 'angular2/src/render/dom/events/hammer_gestures';\nimport {Binding} from 'angular2/src/di/binding';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {ComponentRef, DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {TestabilityRegistry, Testability} from 'angular2/src/core/testability/testability';\nimport {ViewFactory, VIEW_POOL_CAPACITY} from 'angular2/src/core/compiler/view_factory';\nimport {ProtoViewFactory} from 'angular2/src/core/compiler/proto_view_factory';\nimport {Renderer} from 'angular2/src/render/api';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport * as rc from 'angular2/src/render/dom/compiler/compiler';\nimport * as rvf from 'angular2/src/render/dom/view/view_factory';\n\nimport {\n  appComponentRefToken,\n  appChangeDetectorToken,\n  appElementToken,\n  appComponentAnnotatedTypeToken,\n  appDocumentToken,\n} from './application_tokens';\n\nvar _rootInjector: Injector;\n\n// Contains everything that is safe to share between applications.\nvar _rootBindings = [\n  bind(Reflector).toValue(reflector),\n  TestabilityRegistry\n];\n\nfunction _injectorBindings(appComponentType): List<Binding> {\n  return [\n      bind(appDocumentToken).toValue(DOM.defaultDoc()),\n      bind(appComponentAnnotatedTypeToken).toFactory((reader) => {\n        // TODO(rado): investigate whether to support bindings on root component.\n        return reader.read(appComponentType);\n      }, [DirectiveMetadataReader]),\n\n      bind(appElementToken).toFactory((appComponentAnnotatedType, appDocument) => {\n        var selector = appComponentAnnotatedType.annotation.selector;\n        var element = DOM.querySelector(appDocument, selector);\n        if (isBlank(element)) {\n          throw new BaseException(`The app selector \"${selector}\" did not match any elements`);\n        }\n        return element;\n      }, [appComponentAnnotatedTypeToken, appDocumentToken]),\n      bind(appComponentRefToken).toAsyncFactory((dynamicComponentLoader, injector, appElement,\n        appComponentAnnotatedType, testability, registry) => {\n\n        // We need to do this here to ensure that we create Testability and\n        // it's ready on the window for users.\n        registry.registerApplication(appElement, testability);\n        return dynamicComponentLoader.loadIntoNewLocation(appElement, appComponentAnnotatedType.type, null, injector);\n      }, [DynamicComponentLoader, Injector, appElementToken, appComponentAnnotatedTypeToken,\n        Testability, TestabilityRegistry]),\n\n      bind(appChangeDetectorToken).toFactory((ref) => ref.hostView.changeDetector,\n          [appComponentRefToken]),\n      bind(appComponentType).toFactory((ref) => ref.instance,\n          [appComponentRefToken]),\n      bind(LifeCycle).toFactory((exceptionHandler) => new LifeCycle(exceptionHandler, null, assertionsEnabled()),[ExceptionHandler]),\n      bind(EventManager).toFactory((zone) => {\n        var plugins = [new HammerGesturesPlugin(), new KeyEventsPlugin(), new DomEventsPlugin()];\n        return new EventManager(plugins, zone);\n      }, [VmTurnZone]),\n      bind(ShadowDomStrategy).toFactory(\n          (styleUrlResolver, doc) => new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, doc.head),\n          [StyleUrlResolver, appDocumentToken]),\n      bind(Renderer).toClass(DirectDomRenderer),\n      bind(rc.Compiler).toClass(rc.DefaultCompiler),\n      // TODO(tbosch): We need an explicit factory here, as\n      // we are getting errors in dart2js with mirrors...\n      bind(rvf.ViewFactory).toFactory(\n        (capacity, eventManager, shadowDomStrategy) => new rvf.ViewFactory(capacity, eventManager, shadowDomStrategy),\n        [rvf.VIEW_POOL_CAPACITY, EventManager, ShadowDomStrategy]\n      ),\n      bind(rvf.VIEW_POOL_CAPACITY).toValue(10000),\n      ProtoViewFactory,\n      // TODO(tbosch): We need an explicit factory here, as\n      // we are getting errors in dart2js with mirrors...\n      bind(ViewFactory).toFactory(\n        (capacity) => new ViewFactory(capacity),\n        [VIEW_POOL_CAPACITY]\n      ),\n      bind(VIEW_POOL_CAPACITY).toValue(10000),\n      Compiler,\n      CompilerCache,\n      TemplateResolver,\n      bind(ChangeDetection).toValue(dynamicChangeDetection),\n      TemplateLoader,\n      DirectiveMetadataReader,\n      Parser,\n      Lexer,\n      ExceptionHandler,\n      bind(XHR).toValue(new XHRImpl()),\n      ComponentUrlMapper,\n      UrlResolver,\n      StyleUrlResolver,\n      StyleInliner,\n      DynamicComponentLoader,\n      Testability\n  ];\n}\n\nfunction _createVmZone(givenReporter:Function): VmTurnZone {\n  var defaultErrorReporter = (exception, stackTrace) => {\n    var longStackTrace = ListWrapper.join(stackTrace, \"\\n\\n-----async gap-----\\n\");\n    print(`${exception}\\n\\n${longStackTrace}`);\n    throw exception;\n  };\n\n  var reporter = isPresent(givenReporter) ? givenReporter : defaultErrorReporter;\n\n  var zone = new VmTurnZone({enableLongStackTrace: assertionsEnabled()});\n  zone.initCallbacks({onErrorHandler: reporter});\n  return zone;\n}\n\n/**\n * Bootstrapping for Angular applications.\n *\n * You instantiate an Angular application by explicitly specifying a component to use as the root component for your\n * application via the `bootstrap()` method.\n *\n * ## Simple Example\n *\n * Assuming this `index.html`:\n *\n * ```html\n * <html>\n *   <!-- load Angular script tags here. -->\n *   <body>\n *     <my-app>loading...</my-app>\n *   </body>\n * </html>\n * ```\n *\n * An application is bootstrapped inside an existing browser DOM, typically `index.html`. Unlike Angular 1, Angular 2\n * does not compile/process bindings in `index.html`. This is mainly for security reasons, as well as architectural\n * changes in Angular 2. This means that `index.html` can safely be processed using server-side technologies such as\n * bindings. Bindings can thus use double-curly `{{ syntax }}` without collision from Angular 2 component double-curly\n * `{{ syntax }}`.\n *\n * We can use this script code:\n *\n * ```\n * @Component({\n *    selector: 'my-app'\n * })\n * @View({\n *    template: 'Hello {{ name }}!'\n * })\n * class MyApp {\n *   name:string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n *\n * main() {\n *   return bootstrap(MyApp);\n * }\n * ```\n *\n * When the app developer invokes `bootstrap()` with the root component `MyApp` as its argument, Angular performs the\n * following tasks:\n *\n *  1. It uses the component's `selector` property to locate the DOM element which needs to be upgraded into\n *     the angular component.\n *  2. It creates a new child injector (from the primordial injector) and configures the injector with the component's\n *     `injectables`. Optionally, you can also override the injector configuration for an app by invoking\n *     `bootstrap` with the `componentInjectableBindings` argument.\n *  3. It creates a new [Zone] and connects it to the angular application's change detection domain instance.\n *  4. It creates a shadow DOM on the selected component's host element and loads the template into it.\n *  5. It instantiates the specified component.\n *  6. Finally, Angular performs change detection to apply the initial data bindings for the application.\n *\n *\n * ## Instantiating Multiple Applications on a Single Page\n *\n * There are two ways to do this.\n *\n *\n * ### Isolated Applications\n *\n * Angular creates a new application each time that the `bootstrap()` method is invoked. When multiple applications\n * are created for a page, Angular treats each application as independent within an isolated change detection and\n * [Zone] domain. If you need to share data between applications, use the strategy described in the next\n * section, \"Applications That Share Change Detection.\"\n *\n *\n * ### Applications That Share Change Detection\n *\n * If you need to bootstrap multiple applications that share common data, the applications must share a common\n * change detection and zone. To do that, create a meta-component that lists the application components in its template.\n * By only invoking the `bootstrap()` method once, with the meta-component as its argument, you ensure that only a\n * single change detection zone is created and therefore data can be shared across the applications.\n *\n *\n * ## Primordial Injector\n *\n * When working within a browser window, there are many singleton resources: cookies, title, location, and others.\n * Angular services that represent these resources must likewise be shared across all Angular applications that\n * occupy the same browser window.  For this reason, Angular creates exactly one global primordial injector which stores\n * all shared services, and each angular application injector has the primordial injector as its parent.\n *\n * Each application has its own private injector as well. When there are multiple applications on a page, Angular treats\n * each application injector's services as private to that application.\n *\n *\n * # API\n * - [appComponentType]: The root component which should act as the application. This is a reference to a [Type]\n *   which is annotated with `@Component(...)`.\n * - [componentInjectableBindings]: An additional set of bindings that can be added to the [Component.injectables] to\n *   override default injection behavior.\n * - [errorReporter]: `function(exception:any, stackTrace:string)` a default error reporter for unhandled exceptions.\n *\n * Returns a [Promise] with the application`s private [Injector].\n *\n * @exportedAs angular2/core\n */\nexport function bootstrap(appComponentType: Type,\n                          componentInjectableBindings: List<Binding> = null,\n                          errorReporter: Function = null): Promise<ComponentRef> {\n  BrowserDomAdapter.makeCurrent();\n  var bootstrapProcess = PromiseWrapper.completer();\n\n  var zone = _createVmZone(errorReporter);\n  zone.run(() => {\n    // TODO(rado): prepopulate template cache, so applications with only\n    // index.html and main.js are possible.\n\n    var appInjector = _createAppInjector(appComponentType, componentInjectableBindings, zone);\n\n    PromiseWrapper.then(appInjector.asyncGet(appComponentRefToken),\n      (componentRef) => {\n        var appChangeDetector = componentRef.hostView.changeDetector;\n        // retrieve life cycle: may have already been created if injected in root component\n        var lc = appInjector.get(LifeCycle);\n        lc.registerWith(zone, appChangeDetector);\n        lc.tick(); //the first tick that will bootstrap the app\n\n        bootstrapProcess.resolve(componentRef);\n      },\n\n      (err) => {\n        bootstrapProcess.reject(err)\n      });\n  });\n\n  return bootstrapProcess.promise;\n}\n\nfunction _createAppInjector(appComponentType: Type, bindings: List<Binding>, zone: VmTurnZone): Injector {\n  if (isBlank(_rootInjector)) _rootInjector = Injector.resolveAndCreate(_rootBindings);\n  var mergedBindings = isPresent(bindings) ?\n      ListWrapper.concat(_injectorBindings(appComponentType), bindings) :\n      _injectorBindings(appComponentType);\n  ListWrapper.push(mergedBindings, bind(VmTurnZone).toValue(zone));\n  return _rootInjector.resolveAndCreateChild(mergedBindings);\n}\n"]}