{"version":3,"sources":["compile_control.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/compiler/compile_control.js","sourcesContent":["import {isBlank} from 'angular2/src/facade/lang';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {CompileElement} from './compile_element';\nimport {CompileStep} from './compile_step';\n\n/**\n * Controls the processing order of elements.\n * Right now it only allows to add a parent element.\n */\nexport class CompileControl {\n  _steps:List<CompileStep>;\n  _currentStepIndex:number;\n  _parent:CompileElement;\n  _results;\n  _additionalChildren;\n  _ignoreCurrentElement: boolean;\n\n  constructor(steps) {\n    this._steps = steps;\n    this._currentStepIndex = 0;\n    this._parent = null;\n    this._results = null;\n    this._additionalChildren = null;\n  }\n\n  // only public so that it can be used by compile_pipeline\n  internalProcess(results, startStepIndex, parent:CompileElement, current:CompileElement) {\n    this._results = results;\n    var previousStepIndex = this._currentStepIndex;\n    var previousParent = this._parent;\n\n    this._ignoreCurrentElement = false;\n\n    for (var i = startStepIndex;\n         i < this._steps.length && !this._ignoreCurrentElement;\n         i++) {\n      var step = this._steps[i];\n      this._parent = parent;\n      this._currentStepIndex = i;\n      step.process(parent, current, this);\n      parent = this._parent;\n    }\n\n    if (!this._ignoreCurrentElement) {\n      ListWrapper.push(results, current);\n    }\n\n    this._currentStepIndex = previousStepIndex;\n    this._parent = previousParent;\n\n    var localAdditionalChildren = this._additionalChildren;\n    this._additionalChildren = null;\n    return localAdditionalChildren;\n  }\n\n  addParent(newElement:CompileElement) {\n    this.internalProcess(this._results, this._currentStepIndex+1, this._parent, newElement);\n    this._parent = newElement;\n  }\n\n  addChild(element:CompileElement) {\n    if (isBlank(this._additionalChildren)) {\n      this._additionalChildren = ListWrapper.create();\n    }\n    ListWrapper.push(this._additionalChildren, element);\n  }\n\n  /**\n   * Ignores the current element.\n   *\n   * When a step call [ignoreCurrentElement], no further steps are executed on the current\n   * element and no [CompileElement] is added to the result list.\n   */\n  ignoreCurrentElement() {\n    this._ignoreCurrentElement = true;\n  }\n}\n"]}