{"version":3,"sources":["proto_view.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;iBAArC,EAAC,GAAE,YAAqB;AAAE,4BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;EAAlD,UAAQ,EAAhB,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;EAAtG,IAAE,EADV,EAAC,+CAAoB,CAAA,OAAM,AAAC,gCAAkB,CACtC,CAAA,gDAAqB,yDAA2B,CAAA,gDAAqB,GAAK,EAAC,OAAM,+CAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAEtG,OAAG;AAAG,MAAE;AAAG,cAAU;AAAG,aAAS;EAEjC,cAAY,EALpB,EAAC,wBAAoB,CAAA,OAAM,AAAC,oBAAkB,CACtC,CAAA,yBAAqB,kCAA2B,CAAA,yBAAqB,GAAK,EAAC,OAAM,wBAAmB,CAAC,AAD/D,CACgE;EAKtG,iBAAe,EANvB,EAAC,uBAAoB,CAAA,OAAM,AAAC,WAAkB,CACtC,CAAA,wBAAqB,iCAA2B,CAAA,wBAAqB,GAAK,EAAC,OAAM,uBAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,kBAQG,SAAM,gBAAc,CAOb,IAIZ;;AAHE,mBAAa;AACb,YAAM;AACN,eAAS;AAET,KAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,KAAG,eAAe,EAAI,eAAa,CAAC;AACpC,KAAG,kBAAkB,EAAI,CAAA,GAAE,kBAAkB,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAC;AAC5D,KAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,KAAG,kBAAkB,EAAI,CAAA,CAAC,SAAQ,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAA,EAAK,CAAA,GAAE,SAAS,AAAC,CAAC,IAAG,QAAQ,CAAG,iBAAe,CAAC,CAAC,EAAI,EAAA,EAAI,EAAA,CAAC;AAa9G,AArCwC,CAAA;AAAxC,AAAI,EAAA,mCAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,mBA2B3B,6BAA4B,CAA5B,UAA8B,mBAAkB,AAAsB,CAAG;AACvE,AAAI,MAAA,CAAA,uBAAsB,EAAI,EAAA,CAAC;AAC/B,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,IAAG,eAAe,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/C,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,IAAG,eAAe,CAAE,CAAA,CAAC,CAAC;AAC/B,SAAI,SAAQ,AAAC,CAAC,EAAC,YAAY,CAAC,CAAG;AAC7B,SAAC,gBAAgB,EAAI,CAAA,mBAAkB,CAAE,uBAAsB,CAAC,CAAC;AACjE,8BAAsB,EAAE,CAAC;MAC3B;AAAA,IACF;AAAA,EACF,MApCmF;AAArF,KAAK,eAAe,AAAC,uEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,YAAc,AA2BwB,CAAA,IAAG,CAAE,gBAAc,CAAC,AA3BzB,GACE;EAAC,CAAC,CAAC,CAAC;AAqCrD","file":"angular2/src/render/dom/view/proto_view.js","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {List, Map, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ElementBinder} from './element_binder';\nimport {NG_BINDING_CLASS} from '../util';\n\nexport class RenderProtoView {\n  element;\n  elementBinders:List<ElementBinder>;\n  isTemplateElement:boolean;\n  isRootView:boolean;\n  rootBindingOffset:int;\n\n  constructor({\n    elementBinders,\n    element,\n    isRootView\n  }) {\n    this.element = element;\n    this.elementBinders = elementBinders;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.isRootView = isRootView;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS)) ? 1 : 0;\n  }\n\n  mergeChildComponentProtoViews(componentProtoViews:List<RenderProtoView>) {\n    var componentProtoViewIndex = 0;\n    for (var i=0; i<this.elementBinders.length; i++) {\n      var eb = this.elementBinders[i];\n      if (isPresent(eb.componentId)) {\n        eb.nestedProtoView = componentProtoViews[componentProtoViewIndex];\n        componentProtoViewIndex++;\n      }\n    }\n  }\n}\n"]}