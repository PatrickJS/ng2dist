{"version":3,"sources":["proto_view_builder.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/view/proto_view_builder.js","sourcesContent":["import {isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper, Set, SetWrapper, List} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {\n  ASTWithSource, AST, AstTransformer, AccessMember, LiteralArray, ImplicitReceiver\n} from 'angular2/change_detection';\nimport {SetterFn} from 'angular2/src/reflection/types';\n\nimport {RenderProtoView} from './proto_view';\nimport {ElementBinder, Event} from './element_binder';\nimport {setterFactory} from './property_setter_factory';\n\nimport * as api from '../../api';\nimport * as directDomRenderer from '../direct_dom_renderer';\n\nimport {NG_BINDING_CLASS, EVENT_TARGET_SEPARATOR} from '../util';\n\nexport class ProtoViewBuilder {\n  rootElement;\n  variableBindings: Map<string, string>;\n  elements:List<ElementBinderBuilder>;\n  isRootView:boolean;\n\n  constructor(rootElement) {\n    this.rootElement = rootElement;\n    this.elements = [];\n    this.isRootView = false;\n    this.variableBindings = MapWrapper.create();\n  }\n\n  bindElement(element, description = null):ElementBinderBuilder {\n    var builder = new ElementBinderBuilder(this.elements.length, element, description);\n    ListWrapper.push(this.elements, builder);\n    DOM.addClass(element, NG_BINDING_CLASS);\n\n    return builder;\n  }\n\n  bindVariable(name, value) {\n    // Store the variable map from value to variable, reflecting how it will be used later by\n    // RenderView. When a local is set to the view, a lookup for the variable name will take place keyed\n    // by the \"value\", or exported identifier. For example, ng-repeat sets a view local of \"index\".\n    // When this occurs, a lookup keyed by \"index\" must occur to find if there is a var referencing\n    // it.\n    MapWrapper.set(this.variableBindings, value, name);\n  }\n\n  setIsRootView(value) {\n    this.isRootView = value;\n  }\n\n  build():api.ProtoViewDto {\n    var renderElementBinders = [];\n\n    var apiElementBinders = [];\n    ListWrapper.forEach(this.elements, (ebb) => {\n      var propertySetters = MapWrapper.create();\n      var apiDirectiveBinders = ListWrapper.map(ebb.directives, (db) => {\n        ebb.eventBuilder.merge(db.eventBuilder);\n        return new api.DirectiveBinder({\n          directiveIndex: db.directiveIndex,\n          propertyBindings: db.propertyBindings,\n          eventBindings: db.eventBindings\n        });\n      });\n      MapWrapper.forEach(ebb.propertySetters, (setter, propertyName) => {\n        MapWrapper.set(propertySetters, propertyName, setter);\n      });\n      var nestedProtoView =\n          isPresent(ebb.nestedProtoView) ? ebb.nestedProtoView.build() : null;\n      var parentIndex = isPresent(ebb.parent) ? ebb.parent.index : -1;\n      ListWrapper.push(apiElementBinders, new api.ElementBinder({\n        index: ebb.index, parentIndex:parentIndex, distanceToParent:ebb.distanceToParent,\n        directives: apiDirectiveBinders,\n        nestedProtoView: nestedProtoView,\n        propertyBindings: ebb.propertyBindings, variableBindings: ebb.variableBindings,\n        eventBindings: ebb.eventBindings,\n        textBindings: ebb.textBindings,\n        readAttributes: ebb.readAttributes\n      }));\n      ListWrapper.push(renderElementBinders, new ElementBinder({\n        textNodeIndices: ebb.textBindingIndices,\n        contentTagSelector: ebb.contentTagSelector,\n        parentIndex: parentIndex,\n        distanceToParent: ebb.distanceToParent,\n        nestedProtoView: isPresent(nestedProtoView) ? nestedProtoView.render.delegate : null,\n        componentId: ebb.componentId,\n        eventLocals: new LiteralArray(ebb.eventBuilder.buildEventLocals()),\n        localEvents: ebb.eventBuilder.buildLocalEvents(),\n        globalEvents: ebb.eventBuilder.buildGlobalEvents(),\n        propertySetters: propertySetters\n      }));\n    });\n    return new api.ProtoViewDto({\n      render: new directDomRenderer.DirectDomProtoViewRef(new RenderProtoView({\n        element: this.rootElement,\n        elementBinders: renderElementBinders,\n        isRootView: this.isRootView\n      })),\n      elementBinders: apiElementBinders,\n      variableBindings: this.variableBindings\n    });\n  }\n}\n\nexport class ElementBinderBuilder {\n  element;\n  index:number;\n  parent:ElementBinderBuilder;\n  distanceToParent:number;\n  directives:List<DirectiveBuilder>;\n  nestedProtoView:ProtoViewBuilder;\n  propertyBindings: Map<string, ASTWithSource>;\n  variableBindings: Map<string, string>;\n  eventBindings: List<api.EventBinding>;\n  eventBuilder: EventBuilder;\n  textBindingIndices: List<number>;\n  textBindings: List<ASTWithSource>;\n  contentTagSelector:string;\n  propertySetters: Map<string, SetterFn>;\n  readAttributes: Map<string, string>;\n  componentId: string;\n\n  constructor(index, element, description) {\n    this.element = element;\n    this.index = index;\n    this.parent = null;\n    this.distanceToParent = 0;\n    this.directives = [];\n    this.nestedProtoView = null;\n    this.propertyBindings = MapWrapper.create();\n    this.variableBindings = MapWrapper.create();\n    this.eventBindings = ListWrapper.create();\n    this.eventBuilder = new EventBuilder();\n    this.textBindings = [];\n    this.textBindingIndices = [];\n    this.contentTagSelector = null;\n    this.propertySetters = MapWrapper.create();\n    this.componentId = null;\n    this.readAttributes = MapWrapper.create();\n  }\n\n  setParent(parent:ElementBinderBuilder, distanceToParent):ElementBinderBuilder {\n    this.parent = parent;\n    if (isPresent(parent)) {\n      this.distanceToParent = distanceToParent;\n    }\n    return this;\n  }\n\n  readAttribute(attrName:string) {\n    if (isBlank(MapWrapper.get(this.readAttributes, attrName))) {\n      MapWrapper.set(this.readAttributes, attrName, DOM.getAttribute(this.element, attrName));\n    }\n  }\n\n  bindDirective(directiveIndex:number):DirectiveBuilder {\n    var directive = new DirectiveBuilder(directiveIndex);\n    ListWrapper.push(this.directives, directive);\n    return directive;\n  }\n\n  bindNestedProtoView(rootElement):ProtoViewBuilder {\n    if (isPresent(this.nestedProtoView)) {\n      throw new BaseException('Only one nested view per element is allowed');\n    }\n    this.nestedProtoView = new ProtoViewBuilder(rootElement);\n    return this.nestedProtoView;\n  }\n\n  bindProperty(name, expression) {\n    MapWrapper.set(this.propertyBindings, name, expression);\n    this.bindPropertySetter(name);\n  }\n\n  bindPropertySetter(name) {\n    MapWrapper.set(this.propertySetters, name, setterFactory(name));\n  }\n\n  bindVariable(name, value) {\n    // When current is a view root, the variable bindings are set to the *nested* proto view.\n    // The root view conceptually signifies a new \"block scope\" (the nested view), to which\n    // the variables are bound.\n    if (isPresent(this.nestedProtoView)) {\n      this.nestedProtoView.bindVariable(name, value);\n    } else {\n      // Store the variable map from value to variable, reflecting how it will be used later by\n      // RenderView. When a local is set to the view, a lookup for the variable name will take place keyed\n      // by the \"value\", or exported identifier. For example, ng-repeat sets a view local of \"index\".\n      // When this occurs, a lookup keyed by \"index\" must occur to find if there is a var referencing\n      // it.\n      MapWrapper.set(this.variableBindings, value, name);\n    }\n  }\n\n  bindEvent(name, expression, target = null) {\n    ListWrapper.push(this.eventBindings, this.eventBuilder.add(name, expression, target));\n  }\n\n  bindText(index, expression) {\n    ListWrapper.push(this.textBindingIndices, index);\n    ListWrapper.push(this.textBindings, expression);\n  }\n\n  setContentTagSelector(value:string) {\n    this.contentTagSelector = value;\n  }\n\n  setComponentId(componentId:string) {\n    this.componentId = componentId;\n  }\n}\n\nexport class DirectiveBuilder {\n  directiveIndex:number;\n  propertyBindings: Map<string, ASTWithSource>;\n  eventBindings: List<api.EventBinding>;\n  eventBuilder: EventBuilder;\n\n  constructor(directiveIndex) {\n    this.directiveIndex = directiveIndex;\n    this.propertyBindings = MapWrapper.create();\n    this.eventBindings = ListWrapper.create();\n    this.eventBuilder = new EventBuilder();\n  }\n\n  bindProperty(name, expression) {\n    MapWrapper.set(this.propertyBindings, name, expression);\n  }\n\n  bindEvent(name, expression, target = null) {\n    ListWrapper.push(this.eventBindings, this.eventBuilder.add(name, expression, target));\n  }\n}\n\nexport class EventBuilder extends AstTransformer {\n  locals: List<AST>;\n  localEvents: List<Event>;\n  globalEvents: List<Event>;\n  _implicitReceiver: AST;\n\n  constructor() {\n    super();\n    this.locals = [];\n    this.localEvents = [];\n    this.globalEvents = [];\n    this._implicitReceiver = new ImplicitReceiver();\n  }\n\n  add(name: string, source: ASTWithSource, target: string): api.EventBinding {\n    // TODO(tbosch): reenable this when we are parsing element properties\n    // out of action expressions\n    // var adjustedAst = astWithSource.ast.visit(this);\n    var adjustedAst = source.ast;\n    var fullName = isPresent(target) ? target + EVENT_TARGET_SEPARATOR + name : name;\n    var result = new api.EventBinding(fullName, new ASTWithSource(adjustedAst, source.source, ''));\n    var event = new Event(name, target, fullName);\n    if (isBlank(target)) {\n      ListWrapper.push(this.localEvents, event);  \n    } else {\n      ListWrapper.push(this.globalEvents, event);  \n    }\n    return result;\n  }\n\n  visitAccessMember(ast:AccessMember) {\n    var isEventAccess = false;\n    var current = ast;\n    while (!isEventAccess && (current instanceof AccessMember)) {\n      if (current.name == '$event') {\n        isEventAccess = true;\n      }\n      current = current.receiver;\n    }\n\n    if (isEventAccess) {\n      ListWrapper.push(this.locals, ast);\n      var index = this.locals.length - 1;\n      return new AccessMember(this._implicitReceiver, `${index}`, (arr) => arr[index], null);\n    } else {\n      return ast;\n    }\n  }\n\n  buildEventLocals() {\n    return this.locals;\n  }\n\n  buildLocalEvents() {\n    return this.localEvents;\n  }\n\n  buildGlobalEvents() {\n    return this.globalEvents;\n  }\n\n  merge(eventBuilder: EventBuilder) {\n    this._merge(this.localEvents, eventBuilder.localEvents);\n    this._merge(this.globalEvents, eventBuilder.globalEvents);\n    ListWrapper.concat(this.locals, eventBuilder.locals);\n  }\n\n  _merge(host: List<Event>, tobeAdded: List<Event>) {\n    var names = ListWrapper.create();\n    for (var i = 0; i < host.length; i++) {\n      ListWrapper.push(names, host[i].fullName);\n    }\n    for (var j = 0; j < tobeAdded.length; j++) {\n      if (!ListWrapper.contains(names, tobeAdded[j].fullName)) {\n        ListWrapper.push(host, tobeAdded[j]);\n      }\n    }\n  }\n}\n"]}