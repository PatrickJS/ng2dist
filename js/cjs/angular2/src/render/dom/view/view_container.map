{"version":3,"sources":["view_container.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/view/view_container.js","sourcesContent":["import {isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {ListWrapper, MapWrapper, List} from 'angular2/src/facade/collection';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport * as viewModule from './view';\nimport * as ldModule from '../shadow_dom/light_dom';\nimport * as vfModule from './view_factory';\n\nexport class ViewContainer {\n  _viewFactory: vfModule.ViewFactory;\n  templateElement;\n  _views: List<viewModule.RenderView>;\n  _lightDom: ldModule.LightDom;\n  _hostLightDom: ldModule.LightDom;\n  _hydrated: boolean;\n\n  constructor(viewFactory: vfModule.ViewFactory,\n              templateElement) {\n    this._viewFactory = viewFactory;\n    this.templateElement = templateElement;\n\n    // The order in this list matches the DOM order.\n    this._views = [];\n    this._hostLightDom = null;\n    this._hydrated = false;\n  }\n\n  hydrate(destLightDom: ldModule.LightDom, hostLightDom: ldModule.LightDom) {\n    this._hydrated = true;\n    this._hostLightDom = hostLightDom;\n    this._lightDom = destLightDom;\n  }\n\n  dehydrate() {\n    if (isBlank(this._lightDom)) {\n      for (var i = this._views.length - 1; i >= 0; i--) {\n        var view = this._views[i];\n        ViewContainer.removeViewNodes(view);\n        this._viewFactory.returnView(view);\n      }\n      this._views = [];\n    } else {\n      for (var i=0; i<this._views.length; i++) {\n        var view = this._views[i];\n        this._viewFactory.returnView(view);\n      }\n      this._views = [];\n      this._lightDom.redistribute();\n    }\n\n    this._hostLightDom = null;\n    this._lightDom = null;\n    this._hydrated = false;\n  }\n\n  get(index: number): viewModule.RenderView {\n    return this._views[index];\n  }\n\n  size() {\n    return this._views.length;\n  }\n\n  _siblingToInsertAfter(index: number) {\n    if (index == 0) return this.templateElement;\n    return ListWrapper.last(this._views[index - 1].rootNodes);\n  }\n\n  _checkHydrated() {\n    if (!this._hydrated) throw new BaseException(\n        'Cannot change dehydrated ViewContainer');\n  }\n\n  insert(view, atIndex=-1): viewModule.RenderView {\n    if (!view.hydrated()) {\n      view.hydrate(this._hostLightDom);\n    }\n    if (atIndex == -1) atIndex = this._views.length;\n    ListWrapper.insert(this._views, atIndex, view);\n\n    if (isBlank(this._lightDom)) {\n      ViewContainer.moveViewNodesAfterSibling(this._siblingToInsertAfter(atIndex), view);\n    } else {\n      this._lightDom.redistribute();\n    }\n    // new content tags might have appeared, we need to redistribute.\n    if (isPresent(this._hostLightDom)) {\n      this._hostLightDom.redistribute();\n    }\n    return view;\n  }\n\n  /**\n   * The method can be used together with insert to implement a view move, i.e.\n   * moving the dom nodes while the directives in the view stay intact.\n   */\n  detach(atIndex:number) {\n    this._checkHydrated();\n    var detachedView = this.get(atIndex);\n    ListWrapper.removeAt(this._views, atIndex);\n    if (isBlank(this._lightDom)) {\n      ViewContainer.removeViewNodes(detachedView);\n    } else {\n      this._lightDom.redistribute();\n    }\n    // content tags might have disappeared we need to do redistribution.\n    if (isPresent(this._hostLightDom)) {\n      this._hostLightDom.redistribute();\n    }\n    return detachedView;\n  }\n\n  contentTagContainers() {\n    return this._views;\n  }\n\n  nodes():List {\n    var r = [];\n    for (var i = 0; i < this._views.length; ++i) {\n      r = ListWrapper.concat(r, this._views[i].rootNodes);\n    }\n    return r;\n  }\n\n\n  static moveViewNodesAfterSibling(sibling, view) {\n    for (var i = view.rootNodes.length - 1; i >= 0; --i) {\n      DOM.insertAfter(sibling, view.rootNodes[i]);\n    }\n  }\n\n  static removeViewNodes(view) {\n    var len = view.rootNodes.length;\n    if (len == 0) return;\n    var parent = view.rootNodes[0].parentNode;\n    for (var i = len - 1; i >= 0; --i) {\n      DOM.removeChild(parent, view.rootNodes[i]);\n    }\n  }\n}\n"]}