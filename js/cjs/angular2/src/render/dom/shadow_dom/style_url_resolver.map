{"version":3,"sources":["style_url_resolver.js"],"names":[],"mappings":"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","file":"angular2/src/render/dom/shadow_dom/style_url_resolver.js","sourcesContent":["// Some of the code comes from WebComponents.JS\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/HTMLImports/path.js\n\nimport {Injectable} from 'angular2/di';\nimport {RegExp, RegExpWrapper, StringWrapper} from 'angular2/src/facade/lang';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\n\n/**\n * Rewrites URLs by resolving '@import' and 'url()' URLs from the given base URL.\n */\n@Injectable()\nexport class StyleUrlResolver {\n  _resolver: UrlResolver;\n\n  constructor(resolver: UrlResolver) {\n    this._resolver = resolver;\n  }\n\n  resolveUrls(cssText: string, baseUrl: string) {\n    cssText = this._replaceUrls(cssText, _cssUrlRe, baseUrl);\n    cssText = this._replaceUrls(cssText, _cssImportRe, baseUrl);\n    return cssText;\n  }\n\n  _replaceUrls(cssText: string, re: RegExp, baseUrl: string) {\n    return StringWrapper.replaceAllMapped(cssText, re, (m) => {\n      var pre = m[1];\n      var url = StringWrapper.replaceAll(m[2], _quoteRe, '');\n      var post = m[3];\n\n      var resolvedUrl = this._resolver.resolve(baseUrl, url);\n\n      return pre + \"'\" + resolvedUrl + \"'\" + post;\n    });\n  }\n}\n\nvar _cssUrlRe = RegExpWrapper.create('(url\\\\()([^)]*)(\\\\))');\nvar _cssImportRe = RegExpWrapper.create('(@import[\\\\s]+(?!url\\\\())[\\'\"]([^\\'\"]*)[\\'\"](.*;)');\nvar _quoteRe = RegExpWrapper.create('[\\'\"]');\n"]}