{"version":3,"sources":["if.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;IAArC,EAAC,GAAE,YAAqB;AAAE,eAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;EAAlD,SAAO,EAAf,EAAC,4DAAoB,CAAA,OAAM,AAAC,6CAAkB,CACtC,CAAA,6DAAqB,sEAA2B,CAAA,6DAAqB,GAAK,EAAC,OAAM,4DAAmB,CAAC,AAD/D,CACgE;EAAtG,cAAY,EADpB,EAAC,+DAAoB,CAAA,OAAM,AAAC,6CAAkB,CACtC,CAAA,gEAAqB,yEAA2B,CAAA,gEAAqB,GAAK,EAAC,OAAM,+DAAmB,CAAC,AAD/D,CACgE;EACtG,QAAM,EAFd,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,KAiCG,SAAM,GAAC,CAIA,aAAY,AAAe,CAAG;AACxC,KAAG,cAAc,EAAI,cAAY,CAAC;AAClC,KAAG,cAAc,EAAI,KAAG,CAAC;AAC3B,AAxCsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,MA0C3B,GAAI,UAAQ,CAAE,YAAW,CAAG;AAC1B,OAAI,YAAW,GAAK,EAAC,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAA,EAAK,EAAC,IAAG,cAAc,CAAC,CAAG;AACxE,SAAG,cAAc,EAAI,KAAG,CAAC;AACzB,SAAG,cAAc,OAAO,AAAC,EAAC,CAAC;IAC7B,KAAO,KAAI,CAAC,YAAW,CAAA,EAAK,EAAC,OAAM,AAAC,CAAC,IAAG,cAAc,CAAC,CAAA,EAAK,CAAA,IAAG,cAAc,CAAC,CAAG;AAC/E,SAAG,cAAc,EAAI,MAAI,CAAC;AAC1B,SAAG,cAAc,MAAM,AAAC,EAAC,CAAC;IAC5B;AAAA,EACF,MAlDmF;AAArF,KAAK,eAAe,AAAC,mBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cA0BzB,SAAO,AAAC,CAAC;AACR,aAAO,CAAG,OAAK;AACf,eAAS,CAAG,EACV,WAAU,CAAG,KAAG,CAClB;AAAA,IACF,CAAC,EA/BgD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoCG,aAAY,GApCQ;EAAC,CAAC,CAAC,CAAC;AAmDrD","file":"angular2/src/directives/if.js","sourcesContent":["import {Viewport} from 'angular2/src/core/annotations/annotations';\nimport {ViewContainer} from 'angular2/src/core/compiler/view_container';\nimport {isBlank} from 'angular2/src/facade/lang';\n\n/**\n * Removes or recreates a portion of the DOM tree based on an {expression}.\n *\n * If the expression assigned to `if` evaluates to a false value then the element is removed from the\n * DOM, otherwise a clone of the element is reinserted into the DOM.\n *\n * # Example:\n *\n * ```\n * <div *if=\"errorCount > 0\" class=\"error\">\n *   <!-- Error message displayed when the errorCount property on the current context is greater than 0. -->\n *   {{errorCount}} errors detected\n * </div>\n * ```\n *\n * # Syntax\n *\n * - `<div *if=\"condition\">...</div>`\n * - `<div template=\"if condition\">...</div>`\n * - `<template [if]=\"condition\"><div>...</div></template>`\n *\n * @exportedAs angular2/directives\n */\n@Viewport({\n  selector: '[if]',\n  properties: {\n    'condition': 'if'\n  }\n})\nexport class If {\n  viewContainer: ViewContainer;\n  prevCondition: boolean;\n\n  constructor(viewContainer: ViewContainer) {\n    this.viewContainer = viewContainer;\n    this.prevCondition = null;\n  }\n\n  set condition(newCondition) {\n    if (newCondition && (isBlank(this.prevCondition) || !this.prevCondition)) {\n      this.prevCondition = true;\n      this.viewContainer.create();\n    } else if (!newCondition && (isBlank(this.prevCondition) || this.prevCondition)) {\n      this.prevCondition = false;\n      this.viewContainer.clear();\n    }\n  }\n}\n"]}