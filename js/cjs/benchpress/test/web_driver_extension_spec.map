{"version":3,"sources":["web_driver_extension_spec.js"],"names":[],"mappings":"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","file":"benchpress/test/web_driver_extension_spec.js","sourcesContent":["import {\n  afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport { StringMap, ListWrapper } from 'angular2/src/facade/collection';\nimport { isPresent, StringWrapper } from 'angular2/src/facade/lang';\nimport { PromiseWrapper } from 'angular2/src/facade/async';\n\nimport { WebDriverExtension, bind, Injector, Options } from 'benchpress/common';\n\nexport function main() {\n  function createExtension(ids, caps) {\n    return Injector.resolveAndCreate([\n      ListWrapper.map(ids, (id) => bind(id).toValue(new MockExtension(id)) ),\n      bind(Options.CAPABILITIES).toValue(caps),\n      WebDriverExtension.bindTo(ids)\n    ]).asyncGet(WebDriverExtension);\n  }\n\n  describe('WebDriverExtension.bindTo', () => {\n\n    it('should bind the extension that matches the capabilities', inject([AsyncTestCompleter], (async) => {\n      createExtension(['m1', 'm2', 'm3'], {'browser': 'm2'}).then( (m) => {\n        expect(m.id).toEqual('m2');\n        async.done();\n      });\n    }));\n\n    it('should throw if there is no match', inject([AsyncTestCompleter], (async) => {\n      PromiseWrapper.catchError(\n        createExtension(['m1'], {'browser': 'm2'}),\n        (err) => {\n          expect(isPresent(err)).toBe(true);\n          async.done();\n        }\n      );\n    }));\n\n  });\n}\n\nclass MockExtension extends WebDriverExtension {\n  id:string;\n\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n\n  supports(capabilities:StringMap):boolean {\n    return StringWrapper.equals(capabilities['browser'], this.id);\n  }\n}\n"]}