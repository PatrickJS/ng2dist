{"version":3,"sources":["perflog_metric_spec.js"],"names":[],"mappings":"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","file":"benchpress/test/metric/perflog_metric_spec.js","sourcesContent":["import {\n  afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport { List, ListWrapper, StringMapWrapper } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\nimport { isPresent, isBlank } from 'angular2/src/facade/lang';\n\nimport {\n  Metric, PerflogMetric, WebDriverExtension,\n  PerfLogFeatures,\n  bind, Injector, Options\n} from 'benchpress/common';\n\nimport { TraceEventFactory } from '../trace_event_factory';\n\nexport function main() {\n  var commandLog;\n  var eventFactory = new TraceEventFactory('timeline', 'pid0');\n\n  function createMetric(perfLogs, microMetrics = null, perfLogFeatures = null) {\n    commandLog = [];\n    if (isBlank(perfLogFeatures)) {\n      perfLogFeatures = new PerfLogFeatures({render: true, gc: true});\n    }\n    if (isBlank(microMetrics)) {\n      microMetrics = StringMapWrapper.create();\n    }\n    var bindings = [\n      Options.DEFAULT_BINDINGS,\n      PerflogMetric.BINDINGS,\n      bind(Options.MICRO_METRICS).toValue(microMetrics),\n      bind(PerflogMetric.SET_TIMEOUT).toValue( (fn, millis) => {\n        ListWrapper.push(commandLog, ['setTimeout', millis]);\n        fn();\n      }),\n      bind(WebDriverExtension).toValue(new MockDriverExtension(perfLogs, commandLog, perfLogFeatures))\n    ];\n    return Injector.resolveAndCreate(bindings).get(PerflogMetric);\n  }\n\n  describe('perflog metric', () => {\n\n    it('should describe itself based on the perfLogFeatrues', () => {\n      expect(createMetric([[]], null, new PerfLogFeatures()).describe()).toEqual({\n        'scriptTime': 'script execution time in ms, including gc and render',\n        'pureScriptTime': 'script execution time in ms, without gc nor render'\n      });\n\n      expect(createMetric([[]], null, new PerfLogFeatures({\n        render: true,\n        gc: false\n      })).describe()).toEqual({\n        'scriptTime': 'script execution time in ms, including gc and render',\n        'pureScriptTime': 'script execution time in ms, without gc nor render',\n        'renderTime': 'render time in and ouside of script in ms',\n      });\n\n      expect(createMetric([[]]).describe()).toEqual({\n        'scriptTime': 'script execution time in ms, including gc and render',\n        'pureScriptTime': 'script execution time in ms, without gc nor render',\n        'renderTime': 'render time in and ouside of script in ms',\n        'gcTime': 'gc time in and ouside of script in ms',\n        'gcAmount': 'gc amount in kbytes',\n        'majorGcTime': 'time of major gcs in ms'\n      });\n    });\n\n    it('should describe itself based on micro metrics', () => {\n      var description = createMetric([[]], {\n        'myMicroMetric': 'someDesc'\n      }).describe();\n      expect(description['myMicroMetric']).toEqual('someDesc');\n    });\n\n    describe('beginMeasure', () => {\n\n      it('should mark the timeline', inject([AsyncTestCompleter], (async) => {\n        var metric = createMetric([[]]);\n        metric.beginMeasure().then((_) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0']]);\n\n          async.done();\n        });\n      }));\n\n    });\n\n    describe('endMeasure', () => {\n\n      it('should mark and aggregate events in between the marks', inject([AsyncTestCompleter], (async) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.start('script', 4),\n            eventFactory.end('script', 6),\n            eventFactory.markEnd('benchpress0', 10)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog'\n            ]);\n            expect(data['scriptTime']).toBe(2);\n\n            async.done();\n        });\n      }));\n\n      it('should restart timing', inject([AsyncTestCompleter], (async) => {\n        var events = [\n          [\n            eventFactory.markStart('benchpress0', 0),\n            eventFactory.markEnd('benchpress0', 1),\n            eventFactory.markStart('benchpress1', 2),\n          ], [\n            eventFactory.markEnd('benchpress1', 3)\n          ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => metric.endMeasure(true) )\n          .then( (_) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n\n            async.done();\n        });\n      }));\n\n      it('should loop and aggregate until the end mark is present', inject([AsyncTestCompleter], (async) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 1) ],\n          [ eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress0', 10) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', null],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog',\n              [ 'setTimeout', 100 ],\n              'readPerfLog'\n            ]);\n            expect(data['scriptTime']).toBe(3);\n\n            async.done();\n        });\n      }));\n\n      it('should store events after the end mark for the next call', inject([AsyncTestCompleter], (async) => {\n        var events = [\n          [ eventFactory.markStart('benchpress0', 0), eventFactory.markEnd('benchpress0', 1), eventFactory.markStart('benchpress1', 1),\n            eventFactory.start('script', 1), eventFactory.end('script', 2) ],\n          [ eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress1', 6) ]\n        ];\n        var metric = createMetric(events);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(true) )\n          .then( (data) => {\n            expect(data['scriptTime']).toBe(0);\n            return metric.endMeasure(true)\n          })\n          .then( (data) => {\n            expect(commandLog).toEqual([\n              ['timeBegin', 'benchpress0'],\n              ['timeEnd', 'benchpress0', 'benchpress1'],\n              'readPerfLog',\n              ['timeEnd', 'benchpress1', 'benchpress2'],\n              'readPerfLog'\n            ]);\n            expect(data['scriptTime']).toBe(3);\n\n            async.done();\n        });\n      }));\n\n    });\n\n    describe('aggregation', () => {\n\n      function aggregate(events, microMetrics = null) {\n        ListWrapper.insert(events, 0, eventFactory.markStart('benchpress0', 0));\n        ListWrapper.push(events, eventFactory.markEnd('benchpress0', 10));\n        var metric = createMetric([events], microMetrics);\n        return metric\n          .beginMeasure().then( (_) => metric.endMeasure(false) );\n      }\n\n\n      it('should report a single interval', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['scriptTime']).toBe(5);\n          async.done();\n        });\n      }));\n\n      it('should sum up multiple intervals', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5),\n          eventFactory.start('script', 10),\n          eventFactory.end('script', 17)\n        ]).then((data) => {\n          expect(data['scriptTime']).toBe(12);\n          async.done();\n        });\n      }));\n\n      it('should ignore not started intervals', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.end('script', 10)\n        ]).then((data) => {\n          expect(data['scriptTime']).toBe(0);\n          async.done();\n        });\n      }));\n\n      it('should ignore not ended intervals', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('script', 10)\n        ]).then((data) => {\n          expect(data['scriptTime']).toBe(0);\n          async.done();\n        });\n      }));\n\n      it('should ignore events from different processed as the start mark', inject([AsyncTestCompleter], (async) => {\n        var otherProcessEventFactory = new TraceEventFactory('timeline', 'pid1');\n        var metric = createMetric([[\n          eventFactory.markStart('benchpress0', 0),\n          eventFactory.start('script', 0, null),\n          eventFactory.end('script', 5, null),\n          otherProcessEventFactory.start('script', 10, null),\n          otherProcessEventFactory.end('script', 17, null),\n          eventFactory.markEnd('benchpress0', 20)\n        ]]);\n        metric.beginMeasure()\n          .then( (_) => metric.endMeasure(false) )\n          .then((data) => {\n            expect(data['scriptTime']).toBe(5);\n            async.done();\n          });\n      }));\n\n      it('should support scriptTime metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.end('script', 5)\n        ]).then((data) => {\n          expect(data['scriptTime']).toBe(5);\n          async.done();\n        });\n      }));\n\n      it('should support renderTime metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('render', 0),\n          eventFactory.end('render', 5)\n        ]).then((data) => {\n          expect(data['renderTime']).toBe(5);\n          async.done();\n        });\n      }));\n\n      it('should support gcTime/gcAmount metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('gc', 0, {'usedHeapSize': 2500}),\n          eventFactory.end('gc', 5, {'usedHeapSize': 1000})\n        ]).then((data) => {\n          expect(data['gcTime']).toBe(5);\n          expect(data['gcAmount']).toBe(1.5);\n          expect(data['majorGcTime']).toBe(0);\n          async.done();\n        });\n      }));\n\n      it('should support majorGcTime metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('gc', 0, {'usedHeapSize': 2500}),\n          eventFactory.end('gc', 5, {'usedHeapSize': 1000, 'majorGc': true})\n        ]).then((data) => {\n          expect(data['gcTime']).toBe(5);\n          expect(data['majorGcTime']).toBe(5);\n          async.done();\n        });\n      }));\n\n      it('should support pureScriptTime = scriptTime-gcTime-renderTime', inject([AsyncTestCompleter], (async) => {\n        aggregate([\n          eventFactory.start('script', 0),\n          eventFactory.start('gc', 1, {'usedHeapSize': 1000}),\n          eventFactory.end('gc', 4, {'usedHeapSize': 0}),\n          eventFactory.start('render', 4),\n          eventFactory.end('render', 5),\n          eventFactory.end('script', 6)\n        ]).then((data) => {\n          expect(data['scriptTime']).toBe(6);\n          expect(data['pureScriptTime']).toBe(2);\n          async.done();\n        });\n      }));\n\n      describe('microMetrics', () => {\n\n        it('should report micro metrics', inject([AsyncTestCompleter], (async) => {\n          aggregate([\n            eventFactory.markStart('mm1', 0),\n            eventFactory.markEnd('mm1', 5),\n          ], {'mm1': 'micro metric 1'}).then((data) => {\n            expect(data['mm1']).toBe(5.0);\n            async.done();\n          });\n        }));\n\n        it('should ignore micro metrics that were not specified', inject([AsyncTestCompleter], (async) => {\n          aggregate([\n            eventFactory.markStart('mm1', 0),\n            eventFactory.markEnd('mm1', 5),\n          ]).then((data) => {\n            expect(data['mm1']).toBeFalsy();\n            async.done();\n          });\n        }));\n\n        it('should report micro metric averages', inject([AsyncTestCompleter], (async) => {\n          aggregate([\n            eventFactory.markStart('mm1*20', 0),\n            eventFactory.markEnd('mm1*20', 5),\n          ], {'mm1': 'micro metric 1'}).then((data) => {\n            expect(data['mm1']).toBe(5/20);\n            async.done();\n          });\n        }));\n\n      });\n\n    });\n\n  });\n}\n\nclass MockDriverExtension extends WebDriverExtension {\n  _perfLogs:List;\n  _commandLog:List;\n  _perfLogFeatures:PerfLogFeatures;\n  constructor(perfLogs, commandLog, perfLogFeatures) {\n    super();\n    this._perfLogs = perfLogs;\n    this._commandLog = commandLog;\n    this._perfLogFeatures = perfLogFeatures;\n  }\n\n  timeBegin(name):Promise {\n    ListWrapper.push(this._commandLog, ['timeBegin', name]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  timeEnd(name, restartName):Promise {\n    ListWrapper.push(this._commandLog, ['timeEnd', name, restartName]);\n    return PromiseWrapper.resolve(null);\n  }\n\n  perfLogFeatures():PerfLogFeatures {\n    return this._perfLogFeatures;\n  }\n\n  readPerfLog():Promise {\n    ListWrapper.push(this._commandLog, 'readPerfLog');\n    if (this._perfLogs.length > 0) {\n      var next = this._perfLogs[0];\n      ListWrapper.removeAt(this._perfLogs, 0);\n      return PromiseWrapper.resolve(next);\n    } else {\n      return PromiseWrapper.resolve([]);\n    }\n  }\n}\n"]}