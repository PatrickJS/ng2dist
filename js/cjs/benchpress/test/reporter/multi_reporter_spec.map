{"version":3,"sources":["multi_reporter_spec.js"],"names":[],"mappings":"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","file":"benchpress/test/reporter/multi_reporter_spec.js","sourcesContent":["import {\n  afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport { List, ListWrapper, StringMap } from 'angular2/src/facade/collection';\nimport { PromiseWrapper, Promise } from 'angular2/src/facade/async';\nimport { DateWrapper } from 'angular2/src/facade/lang';\n\nimport { Reporter, MultiReporter, bind, Injector, MeasureValues } from 'benchpress/common';\n\nexport function main() {\n  function createReporters(ids) {\n    return Injector.resolveAndCreate([\n      ListWrapper.map(ids, (id) => bind(id).toValue(new MockReporter(id)) ),\n      MultiReporter.createBindings(ids)\n    ]).asyncGet(MultiReporter);\n  }\n\n  describe('multi reporter', () => {\n\n    it('should reportMeasureValues to all', inject([AsyncTestCompleter], (async) => {\n      var mv = new MeasureValues(0, DateWrapper.now(), {});\n      createReporters(['m1', 'm2'])\n        .then( (r) => r.reportMeasureValues(mv) )\n        .then( (values) => {\n\n        expect(values).toEqual([\n          {'id': 'm1', 'values': mv},\n          {'id': 'm2', 'values': mv}\n        ]);\n        async.done();\n      });\n    }));\n\n    it('should reportSample to call', inject([AsyncTestCompleter], (async) => {\n      var completeSample = [\n        new MeasureValues(0, DateWrapper.now(), {}),\n        new MeasureValues(1, DateWrapper.now(), {})\n      ];\n      var validSample = [completeSample[1]];\n\n      createReporters(['m1', 'm2'])\n        .then( (r) => r.reportSample(completeSample, validSample) )\n        .then( (values) => {\n\n        expect(values).toEqual([\n          {'id': 'm1', 'completeSample': completeSample, 'validSample': validSample},\n          {'id': 'm2', 'completeSample': completeSample, 'validSample': validSample}\n        ]);\n        async.done();\n      })\n    }));\n\n  });\n}\n\nclass MockReporter extends Reporter {\n  _id:string;\n\n  constructor(id) {\n    super();\n    this._id = id;\n  }\n\n  reportMeasureValues(values:MeasureValues):Promise {\n    return PromiseWrapper.resolve({\n      'id': this._id,\n      'values': values\n    });\n  }\n\n  reportSample(completeSample:List<MeasureValues>, validSample:List<MeasureValues>):Promise {\n    return PromiseWrapper.resolve({\n      'id': this._id,\n      'completeSample': completeSample,\n      'validSample': validSample\n    });\n  }\n\n}\n"]}