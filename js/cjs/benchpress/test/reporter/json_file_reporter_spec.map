{"version":3,"sources":["json_file_reporter_spec.js"],"names":[],"mappings":"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","file":"benchpress/test/reporter/json_file_reporter_spec.js","sourcesContent":["import {\n  afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\n\nimport { DateWrapper, Json, RegExpWrapper, isPresent } from 'angular2/src/facade/lang';\nimport { PromiseWrapper } from 'angular2/src/facade/async';\n\nimport {\n  bind, Injector,\n  SampleDescription,\n  MeasureValues,\n  Options\n} from 'benchpress/common';\n\n\nimport { JsonFileReporter } from 'benchpress/src/reporter/json_file_reporter';\n\nexport function main() {\n  describe('file reporter', () => {\n    var loggedFile;\n\n    function createReporter({sampleId, descriptions, metrics, path}) {\n      var bindings = [\n        JsonFileReporter.BINDINGS,\n        bind(SampleDescription).toValue(new SampleDescription(sampleId, descriptions, metrics)),\n        bind(JsonFileReporter.PATH).toValue(path),\n        bind(Options.NOW).toValue( () => DateWrapper.fromMillis(1234) ),\n        bind(Options.WRITE_FILE).toValue((filename, content) => {\n          loggedFile = {\n            'filename': filename,\n            'content': content\n          };\n          return PromiseWrapper.resolve(null);\n        })\n      ];\n      return Injector.resolveAndCreate(bindings).get(JsonFileReporter);\n    }\n\n    it('should write all data into a file', inject([AsyncTestCompleter], (async) => {\n      createReporter({\n        sampleId: 'someId',\n        descriptions: [{ 'a': 2 }],\n        path: 'somePath',\n        metrics: {\n          'script': 'script time'\n        }\n      }).reportSample([\n        mv(0, 0, { 'a': 3, 'b': 6})\n      ], [mv(0, 0, {\n        'a': 3, 'b': 6\n      }), mv(1, 1, {\n        'a': 5, 'b': 9\n      })]);\n      var regExp = RegExpWrapper.create('somePath/someId_\\\\d+\\\\.json');\n      expect(isPresent(RegExpWrapper.firstMatch(regExp, loggedFile['filename']))).toBe(true);\n      var parsedContent = Json.parse(loggedFile['content']);\n      expect(parsedContent).toEqual({\n        \"description\": {\n          \"id\": \"someId\",\n          \"description\": {\n            \"a\": 2\n          },\n          \"metrics\": {\"script\": \"script time\"}\n        },\n        \"completeSample\": [{\n            \"timeStamp\": \"1970-01-01T00:00:00.000Z\",\n            \"runIndex\": 0,\n            \"values\": {\n              \"a\": 3,\n              \"b\": 6\n            }\n        }],\n        \"validSample\": [\n          {\n            \"timeStamp\": \"1970-01-01T00:00:00.000Z\",\n            \"runIndex\": 0,\n            \"values\": {\n              \"a\": 3,\n              \"b\": 6\n            }\n          },\n          {\n            \"timeStamp\": \"1970-01-01T00:00:00.001Z\",\n            \"runIndex\": 1,\n            \"values\": {\n              \"a\": 5,\n              \"b\": 9\n            }\n          }\n        ]\n      });\n      async.done();\n    }));\n\n  });\n}\n\nfunction mv(runIndex, time, values) {\n  return new MeasureValues(runIndex, DateWrapper.fromMillis(time), values);\n}\n"]}