{"version":3,"sources":["benchpress.es6"],"names":[],"mappings":"AAAA;;;;;EAAS,KAAG,EAAZ,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;EAArG,QAAM,EADf,EAAC,aAAoB,CAAA,OAAM,AAAC,YAAkB,CACtC,CAAA,cAAqB,uBAA2B,CAAA,cAAqB,GAAK,EAAC,OAAM,aAAmB,CAAC,AAD/D,CACgE;gBAD9G,EAAC,aAAoB,CAAA,OAAM,AAAC,YAAkB,CACtC,CAAA,cAAqB,uBAA2B,CAAA,cAAqB,GAAK,EAAC,OAAM,aAAmB,CAAC,AAD/D,CACgE;8DAD9G,EAAC,2DAAoB,CAAA,OAAM,AAAC,8CAAkB,CACtC,CAAA,4DAAqB,qEAA2B,CAAA,4DAAqB,GAAK,EAAC,OAAM,2DAAmB,CAAC,AAD/D,CACgE;AAK9G,AAAI,EAAA,CAAA,EAAC,EAAI,CAAA,OAAM,AAAC,CAAC,IAAG,CAAC,CAAC;AAOtB,MAAM,iBAAiB,KAAK,AAAC,CAC3B,IAAG,AAAC,CAAC,OAAM,WAAW,CAAC,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAC5C,CAAC;AAED,OAAS,UAAQ,CAAE,QAAO,CAAG,CAAA,OAAM;AACjC,OAAO,IAAI,QAAM,AAAC,CAAC,SAAS,OAAM,CAAG,CAAA,MAAK;AACxC,KAAC,UAAU,AAAC,CAAC,QAAO,CAAG,QAAM,GAAG,SAAC,KAAI,CAAM;AACzC,SAAI,KAAI,CAAG;AACT,aAAK,AAAC,CAAC,KAAI,CAAC,CAAC;MACf,KAAO;AACL,cAAM,AAAC,EAAC,CAAC;MACX;AAAA,IACF,EAAC,CAAC;EACJ,CAAC,CAAA;AACH;AA3BA,KAAK,QAAQ,EAAb,CAAA,eAAc,WAAW;AAAzB,+BAAwB;AAAE,6FAAwB;EAAE;AAApD,WAAS,CAAG,KAAG;AAAA,cAA6B,AAAX,CAAC;AA4BlC","file":"benchpress/benchpress.js","sourcesContent":["import { bind } from 'angular2/di';\nimport { Options } from './common';\n\nexport * from './common';\nexport { SeleniumWebDriverAdapter } from './src/webdriver/selenium_webdriver_adapter';\n\nvar fs = require('fs');\n\n// TODO(tbosch): right now we bind the `writeFile` method\n// in benchpres/benchpress.es6. This does not work for Dart,\n// find another way...\n// Note: Can't do the `require` call in a facade as it can't be loaded into the browser\n// for our unit tests via karma.\nOptions.DEFAULT_BINDINGS.push(\n  bind(Options.WRITE_FILE).toValue(writeFile)\n);\n\nfunction writeFile(filename, content) {\n  return new Promise(function(resolve, reject) {\n    fs.writeFile(filename, content, (error) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve();\n      }\n    });\n  })\n}\n"]}