{"version":3,"sources":["sampler.js"],"names":[],"mappings":"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","file":"benchpress/src/sampler.js","sourcesContent":["import { isPresent, isBlank, Date, DateWrapper } from 'angular2/src/facade/lang';\nimport { Promise, PromiseWrapper } from 'angular2/src/facade/async';\nimport { StringMapWrapper, StringMap, List, ListWrapper } from 'angular2/src/facade/collection';\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { Metric } from './metric';\nimport { Validator } from './validator';\nimport { Reporter } from './reporter';\nimport { WebDriverExtension } from './web_driver_extension';\nimport { WebDriverAdapter } from './web_driver_adapter';\n\nimport { Options } from './common_options';\nimport { MeasureValues} from './measure_values';\n\n/**\n * The Sampler owns the sample loop:\n * 1. calls the prepare/execute callbacks,\n * 2. gets data from the metric\n * 3. asks the validator for a valid sample\n * 4. reports the new data to the reporter\n * 5. loop until there is a valid sample\n */\nexport class Sampler {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n\n  _driver:WebDriverAdapter;\n  _driverExtension:WebDriverExtension;\n  _metric:Metric;\n  _reporter:Reporter;\n  _validator:Validator;\n  _forceGc:boolean;\n  _prepare:Function;\n  _execute:Function;\n  _now:Function;\n\n  constructor({\n    driver, driverExtension, metric, reporter, validator, forceGc, prepare, execute, now\n  }:{\n    driver: WebDriverAdapter,\n    driverExtension: WebDriverExtension, metric: Metric, reporter: Reporter,\n    validator: Validator, prepare: Function, execute: Function, now: Function\n  }={}) {\n    this._driver = driver;\n    this._driverExtension = driverExtension;\n    this._metric = metric;\n    this._reporter = reporter;\n    this._validator = validator;\n    this._forceGc = forceGc;\n    this._prepare = prepare;\n    this._execute = execute;\n    this._now = now;\n  }\n\n  sample():Promise<SampleState> {\n    var loop;\n    loop = (lastState) => {\n      return this._iterate(lastState)\n        .then( (newState) => {\n          if (isPresent(newState.validSample)) {\n            return newState;\n          } else {\n            return loop(newState);\n          }\n        });\n    }\n    return this._gcIfNeeded().then( (_) => loop(new SampleState([], null)) );\n  }\n\n  _gcIfNeeded() {\n    if (this._forceGc) {\n      return this._driverExtension.gc();\n    } else {\n      return PromiseWrapper.resolve(null);\n    }\n  }\n\n  _iterate(lastState) {\n    var resultPromise;\n    if (isPresent(this._prepare)) {\n      resultPromise = this._driver.waitFor(this._prepare)\n        .then( (_) => this._gcIfNeeded() );\n    } else {\n      resultPromise = PromiseWrapper.resolve(null);\n    }\n    if (isPresent(this._prepare) || lastState.completeSample.length === 0) {\n      resultPromise = resultPromise.then( (_) => this._metric.beginMeasure() );\n    }\n    return resultPromise\n      .then( (_) => this._driver.waitFor(this._execute) )\n      .then( (_) => this._gcIfNeeded() )\n      .then( (_) => this._metric.endMeasure(isBlank(this._prepare)) )\n      .then( (measureValues) => this._report(lastState, measureValues) );\n  }\n\n  _report(state:SampleState, metricValues:StringMap):Promise<SampleState> {\n    var measureValues = new MeasureValues(state.completeSample.length, this._now(), metricValues);\n    var completeSample = ListWrapper.concat(state.completeSample, [measureValues]);\n    var validSample = this._validator.validate(completeSample);\n    var resultPromise = this._reporter.reportMeasureValues(measureValues);\n    if (isPresent(validSample)) {\n      resultPromise = resultPromise.then( (_) => this._reporter.reportSample(completeSample, validSample) )\n    }\n    return resultPromise.then( (_) => new SampleState(completeSample, validSample) );\n  }\n\n}\n\nexport class SampleState {\n  completeSample:List;\n  validSample:List;\n\n  constructor(completeSample: List, validSample: List) {\n    this.completeSample = completeSample;\n    this.validSample = validSample;\n  }\n}\n\nvar _BINDINGS = [\n  bind(Sampler).toFactory(\n    (driver, driverExtension, metric, reporter, validator, forceGc, prepare, execute, now) => new Sampler({\n      driver: driver,\n      driverExtension: driverExtension,\n      reporter: reporter,\n      validator: validator,\n      metric: metric,\n      forceGc: forceGc,\n      // TODO(tbosch): DI right now does not support null/undefined objects\n      // Mostly because the cache would have to be initialized with a\n      // special null object, which is expensive.\n      prepare: prepare !== false ? prepare : null,\n      execute: execute,\n      now: now\n    }),\n    [\n      WebDriverAdapter, WebDriverExtension, Metric, Reporter, Validator,\n      Options.FORCE_GC, Options.PREPARE, Options.EXECUTE, Options.NOW\n    ]\n  )\n];\n"]}