{"version":3,"sources":["json_file_reporter.js"],"names":[],"mappings":"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","file":"benchpress/src/reporter/json_file_reporter.js","sourcesContent":["import { DateWrapper, isPresent, isBlank, Json } from 'angular2/src/facade/lang';\nimport { List } from 'angular2/src/facade/collection';\nimport { Promise, PromiseWrapper } from 'angular2/src/facade/async';\n\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { Reporter } from '../reporter';\nimport { SampleDescription } from '../sample_description';\nimport { MeasureValues } from '../measure_values';\nimport { Options } from '../common_options';\n\n/**\n * A reporter that writes results into a json file.\n */\nexport class JsonFileReporter extends Reporter {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get PATH() { return _PATH; }\n  static get BINDINGS() { return _BINDINGS; }\n\n  _writeFile:Function;\n  _path:string;\n  _description:SampleDescription;\n  _now:Function;\n\n  constructor(sampleDescription, path, writeFile, now) {\n    super();\n    this._description = sampleDescription;\n    this._path = path;\n    this._writeFile = writeFile;\n    this._now = now;\n  }\n\n  reportMeasureValues(measureValues:MeasureValues):Promise {\n    return PromiseWrapper.resolve(null);\n  }\n\n  reportSample(completeSample:List<MeasureValues>, validSample:List<MeasureValues>):Promise {\n    var content = Json.stringify({\n      'description': this._description,\n      'completeSample': completeSample,\n      'validSample': validSample\n    });\n    var filePath = `${this._path}/${this._description.id}_${DateWrapper.toMillis(this._now())}.json`;\n    return this._writeFile(filePath, content);\n  }\n}\n\nvar _PATH = new OpaqueToken('JsonFileReporter.path');\nvar _BINDINGS = [\n  bind(JsonFileReporter).toFactory(\n    (sampleDescription, path, writeFile, now) => new JsonFileReporter(sampleDescription, path, writeFile, now),\n    [SampleDescription, _PATH, Options.WRITE_FILE, Options.NOW]\n  ),\n  bind(_PATH).toValue('.')\n];\n"]}