{"version":3,"sources":["console_reporter.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;iBAArC,EAAC,GAAE,YAAqB;AAAE,4BAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;;;;;SAA1D,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AADrG,QAAI;AAAG,YAAQ;AAAG,UAAM;AAAG,gBAAY;SAAhD,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAArG,mBAAe;AAAG,cAAU;AAAG,OAAG;SAD3C,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;AACrG,UAAM;AAAG,iBAAa;EACtB,KAAG,EAHZ,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;AAGrG,OAAG;AAAG,cAAU;EAEhB,UAAQ,EANjB,EAAC,4BAAoB,CAAA,OAAM,AAAC,gBAAkB,CACtC,CAAA,6BAAqB,sCAA2B,CAAA,6BAAqB,GAAK,EAAC,OAAM,4BAAmB,CAAC,AAD/D,CACgE;EAMrG,SAAO,EAPhB,EAAC,2BAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,4BAAqB,qCAA2B,CAAA,4BAAqB,GAAK,EAAC,OAAM,2BAAmB,CAAC,AAD/D,CACgE;EAOrG,kBAAgB,EARzB,EAAC,wCAAoB,CAAA,OAAM,AAAC,yBAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;EAQrG,cAAY,EATrB,EAAC,oCAAoB,CAAA,OAAM,AAAC,qBAAkB,CACtC,CAAA,qCAAqB,8CAA2B,CAAA,qCAAqB,GAAK,EAAC,OAAM,oCAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,kBAcG,SAAM,gBAAc,CA+Bb,WAAU,CAAG,CAAA,iBAAgB,CAAG,CAAA,KAAI,CAAG;AACjD,AA9CJ,gBAAc,iBAAiB,AAAC,kBAAkB,KAAK,MAAmB,CA8C/D;AACP,KAAG,aAAa,EAAI,YAAU,CAAC;AAC/B,KAAG,aAAa,EAAI,CAAA,6BAA2B,AAAC,CAAC,iBAAgB,QAAQ,CAAC,CAAC;AAC3E,KAAG,OAAO,EAAI,MAAI,CAAC;AACnB,KAAG,kBAAkB,AAAC,CAAC,iBAAgB,CAAC,CAAC;AAC3C,AAnDsC,CAAA;AAAxC,AAAI,EAAA,mCAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAqD3B,kBAAgB,CAAhB,UAAkB,iBAAgB;;AAChC,OAAG,OAAO,AAAC,EAAC,YAAY,EAAC,CAAA,iBAAgB,GAAG,EAAG,CAAC;AAChD,OAAG,OAAO,AAAC,CAAC,cAAa,CAAC,CAAC;AAC3B,AAAI,MAAA,CAAA,KAAI,EAAI,CAAA,6BAA2B,AAAC,CAAC,iBAAgB,YAAY,CAAC,CAAC;AACvE,QAAI,QAAQ,AAAC,EAAE,SAAC,IAAG,CAAM;AACvB,gBAAU,AAAC,EAAC,IAAI,EAAC,KAAG,EAAC,KAAI,EAAC,CAAA,iBAAgB,YAAY,CAAE,IAAG,CAAC,EAAG,CAAC;IAClE,EAAC,CAAC;AACF,OAAG,OAAO,AAAC,CAAC,UAAS,CAAC,CAAC;AACvB,OAAG,aAAa,QAAQ,AAAC,EAAE,SAAC,UAAS,CAAM;AACzC,gBAAU,AAAC,EAAC,IAAI,EAAC,WAAS,EAAC,KAAI,EAAC,CAAA,iBAAgB,QAAQ,CAAE,UAAS,CAAC,EAAG,CAAC;IAC1E,EAAC,CAAC;AACF,OAAG,OAAO,AAAC,CAAC,EAAC,CAAC,CAAC;AACf,OAAG,gBAAgB,AAAC,CAAC,IAAG,aAAa,CAAC,CAAC;AACvC,OAAG,gBAAgB,AAAC,CAAC,IAAG,aAAa,IAAI,AAAC,EAAE,SAAC,CAAA;WAAM,GAAC;IAAA,EAAE,CAAG,IAAE,CAAC,CAAC;EAC/D;AAEA,oBAAkB,CAAlB,UAAoB,aAAY,AAAc;AAC5C,AAAI,MAAA,CAAA,eAAc,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,IAAG,aAAa,GAAG,SAAC,UAAS,CAAM;AACvE,AAAI,QAAA,CAAA,KAAI,EAAI,CAAA,aAAY,OAAO,CAAE,UAAS,CAAC,CAAC;AAC5C,WAAO,CAAA,2BAAyB,AAAC,CAAC,KAAI,CAAC,CAAC;IAC1C,EAAC,CAAC;AACF,OAAG,gBAAgB,AAAC,CAAC,eAAc,CAAC,CAAC;AACrC,SAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;EACrC;AAEA,aAAW,CAAX,UAAa,cAAa,AAAoB,CAAG,CAAA,WAAU,AAAoB;AAC7E,OAAG,gBAAgB,AAAC,CAAC,IAAG,aAAa,IAAI,AAAC,EAAE,SAAC,CAAA;WAAM,GAAC;IAAA,EAAE,CAAG,IAAE,CAAC,CAAC;AAC7D,OAAG,gBAAgB,AAAC,CAClB,WAAU,IAAI,AAAC,CAAC,IAAG,aAAa,GAAG,SAAC,UAAS;AAC3C,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,WAAU,IAAI,AAAC,CAAC,WAAU,GAAG,SAAC,aAAY;aAAM,CAAA,aAAY,OAAO,CAAE,UAAS,CAAC;MAAA,EAAC,CAAC;AAC9F,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,SAAQ,cAAc,AAAC,CAAC,MAAK,CAAC,CAAC;AAC1C,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,SAAQ,gCAAgC,AAAC,CAAC,MAAK,CAAG,KAAG,CAAC,CAAC;AAChE,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,aAAY,MAAM,AAAC,CAAC,EAAC,CAAC,CAAA,CAAI,MAAI,EAAI,CAAA,IAAG,MAAM,AAAC,CAAC,EAAC,CAAC,CAAC;AAGlE,aAAU,2BAAyB,AAAC,CAAC,IAAG,CAAC,CAAA,CAAC,KAAI,EAAC,YAAU,EAAC,IAAE,EAAC;IAC/D,EAAC,CACH,CAAC;AACD,SAAO,CAAA,cAAa,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;EACrC;AAEA,gBAAc,CAAd,UAAgB,KAAI,AAAY;MAAT,KAAG,6CAAI,IAAE;;AAC9B,OAAG,OAAO,AAAC,CACT,WAAU,IAAI,AAAC,CAAC,KAAI,GAAG,SAAC,IAAG,CAAM;AAC/B,AAAI,QAAA,CAAA,CAAA,EAAI,kBAAgB,CAAC;AACzB,WAAO,CAAA,sBAAoB,AAAC,CAAC,IAAG,CAAG,EAAA,CAAG,KAAG,CAAC,CAAC;IAC7C,EAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CACf,CAAC;EACH;;AArFA,IAAW,MAAI,EAAI;AAAE,SAAO,OAAK,CAAC;EAAE;AAEpC,IAAW,aAAW,EAAI;AAAE,SAAO,cAAY,CAAC;EAAE;AAElD,IAAW,SAAO,EAAI;AAAE,SAAO,UAAQ,CAAC;EAAE;AAEnC,MAAI,CAAX,UAAa,KAAI,CAAG,CAAA,WAAU,AAAY,CAAG;MAAZ,KAAG,6CAAI,IAAE;AACxC,AAAI,MAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,WAAU,EAAI,CAAA,KAAI,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/C,WAAK,GAAK,KAAG,CAAC;IAChB;AAAA,AACA,SAAO,CAAA,MAAK,EAAI,MAAI,CAAC;EACvB;AAEO,WAAS,CAAhB,UAAkB,CAAA,CAAG;AACnB,SAAO,CAAA,aAAY,QAAQ,AAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC;EACpC;AAEO,aAAW,CAAlB,UAAoB,GAAE;AACpB,AAAI,MAAA,CAAA,KAAI,EAAI,GAAC,CAAC;AACd,mBAAe,QAAQ,AAAC,CAAC,GAAE,GAAG,SAAC,KAAI,CAAG,CAAA,IAAG;WAAM,CAAA,WAAU,KAAK,AAAC,CAAC,KAAI,CAAG,KAAG,CAAC;IAAA,EAAC,CAAC;AAC7E,QAAI,KAAK,AAAC,EAAC,CAAC;AACZ,SAAO,MAAI,CAAC;EACd;CAzBmC,SAAO,CAbY;AADxD,KAAK,eAAe,AAAC,6DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoEU,aAAY,GApEC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,YAAc,AA8EE,CAAA,IAAG,CAAE,cAAY,CAAC,AA9ED,IAA/C,eAAc,YAAc,AA8EmC,CAAA,IAAG,CAAE,cAAY,CAAC,AA9ElC,GACE;EAAC,CAAC,CAAC,CAAC;AAwGrD,AAAI,EAAA,CAAA,MAAK,EAAI,IAAI,YAAU,AAAC,CAAC,uBAAsB,CAAC,CAAC;AACrD,AAAI,EAAA,CAAA,aAAY,EAAI,IAAI,YAAU,AAAC,CAAC,6BAA4B,CAAC,CAAC;AAClE,AAAI,EAAA,CAAA,SAAQ,EAAI,EACd,IAAG,AAAC,CAAC,eAAc,CAAC,UAAU,AAAC,EAC7B,SAAC,WAAU,CAAG,CAAA,iBAAgB,CAAG,CAAA,KAAI;OAAM,IAAI,gBAAc,AAAC,CAAC,WAAU,CAAG,kBAAgB,CAAG,MAAI,CAAC;AAAA,EACpG,EAAC,aAAY,CAAG,kBAAgB,CAAG,OAAK,CAAC,CAC3C,CACA,CAAA,IAAG,AAAC,CAAC,aAAY,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAC9B,CAAA,IAAG,AAAC,CAAC,MAAK,CAAC,QAAQ,AAAC,CAAC,KAAI,CAAC,CAC5B,CAAC;AACD","file":"benchpress/src/reporter/console_reporter.js","sourcesContent":["import { print, isPresent, isBlank, NumberWrapper } from 'angular2/src/facade/lang';\nimport { StringMapWrapper, ListWrapper, List } from 'angular2/src/facade/collection';\nimport { Promise, PromiseWrapper } from 'angular2/src/facade/async';\nimport { Math } from 'angular2/src/facade/math';\nimport { bind, OpaqueToken } from 'angular2/di';\n\nimport { Statistic } from '../statistic';\nimport { Reporter } from '../reporter';\nimport { SampleDescription } from '../sample_description';\nimport { MeasureValues } from '../measure_values';\n\n/**\n * A reporter for the console\n */\nexport class ConsoleReporter extends Reporter {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get PRINT() { return _PRINT; }\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get COLUMN_WIDTH() { return _COLUMN_WIDTH; }\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n\n  static _lpad(value, columnWidth, fill = ' ') {\n    var result = '';\n    for (var i=0; i<columnWidth - value.length; i++) {\n      result += fill;\n    }\n    return result + value;\n  }\n\n  static _formatNum(n) {\n    return NumberWrapper.toFixed(n, 2);\n  }\n\n  static _sortedProps(obj) {\n    var props = [];\n    StringMapWrapper.forEach(obj, (value, prop) => ListWrapper.push(props, prop));\n    props.sort();\n    return props;\n  }\n\n  _columnWidth:number;\n  _metricNames:List;\n  _print:Function;\n\n  constructor(columnWidth, sampleDescription, print) {\n    super();\n    this._columnWidth = columnWidth;\n    this._metricNames = ConsoleReporter._sortedProps(sampleDescription.metrics);\n    this._print = print;\n    this._printDescription(sampleDescription);\n  }\n\n  _printDescription(sampleDescription) {\n    this._print(`BENCHMARK ${sampleDescription.id}`);\n    this._print('Description:');\n    var props = ConsoleReporter._sortedProps(sampleDescription.description);\n    props.forEach( (prop) => {\n      this._print(`- ${prop}: ${sampleDescription.description[prop]}`);\n    });\n    this._print('Metrics:');\n    this._metricNames.forEach( (metricName) => {\n      this._print(`- ${metricName}: ${sampleDescription.metrics[metricName]}`);\n    });\n    this._print('');\n    this._printStringRow(this._metricNames);\n    this._printStringRow(this._metricNames.map( (_) => '' ), '-');\n  }\n\n  reportMeasureValues(measureValues:MeasureValues):Promise {\n    var formattedValues = ListWrapper.map(this._metricNames, (metricName) => {\n      var value = measureValues.values[metricName];\n      return ConsoleReporter._formatNum(value);\n    });\n    this._printStringRow(formattedValues);\n    return PromiseWrapper.resolve(null);\n  }\n\n  reportSample(completeSample:List<MeasureValues>, validSample:List<MeasureValues>):Promise {\n    this._printStringRow(this._metricNames.map( (_) => '' ), '=');\n    this._printStringRow(\n      ListWrapper.map(this._metricNames, (metricName) => {\n        var sample = ListWrapper.map(validSample, (measureValues) => measureValues.values[metricName]);\n        var mean = Statistic.calculateMean(sample);\n        var cv = Statistic.calculateCoefficientOfVariation(sample, mean);\n        var formattedCv = NumberWrapper.isNaN(cv) ? 'NaN' : Math.floor(cv);\n        // Note: Don't use the unicode character for +- as it might cause\n        // hickups consoles...\n        return `${ConsoleReporter._formatNum(mean)}+-${formattedCv}%`;\n      })\n    );\n    return PromiseWrapper.resolve(null);\n  }\n\n  _printStringRow(parts, fill = ' ') {\n    this._print(\n      ListWrapper.map(parts, (part) => {\n        var w = this._columnWidth;\n        return ConsoleReporter._lpad(part, w, fill);\n      }).join(' | ')\n    );\n  }\n\n}\n\nvar _PRINT = new OpaqueToken('ConsoleReporter.print');\nvar _COLUMN_WIDTH = new OpaqueToken('ConsoleReporter.columnWidht');\nvar _BINDINGS = [\n  bind(ConsoleReporter).toFactory(\n    (columnWidth, sampleDescription, print) => new ConsoleReporter(columnWidth, sampleDescription, print),\n    [_COLUMN_WIDTH, SampleDescription, _PRINT]\n  ),\n  bind(_COLUMN_WIDTH).toValue(18),\n  bind(_PRINT).toValue(print)\n];\n"]}