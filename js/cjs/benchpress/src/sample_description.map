{"version":3,"sources":["sample_description.js"],"names":[],"mappings":"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","file":"benchpress/src/sample_description.js","sourcesContent":["import { StringMapWrapper, ListWrapper, StringMap } from 'angular2/src/facade/collection';\nimport { bind, OpaqueToken } from 'angular2/di';\nimport { Validator } from './validator';\nimport { Metric } from './metric';\nimport { Options } from './common_options';\n\n/**\n * SampleDescription merges all available descriptions about a sample\n */\nexport class SampleDescription {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n\n  id:string;\n  description:StringMap;\n  metrics:StringMap;\n\n  constructor(id, descriptions:List<StringMap>, metrics:StringMap) {\n    this.id = id;\n    this.metrics = metrics;\n    this.description = {};\n    ListWrapper.forEach(descriptions, (description) => {\n      StringMapWrapper.forEach(description, (value, prop) => this.description[prop] = value );\n    });\n  }\n\n  toJson() {\n    return {\n      'id': this.id,\n      'description': this.description,\n      'metrics': this.metrics\n    };\n  }\n}\n\nvar _BINDINGS = [\n  bind(SampleDescription).toFactory(\n    (metric, id, forceGc, userAgent, validator, defaultDesc, userDesc) => new SampleDescription(id,\n      [\n        {'forceGc': forceGc, 'userAgent': userAgent},\n        validator.describe(),\n        defaultDesc,\n        userDesc\n      ],\n      metric.describe()),\n    [\n      Metric, Options.SAMPLE_ID, Options.FORCE_GC, Options.USER_AGENT,\n      Validator, Options.DEFAULT_DESCRIPTION, Options.SAMPLE_DESCRIPTION\n    ]\n  )\n];\n"]}