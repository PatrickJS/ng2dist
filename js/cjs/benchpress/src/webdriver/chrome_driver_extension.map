{"version":3,"sources":["chrome_driver_extension.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;uBAArC,EAAC,GAAE,YAAqB;AAAE,kCAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;;;EAAjD,KAAG,EAAZ,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AAArG,cAAU;AAAG,mBAAe;AAAG,YAAQ;SADhD,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAE5G,OAAG;AAAG,YAAQ;AAAG,UAAM;AAAG,gBAAY;AAAG,gBAAY;AAAG,gBAAY;AAAG,gBAAY;SAHrF,EAAC,6CAAoB,CAAA,OAAM,AAAC,2BAAkB,CACtC,CAAA,8CAAqB,uDAA2B,CAAA,8CAAqB,GAAK,EAAC,OAAM,6CAAmB,CAAC,AAD/D,CACgE;AAKrG,qBAAiB;AAAG,kBAAc;EAClC,iBAAe,EAPxB,EAAC,2CAAoB,CAAA,OAAM,AAAC,yBAAkB,CACtC,CAAA,4CAAqB,qDAA2B,CAAA,4CAAqB,GAAK,EAAC,OAAM,2CAAmB,CAAC,AAD/D,CACgE;EAOrG,QAAM,EARf,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,wBAWG,SAAM,sBAAoB,CAMnB,MAAK,AAAiB,CAAG;AACnC,AAlBJ,gBAAc,iBAAiB,AAAC,wBAAkB,KAAK,MAAmB,CAkB/D;AACP,KAAG,QAAQ,EAAI,OAAK,CAAC;AACvB,AApBsC,CAAA;AAAxC,AAAI,EAAA,+CAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAsB3B,GAAC,CAAD,UAAG,AAAD,CAAG;AACH,SAAO,CAAA,IAAG,QAAQ,cAAc,AAAC,CAAC,aAAY,CAAC,CAAC;EAClD;AAEA,UAAQ,CAAR,UAAU,IAAG,AAAO,CAAW;AAC7B,SAAO,CAAA,IAAG,QAAQ,cAAc,AAAC,EAAC,gBAAgB,EAAC,KAAG,EAAC,MAAI,EAAC,CAAC;EAC/D;AAEA,QAAM,CAAN,UAAQ,IAAG,AAAkC,CAAW;MAAnC,YAAU,6CAAW,KAAG;AAC3C,AAAI,MAAA,CAAA,MAAK,IAAI,mBAAmB,EAAC,KAAG,EAAC,MAAI,CAAA,CAAC;AAC1C,OAAI,SAAQ,AAAC,CAAC,WAAU,CAAC,CAAG;AAC1B,WAAK,KAAK,gBAAgB,EAAC,YAAU,EAAC,MAAI,CAAA,CAAA;IAC5C;AAAA,AACA,SAAO,CAAA,IAAG,QAAQ,cAAc,AAAC,CAAC,MAAK,CAAC,CAAC;EAC3C;AAGA,YAAU,CAAV,UAAY,AAAD;;AAGT,SAAO,CAAA,IAAG,QAAQ,cAAc,AAAC,CAAC,KAAI,CAAC,KACjC,AAAC,EAAE,SAAC,CAAA;WAAM,CAAA,YAAW,KAAK,AAAC,CAAC,aAAY,CAAC;IAAA,EAAE,KAC3C,AAAC,EAAE,SAAC,OAAM,CAAM;AAClB,AAAI,QAAA,CAAA,MAAK,EAAI,GAAC,CAAC;AACf,gBAAU,QAAQ,AAAC,CAAC,OAAM,CAAG,UAAS,KAAI,CAAG;AAC3C,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,IAAG,MAAM,AAAC,CAAC,KAAI,CAAE,SAAQ,CAAC,CAAC,CAAE,SAAQ,CAAC,CAAC;AACrD,WAAI,aAAY,OAAO,AAAC,CAAC,OAAM,CAAE,QAAO,CAAC,CAAG,wBAAsB,CAAC,CAAG;AACpE,oBAAU,KAAK,AAAC,CAAC,MAAK,CAAG,CAAA,OAAM,CAAE,QAAO,CAAC,CAAC,CAAC;QAC7C;AAAA,AACA,WAAI,aAAY,OAAO,AAAC,CAAC,OAAM,CAAE,QAAO,CAAC,CAAG,sBAAoB,CAAC,CAAG;AAClE,cAAM,IAAI,cAAY,AAAC,CAAC,mDAAkD,CAAC,CAAC;QAC9E;AAAA,MACF,CAAC,CAAC;AACF,WAAO,CAAA,gCAA+B,AAAC,CAAC,MAAK,CAAC,CAAC;IACjD,EAAC,CAAC;EACN;AAEA,4BAA0B,CAA1B,UAA4B,YAAW,AAAyB;MAAtB,iBAAe,6CAAI,KAAG;AAC9D,OAAI,OAAM,AAAC,CAAC,gBAAe,CAAC,CAAG;AAC7B,qBAAe,EAAI,GAAC,CAAC;IACvB;AAAA,AACI,MAAA,CAAA,WAAU,EAAI,GAAC,CAAC;AACpB,eAAW,QAAQ,AAAC,EAAE,SAAC,KAAI,CAAM;AAC/B,AAAI,QAAA,CAAA,GAAE,EAAI,CAAA,KAAI,CAAE,KAAI,CAAC,CAAC;AACtB,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,KAAI,CAAE,MAAK,CAAC,CAAC;AACxB,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,KAAI,CAAE,MAAK,CAAC,CAAC;AACxB,AAAI,QAAA,CAAA,GAAE,EAAI,CAAA,KAAI,CAAE,KAAI,CAAC,CAAC;AACtB,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,KAAI,CAAE,IAAG,CAAC,CAAC;AACpB,SAAI,aAAY,OAAO,AAAC,CAAC,GAAE,CAAG,wCAAsC,CAAC,CAAG;AACtE,WAAI,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,eAAa,CAAC,CAAA,EAC3C,EAAC,OAAM,AAAC,CAAC,IAAG,CAAC,CAAA,EAAK,CAAA,OAAM,AAAC,CAAC,IAAG,CAAE,MAAK,CAAC,CAAC,CAAA,EAAK,EAAC,aAAY,OAAO,AAAC,CAAC,IAAG,CAAE,MAAK,CAAC,CAAE,YAAW,CAAC,CAAG,iBAAe,CAAC,CAAC,CAAG;AACjH,oBAAU,KAAK,AAAC,CAAC,gBAAe,CAAG,CAAA,cAAa,AAAC,CAAC,KAAI,CAAG,EACvD,MAAK,CAAG,SAAO,CACjB,CAAC,CAAC,CAAC;QACL,KAAO,KAAI,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,oBAAkB,CAAC,CAAA,EACvD,CAAA,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,SAAO,CAAC,CAAA,EACnC,CAAA,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,kBAAgB,CAAC,CAAA,EAC5C,CAAA,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,QAAM,CAAC,CAAA,EAClC,CAAA,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAA,EACtC,CAAA,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,kBAAgB,CAAC,CAAG;AAC/C,oBAAU,KAAK,AAAC,CAAC,gBAAe,CAAG,CAAA,cAAa,AAAC,CAAC,KAAI,CAAG,EACvD,MAAK,CAAG,SAAO,CACjB,CAAC,CAAC,CAAC;QACL,KAAO,KAAI,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAG;AAChD,AAAI,YAAA,CAAA,QAAO,EAAI,EACb,cAAa,CAAG,CAAA,SAAQ,AAAC,CAAC,IAAG,CAAE,mBAAkB,CAAC,CAAC,CAAA,CAAI,CAAA,IAAG,CAAE,mBAAkB,CAAC,EAAI,CAAA,IAAG,CAAE,oBAAmB,CAAC,CAC9G,CAAC;AACD,aAAI,aAAY,OAAO,AAAC,CAAC,KAAI,CAAE,IAAG,CAAC,CAAG,IAAE,CAAC,CAAG;AAC1C,mBAAO,CAAE,SAAQ,CAAC,EAAI,CAAA,SAAQ,AAAC,CAAC,WAAU,CAAE,GAAE,CAAC,CAAC,CAAA,EAAK,CAAA,WAAU,CAAE,GAAE,CAAC,CAAC;UACvE;AAAA,AACA,oBAAU,CAAE,GAAE,CAAC,EAAI,MAAI,CAAC;AACxB,oBAAU,KAAK,AAAC,CAAC,gBAAe,CAAG,CAAA,cAAa,AAAC,CAAC,KAAI,CAAG;AACvD,iBAAK,CAAG,KAAG;AACX,iBAAK,CAAG,SAAO;AAAA,UACjB,CAAC,CAAC,CAAC;QACL;AAAA,MACF,KAAO,KAAI,aAAY,OAAO,AAAC,CAAC,GAAE,CAAG,gBAAc,CAAC,CAAG;AACrD,kBAAU,KAAK,AAAC,CAAC,gBAAe,CAAG,CAAA,cAAa,AAAC,CAAC,KAAI,CAAG,EACvD,MAAK,CAAG,KAAG,CACb,CAAC,CAAC,CAAC;MACL,KAAO,KAAI,aAAY,OAAO,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAG;AAC1C,WAAI,aAAY,OAAO,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAG;AACzC,aAAI,aAAY,OAAO,AAAC,CAAC,EAAC,CAAG,IAAE,CAAC,CAAG;AACjC,sBAAU,CAAE,GAAE,CAAC,EAAI,KAAG,CAAC;UACzB;AAAA,QACF;AAAA,MACF;AAAA,IACF,EAAC,CAAC;AACF,SAAO,iBAAe,CAAC;EACzB;AAEA,gBAAc,CAAd,UAAgB,AAAD,CAAmB;AAChC,SAAO,IAAI,gBAAc,AAAC,CAAC;AACzB,WAAK,CAAG,KAAG;AACX,OAAC,CAAG,KAAG;AAAA,IACT,CAAC,CAAC;EACJ;AAEA,SAAO,CAAP,UAAS,YAAW,AAAU,CAAW;AACvC,SAAO,CAAA,aAAY,OAAO,AAAC,CAAC,YAAW,CAAE,aAAY,CAAC,YAAY,AAAC,EAAC,CAAG,SAAO,CAAC,CAAC;EAClF;AAAA,GA7GA,GAAW,SAAO,EAAI;AAAE,SAAO,UAAQ,CAAC;EAAE,EAFD,mBAAiB,CAVJ;AADxD,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgBL,gBAAe,GAhBa;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,uDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,WAArB,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAuHF,SAAQ,GAvHiB;EAAC,CAAC,CAAC,CAAC;AA4HrD,OAAS,eAAa,CAAE,WAAU,CAAG,CAAA,IAAG;AACtC,AAAI,IAAA,CAAA,EAAC,EAAI,CAAA,WAAU,CAAE,IAAG,CAAC,CAAC;AAC1B,KAAI,aAAY,OAAO,AAAC,CAAC,EAAC,CAAG,IAAE,CAAC,CAAG;AACjC,KAAC,EAAI,IAAE,CAAC;EACV,KAAO,KAAI,aAAY,OAAO,AAAC,CAAC,EAAC,CAAG,IAAE,CAAC,CAAG;AACxC,KAAC,EAAI,IAAE,CAAC;EACV;AAAA,AACI,IAAA,CAAA,MAAK,EAAI;AACX,QAAI,CAAG,CAAA,WAAU,CAAE,KAAI,CAAC;AACxB,OAAG,CAAG,GAAC;AACP,QAAI,CAAG,WAAS;AAChB,OAAG,CAAG,CAAA,WAAU,CAAE,IAAG,CAAC,EAAI,KAAG;AAAA,EAC/B,CAAC;AACD,KAAI,WAAU,CAAE,IAAG,CAAC,IAAM,IAAE,CAAG;AAC7B,AAAI,MAAA,CAAA,GAAE,EAAI,CAAA,WAAU,CAAE,KAAI,CAAC,CAAC;AAC5B,OAAI,OAAM,AAAC,CAAC,GAAE,CAAC,CAAG;AAChB,QAAE,EAAI,CAAA,WAAU,CAAE,MAAK,CAAC,CAAC;IAC3B;AAAA,AACA,SAAK,CAAE,KAAI,CAAC,EAAI,CAAA,OAAM,AAAC,CAAC,GAAE,CAAC,CAAA,CAAI,IAAE,EAAI,CAAA,GAAE,EAAI,KAAG,CAAC;EACjD;AAAA,AACA,iBAAe,QAAQ,AAAC,CAAC,IAAG,GAAG,SAAC,KAAI,CAAG,CAAA,IAAG,CAAM;AAC9C,SAAK,CAAE,IAAG,CAAC,EAAI,MAAI,CAAC;EACtB,EAAC,CAAC;AACF,OAAO,OAAK,CAAC;AACf;AAEA,AAAI,EAAA,CAAA,SAAQ,EAAI,EACd,IAAG,AAAC,CAAC,qBAAoB,CAAC,UAAU,AAAC,EACnC,SAAC,MAAK;OAAM,IAAI,sBAAoB,AAAC,CAAC,MAAK,CAAC;AAAA,EAC5C,EAAC,gBAAe,CAAC,CACnB,CACF,CAAC;AAAA","file":"benchpress/src/webdriver/chrome_driver_extension.js","sourcesContent":["import { bind } from 'angular2/di';\nimport { ListWrapper, StringMapWrapper, StringMap } from 'angular2/src/facade/collection';\nimport {\n  Json, isPresent, isBlank, RegExpWrapper, StringWrapper, BaseException, NumberWrapper\n} from 'angular2/src/facade/lang';\n\nimport { WebDriverExtension, PerfLogFeatures } from '../web_driver_extension';\nimport { WebDriverAdapter } from '../web_driver_adapter';\nimport { Promise } from 'angular2/src/facade/async';\n\n\nexport class ChromeDriverExtension extends WebDriverExtension {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get BINDINGS() { return _BINDINGS; }\n\n  _driver:WebDriverAdapter;\n\n  constructor(driver:WebDriverAdapter) {\n    super();\n    this._driver = driver;\n  }\n\n  gc() {\n    return this._driver.executeScript('window.gc()');\n  }\n\n  timeBegin(name:string):Promise {\n    return this._driver.executeScript(`console.time('${name}');`);\n  }\n\n  timeEnd(name:string, restartName:string = null):Promise {\n    var script = `console.timeEnd('${name}');`;\n    if (isPresent(restartName)) {\n      script += `console.time('${restartName}');`\n    }\n    return this._driver.executeScript(script);\n  }\n\n  // See [Chrome Trace Event Format](https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/edit)\n  readPerfLog() {\n    // TODO(tbosch): Bug in ChromeDriver: Need to execute at least one command\n    // so that the browser logs can be read out!\n    return this._driver.executeScript('1+1')\n      .then( (_) => this._driver.logs('performance') )\n      .then( (entries) => {\n        var events = [];\n        ListWrapper.forEach(entries, function(entry) {\n          var message = Json.parse(entry['message'])['message'];\n          if (StringWrapper.equals(message['method'], 'Tracing.dataCollected')) {\n            ListWrapper.push(events, message['params']);\n          }\n          if (StringWrapper.equals(message['method'], 'Tracing.bufferUsage')) {\n            throw new BaseException('The DevTools trace buffer filled during the test!');\n          }\n        });\n        return this._convertPerfRecordsToEvents(events);\n      });\n  }\n\n  _convertPerfRecordsToEvents(chromeEvents, normalizedEvents = null) {\n    if (isBlank(normalizedEvents)) {\n      normalizedEvents = [];\n    }\n    var majorGCPids = {};\n    chromeEvents.forEach( (event) => {\n      var cat = event['cat'];\n      var name = event['name'];\n      var args = event['args'];\n      var pid = event['pid'];\n      var ph = event['ph'];\n      if (StringWrapper.equals(cat, 'disabled-by-default-devtools.timeline')) {\n        if (StringWrapper.equals(name, 'FunctionCall') &&\n          (isBlank(args) || isBlank(args['data']) || !StringWrapper.equals(args['data']['scriptName'], 'InjectedScript'))) {\n          ListWrapper.push(normalizedEvents, normalizeEvent(event, {\n            'name': 'script'\n          }));\n        } else if (StringWrapper.equals(name, 'RecalculateStyles') ||\n          StringWrapper.equals(name, 'Layout') ||\n          StringWrapper.equals(name, 'UpdateLayerTree') ||\n          StringWrapper.equals(name, 'Paint') ||\n          StringWrapper.equals(name, 'Rasterize') ||\n          StringWrapper.equals(name, 'CompositeLayers')) {\n          ListWrapper.push(normalizedEvents, normalizeEvent(event, {\n            'name': 'render'\n          }));\n        } else if (StringWrapper.equals(name, 'GCEvent')) {\n          var normArgs = {\n            'usedHeapSize': isPresent(args['usedHeapSizeAfter']) ? args['usedHeapSizeAfter'] : args['usedHeapSizeBefore']\n          };\n          if (StringWrapper.equals(event['ph'], 'E')) {\n            normArgs['majorGc'] = isPresent(majorGCPids[pid]) && majorGCPids[pid];\n          }\n          majorGCPids[pid] = false;\n          ListWrapper.push(normalizedEvents, normalizeEvent(event, {\n            'name': 'gc',\n            'args': normArgs\n          }));\n        }\n      } else if (StringWrapper.equals(cat, 'blink.console')) {\n        ListWrapper.push(normalizedEvents, normalizeEvent(event, {\n          'name': name\n        }));\n      } else if (StringWrapper.equals(cat, 'v8')) {\n        if (StringWrapper.equals(name, 'majorGC')) {\n          if (StringWrapper.equals(ph, 'B')) {\n            majorGCPids[pid] = true;\n          }\n        }\n      }\n    });\n    return normalizedEvents;\n  }\n\n  perfLogFeatures():PerfLogFeatures {\n    return new PerfLogFeatures({\n      render: true,\n      gc: true\n    });\n  }\n\n  supports(capabilities:StringMap):boolean {\n    return StringWrapper.equals(capabilities['browserName'].toLowerCase(), 'chrome');\n  }\n}\n\nfunction normalizeEvent(chromeEvent, data) {\n  var ph = chromeEvent['ph'];\n  if (StringWrapper.equals(ph, 'S')) {\n    ph = 'b';\n  } else if (StringWrapper.equals(ph, 'F')) {\n    ph = 'e';\n  }\n  var result = {\n    'pid': chromeEvent['pid'],\n    'ph': ph,\n    'cat': 'timeline',\n    'ts': chromeEvent['ts'] / 1000\n  };\n  if (chromeEvent['ph'] === 'X') {\n    var dur = chromeEvent['dur'];\n    if (isBlank(dur)) {\n      dur = chromeEvent['tdur'];\n    }\n    result['dur'] = isBlank(dur) ? 0.0 : dur / 1000;\n  }\n  StringMapWrapper.forEach(data, (value, prop) => {\n    result[prop] = value;\n  });\n  return result;\n}\n\nvar _BINDINGS = [\n  bind(ChromeDriverExtension).toFactory(\n    (driver) => new ChromeDriverExtension(driver),\n    [WebDriverAdapter]\n  )\n];"]}