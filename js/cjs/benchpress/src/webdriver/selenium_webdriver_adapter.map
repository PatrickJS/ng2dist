{"version":3,"sources":["selenium_webdriver_adapter.es6"],"names":[],"mappings":"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","file":"benchpress/src/webdriver/selenium_webdriver_adapter.js","sourcesContent":["import { Promise, PromiseWrapper } from 'angular2/src/facade/async';\nimport { bind } from 'angular2/di';\nimport { WebDriverAdapter } from '../web_driver_adapter';\n\nimport webdriver from 'selenium-webdriver';\n\n/**\n * Adapter for the selenium-webdriver.\n */\nexport class SeleniumWebDriverAdapter extends WebDriverAdapter {\n  // TODO(tbosch): use static values when our transpiler supports them\n  static get PROTRACTOR_BINDINGS() { return _PROTRACTOR_BINDINGS; }\n\n  _driver:any;\n\n  constructor(driver) {\n    super();\n    this._driver = driver;\n  }\n\n  _convertPromise(thenable) {\n    var completer = PromiseWrapper.completer();\n    thenable.then(\n      // selenium-webdriver uses an own Node.js context,\n      // so we need to convert data into objects of this context.\n      // (e.g. otherwise instanceof checks of rtts_assert would fail)\n      (data) => completer.resolve(convertToLocalProcess(data)),\n      completer.reject\n    );\n    return completer.promise;\n  }\n\n  waitFor(callback):Promise {\n    return this._convertPromise(this._driver.controlFlow().execute(callback));\n  }\n\n  executeScript(script:string):Promise {\n    return this._convertPromise(this._driver.executeScript(script));\n  }\n\n  capabilities():Promise {\n    return this._convertPromise(\n      this._driver.getCapabilities().then( (capsObject) => capsObject.toJSON() )\n    );\n  }\n\n  logs(type:string):Promise {\n    // Needed as selenium-webdriver does not forward\n    // performance logs in the correct way via manage().logs\n    return this._convertPromise(this._driver.schedule(\n      new webdriver.Command(webdriver.CommandName.GET_LOG).\n          setParameter('type', type),\n      'WebDriver.manage().logs().get(' + type + ')'));\n  }\n\n}\n\nfunction convertToLocalProcess(data) {\n  var serialized = JSON.stringify(data);\n  if (''+serialized === 'undefined') {\n    return undefined;\n  }\n  return JSON.parse(serialized);\n}\n\nvar _PROTRACTOR_BINDINGS = [\n  bind(WebDriverAdapter).toFactory( () => new SeleniumWebDriverAdapter(global.browser), [])\n];"]}