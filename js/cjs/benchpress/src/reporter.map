{"version":3,"sources":["reporter.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;UAArC,EAAC,GAAE,YAAqB;AAAE,qBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;;EAAjD,KAAG,EAAZ,EAAC,qBAAoB,CAAA,OAAM,AAAC,eAAkB,CACtC,CAAA,sBAAqB,+BAA2B,CAAA,sBAAqB,GAAK,EAAC,OAAM,qBAAmB,CAAC,AAD/D,CACgE;SAD9G,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;AAC5G,UAAM;AAAG,iBAAa;SAFxB,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AAI5G,WAAO;AAAG,gBAAY;EAGf,cAAY,EARrB,EAAC,wBAAoB,CAAA,OAAM,AAAC,oBAAkB,CACtC,CAAA,yBAAqB,kCAA2B,CAAA,yBAAqB,GAAK,EAAC,OAAM,wBAAmB,CAAC,AAD/D,CACgE;AAD9G,AAAI,EAAA,WAcG,SAAM,SAAO;;AAgBpB,AA9BwC,CAAA;AAAxC,AAAI,EAAA,qBAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAuB3B,oBAAkB,CAAlB,UAAoB,MAAK,AAAc,CAAW;AAChD,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAEA,aAAW,CAAX,UAAa,cAAa,AAAoB,CAAG,CAAA,WAAU,AAAoB,CAAW;AACxF,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,GAdO,MAAK,CAAZ,UAAc,aAAY;AACxB,SAAO,EACL,IAAG,AAAC,WAAS,UAAU,AAAC,EACtB,SAAC,QAAO;WAAM,SAAO;IAAA,EAAG,EAAC,aAAY,CAAC,CACxC,CACF,CAAC;EACH,EArBmF;AAArF,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAYzB,SAAO,AAAC,EAAC,EAZuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsBG,aAAY,GAtBQ;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,+CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,YAAc,AA2BE,CAAA,IAAG,CAAE,cAAY,CAAC,AA3BD,IAA/C,eAAc,YAAc,AA2BmC,CAAA,IAAG,CAAE,cAAY,CAAC,AA3BlC,GACE;EAAC,CAAC,CAAC,CAAC;AA8BrD","file":"benchpress/src/reporter.js","sourcesContent":["import { bind } from 'angular2/di';\nimport {\n  Promise, PromiseWrapper\n} from 'angular2/src/facade/async';\nimport {\n  ABSTRACT, BaseException\n} from 'angular2/src/facade/lang';\n\nimport { MeasureValues } from './measure_values';\n\n/**\n * A reporter reports measure values and the valid sample.\n */\n@ABSTRACT()\nexport class Reporter {\n  static bindTo(delegateToken) {\n    return [\n      bind(Reporter).toFactory(\n        (delegate) => delegate, [delegateToken]\n      )\n    ];\n  }\n\n  reportMeasureValues(values:MeasureValues):Promise {\n    throw new BaseException('NYI');\n  }\n\n  reportSample(completeSample:List<MeasureValues>, validSample:List<MeasureValues>):Promise {\n    throw new BaseException('NYI');\n  }\n}\n"]}