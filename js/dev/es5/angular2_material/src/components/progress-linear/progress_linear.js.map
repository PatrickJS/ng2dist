{"version":3,"sources":["progress_linear.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,0GAAoB,UAAS,SAAQ;;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,WAAoB,KAAG,KAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,WAAoB,KAAG,KAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;uBAFY,CAAA,SAAQ,AAAC,sBAAjC,SAAS,AAAD;AACE,AAAI,UAAA,mBAQP,SAAM,iBAAe,CACd,IAAG,CAAG,CAAA,UAAS,CAAG,CAAA,kBAAiB,CAAG,CAAA,kBAAiB,CAAG,CAAA,kBAAiB,CAAG;AACxF,eAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,WAAS,CAAG,SAAO,CAAG,mBAAiB,CAAG,SAAO,CAAG,mBAAiB,CAAG,SAAO,CAAG,mBAAiB,CAAG,SAAO,CAAC,CAAC;AAC9J,aAAG,mBAAmB,EAAI,mBAAiB,CAAC;AAC5C,aAAG,oBAAoB,EAAI,GAAC,CAAC;AAC7B,aAAG,sBAAsB,EAAI,GAAC,CAAC;AAC/B,mBAAS,AAAC,CAAC,aAAY,CAAC,CAAC;AACzB,2BAAiB,AAAC,CAAC,GAAE,CAAC,CAAC;AACvB,2BAAiB,AAAC,CAAC,KAAI,CAAC,CAAC;AACzB,aAAG,KAAK,EAAI,CAAA,SAAQ,AAAC,CAAC,IAAG,CAAC,CAAA,CAAI,KAAG,EAAI,CAAA,IAAG,YAAY,CAAC;QACvD,AAlBgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAkB5C,YAAI,MAAI,EAAI;AACV,iBAAO,CAAA,IAAG,OAAO,CAAC;UACpB;AACA,YAAI,MAAI,CAAE,CAAA,CAAG;AACX,eAAI,SAAQ,AAAC,CAAC,CAAA,CAAC,CAAG;AAChB,iBAAG,OAAO,EAAI,CAAA,gBAAe,MAAM,AAAC,CAAC,CAAA,CAAC,CAAC;AACvC,iBAAG,mBAAmB,AAAC,CAAC,IAAG,OAAO,CAAC,CAAC;YACtC;AAAA,UACF;AACA,iBAAO,CAAP,UAAS,CAAA,CAAG;AACV,eAAI,IAAG,KAAK,GAAK,CAAA,IAAG,CAAE,OAAM,CAAC,CAAA,EAAK,CAAA,IAAG,KAAK,GAAK,CAAA,IAAG,CAAE,eAAc,CAAC,CAAA,EAAK,CAAA,OAAM,AAAC,CAAC,IAAG,MAAM,CAAC,CAAG;AAC3F,qBAAO;YACT;AAAA,AACA,eAAG,oBAAoB,EAAI,CAAA,IAAG,kBAAkB,AAAC,CAAC,IAAG,MAAM,CAAC,CAAC;AAC7D,eAAI,IAAG,KAAK,GAAK,CAAA,IAAG,CAAE,QAAO,CAAC,CAAG;AAC/B,iBAAG,sBAAsB,EAAI,CAAA,IAAG,kBAAkB,AAAC,CAAC,IAAG,YAAY,CAAC,CAAC;YACvE;AAAA,UACF;AACA,0BAAgB,CAAhB,UAAkB,KAAI,CAAG;AACvB,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,KAAI,EAAI,IAAE,CAAC;AACvB,AAAI,cAAA,CAAA,UAAS,EAAI,CAAA,CAAC,KAAI,EAAI,IAAE,CAAC,EAAI,EAAA,CAAC;AAClC,mBAAO,aAAa,EAAC,WAAS,EAAC,YAAW,EAAC,MAAI,EAAC,OAAK,EAAC;UACxD;AAAA,WACO,KAAI,CAAX,UAAa,CAAA,CAAG;AACd,iBAAO,CAAA,IAAG,IAAI,AAAC,CAAC,CAAA,CAAG,CAAA,IAAG,IAAI,AAAC,CAAC,GAAE,CAAG,EAAA,CAAC,CAAC,CAAC;UACtC,EA1C8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AA+CtE,WAAK,eAAe,AAAC,CAAC,gBAAe,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACpE,eAAO,EAAC,GAAI,UAAQ,AAAC,CAAC;AACpB,mBAAO,CAAG,qBAAmB;AAC7B,oBAAQ,CAAG,EAAC,QAAO,CAAC;AACpB,qBAAS,CAAG;AACV,oBAAM,CAAG,QAAM;AACf,0BAAY,CAAG,eAAa;AAAA,YAC9B;AAAA,UACF,CAAC,CAAG,IAAI,KAAG,AAAC,CAAC;AACX,sBAAU,CAAG,wEAAsE;AACnF,qBAAS,CAAG,GAAC;AAAA,UACf,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACnE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAG,IAAI,UAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC,CAAG,EAAC,QAAO,CAAG,IAAI,eAAa,AAAC,CAAC,WAAU,CAAC,CAAC,CAAG,EAAC,QAAO,CAAG,IAAI,eAAa,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAG,EAAC,QAAO,CAAG,IAAI,eAAa,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAG,EAAC,QAAO,CAAG,IAAI,eAAa,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAC,CAAC;QACxQ,CAAC,CAAC,CAAC;WACM;AACT,oBAAY,CAAG,cAAY;AAC3B,sBAAc,CAAG,gBAAc;AAC/B,eAAO,CAAG,SAAO;AACjB,cAAM,CAAG,QAAM;AAAA,MACjB;IAlE+B;EAC3B,CAAA;AADI,CAAC,CAAC;AAqE+B","file":"angular2_material/src/components/progress-linear/progress_linear.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Component,\n  View,\n  Attribute,\n  PropertySetter,\n  onChange} from 'angular2/angular2';\nimport {isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {Math} from 'angular2/src/facade/math';\nexport class MdProgressLinear {\n  constructor(mode, roleSetter, ariaValueMinSetter, ariaValueMaxSetter, ariaValueNowSetter) {\n    assert.argumentTypes(mode, assert.type.string, roleSetter, Function, ariaValueMinSetter, Function, ariaValueMaxSetter, Function, ariaValueNowSetter, Function);\n    this.ariaValueNowSetter = ariaValueNowSetter;\n    this.primaryBarTransform = '';\n    this.secondaryBarTransform = '';\n    roleSetter('progressbar');\n    ariaValueMinSetter('0');\n    ariaValueMaxSetter('100');\n    this.mode = isPresent(mode) ? mode : Mode.DETERMINATE;\n  }\n  get value() {\n    return this.value_;\n  }\n  set value(v) {\n    if (isPresent(v)) {\n      this.value_ = MdProgressLinear.clamp(v);\n      this.ariaValueNowSetter(this.value_);\n    }\n  }\n  onChange(_) {\n    if (this.mode == Mode['QUERY'] || this.mode == Mode['INDETERMINATE'] || isBlank(this.value)) {\n      return ;\n    }\n    this.primaryBarTransform = this.transformForValue(this.value);\n    if (this.mode == Mode['BUFFER']) {\n      this.secondaryBarTransform = this.transformForValue(this.bufferValue);\n    }\n  }\n  transformForValue(value) {\n    var scale = value / 100;\n    var translateX = (value - 100) / 2;\n    return `translateX(${translateX}%) scale(${scale}, 1)`;\n  }\n  static clamp(v) {\n    return Math.max(0, Math.min(100, v));\n  }\n}\nObject.defineProperty(MdProgressLinear, \"annotations\", {get: function() {\n    return [new Component({\n      selector: 'md-progress-linear',\n      lifecycle: [onChange],\n      properties: {\n        'value': 'value',\n        'bufferValue': 'buffer-value'\n      }\n    }), new View({\n      templateUrl: 'angular2_material/src/components/progress-linear/progress_linear.html',\n      directives: []\n    })];\n  }});\nObject.defineProperty(MdProgressLinear, \"parameters\", {get: function() {\n    return [[assert.type.string, new Attribute('md-mode')], [Function, new PropertySetter('attr.role')], [Function, new PropertySetter('attr.aria-valuemin')], [Function, new PropertySetter('attr.aria-valuemax')], [Function, new PropertySetter('attr.aria-valuenow')]];\n  }});\nvar Mode = {\n  'DETERMINATE': 'determinate',\n  'INDETERMINATE': 'indeterminate',\n  'BUFFER': 'buffer',\n  'QUERY': 'query'\n};\n//# sourceMappingURL=progress_linear.js.map\n\n//# sourceMappingURL=./progress_linear.map"]}