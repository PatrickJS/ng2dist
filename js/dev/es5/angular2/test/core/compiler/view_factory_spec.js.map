{"version":3,"sources":["view_factory_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/view_factory_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  ddescribe,\n  it,\n  iit,\n  xit,\n  xdescribe,\n  expect,\n  beforeEach,\n  el} from 'angular2/test_lib';\nimport {ViewFactory} from 'angular2/src/core/compiler/view_factory';\nimport {AppProtoView,\n  AppView} from 'angular2/src/core/compiler/view';\nimport {dynamicChangeDetection} from 'angular2/change_detection';\nexport function main() {\n  function createViewFactory({capacity}) {\n    return assert.returnType((new ViewFactory(capacity)), ViewFactory);\n  }\n  function createPv() {\n    return new AppProtoView(null, null, dynamicChangeDetection.createProtoChangeDetector('dummy', null));\n  }\n  describe('RenderViewFactory', () => {\n    it('should create views', () => {\n      var pv = createPv();\n      var vf = createViewFactory({capacity: 1});\n      expect(vf.getView(pv) instanceof AppView).toBe(true);\n    });\n    describe('caching', () => {\n      it('should support multiple AppProtoViews', () => {\n        var pv1 = createPv();\n        var pv2 = createPv();\n        var vf = createViewFactory({capacity: 2});\n        var view1 = vf.getView(pv1);\n        var view2 = vf.getView(pv2);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        expect(vf.getView(pv1)).toBe(view1);\n        expect(vf.getView(pv2)).toBe(view2);\n      });\n      it('should reuse the newest view that has been returned', () => {\n        var pv = createPv();\n        var vf = createViewFactory({capacity: 2});\n        var view1 = vf.getView(pv);\n        var view2 = vf.getView(pv);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        expect(vf.getView(pv)).toBe(view2);\n      });\n      it('should not add views when the capacity has been reached', () => {\n        var pv = createPv();\n        var vf = createViewFactory({capacity: 2});\n        var view1 = vf.getView(pv);\n        var view2 = vf.getView(pv);\n        var view3 = vf.getView(pv);\n        vf.returnView(view1);\n        vf.returnView(view2);\n        vf.returnView(view3);\n        expect(vf.getView(pv)).toBe(view2);\n        expect(vf.getView(pv)).toBe(view1);\n      });\n    });\n  });\n}\n//# sourceMappingURL=view_factory_spec.js.map\n\n//# sourceMappingURL=./view_factory_spec.map"]}