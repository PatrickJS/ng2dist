{"version":3,"sources":["directive_metadata_reader_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/core/compiler/directive_metadata_reader_spec.js","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {ddescribe,\n  describe,\n  it,\n  iit,\n  expect,\n  beforeEach} from 'angular2/test_lib';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {Decorator,\n  Component,\n  Viewport} from 'angular2/src/core/annotations/annotations';\nimport {DirectiveMetadata} from 'angular2/src/core/compiler/directive_metadata';\nimport {Injectable,\n  Injector} from 'angular2/di';\nclass SomeInjectable {}\nObject.defineProperty(SomeInjectable, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nclass SomeDecorator {}\nObject.defineProperty(SomeDecorator, \"annotations\", {get: function() {\n    return [new Decorator({selector: 'someDecorator'})];\n  }});\nclass SomeComponent {}\nObject.defineProperty(SomeComponent, \"annotations\", {get: function() {\n    return [new Component({\n      selector: 'someComponent',\n      injectables: [SomeInjectable]\n    })];\n  }});\nclass SomeViewport {}\nObject.defineProperty(SomeViewport, \"annotations\", {get: function() {\n    return [new Viewport({selector: 'someViewport'})];\n  }});\nclass SomeDirectiveWithoutAnnotation {}\nexport function main() {\n  describe(\"DirectiveMetadataReader\", () => {\n    var reader;\n    beforeEach(() => {\n      reader = new DirectiveMetadataReader();\n    });\n    it('should read out the Decorator annotation', () => {\n      var directiveMetadata = reader.read(SomeDecorator);\n      expect(directiveMetadata).toEqual(new DirectiveMetadata(SomeDecorator, new Decorator({selector: 'someDecorator'}), null));\n    });\n    it('should read out the Viewport annotation', () => {\n      var directiveMetadata = reader.read(SomeViewport);\n      expect(directiveMetadata).toEqual(new DirectiveMetadata(SomeViewport, new Viewport({selector: 'someViewport'}), null));\n    });\n    it('should read out the Component annotation', () => {\n      var m = reader.read(SomeComponent);\n      expect(m.type).toEqual(SomeComponent);\n      expect(m.annotation).toEqual(new Component({\n        selector: 'someComponent',\n        injectables: [SomeInjectable]\n      }));\n      var resolvedList = ListWrapper.reduce(m.resolvedInjectables, function(prev, elem) {\n        if (isPresent(elem)) {\n          ListWrapper.push(prev, elem);\n        }\n        return prev;\n      }, []);\n      expect(resolvedList.length).toBe(1);\n      expect(resolvedList[0].key.token).toBe(SomeInjectable);\n    });\n    it('should throw if not matching annotation is found', () => {\n      expect(() => {\n        reader.read(SomeDirectiveWithoutAnnotation);\n      }).toThrowError('No Directive annotation found on SomeDirectiveWithoutAnnotation');\n    });\n  });\n}\n//# sourceMappingURL=directive_metadata_reader_spec.js.map\n\n//# sourceMappingURL=./directive_metadata_reader_spec.map"]}