{"version":3,"sources":["reflector_spec.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,uKAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;AA0CpD,SAAS,SAAO,CAAE,CAAA,CAAG,CAAA,CAAA,CAAG;AACtB,SAAK,cAAc,AAAC,CAAC,CAAA,CAAG,MAAI,CAAG,EAAA,CAAG,MAAI,CAAC,CAAC;EAC1C;AAAA,AAgBO,SAAS,KAAG,CAAE,AAAD;AAClB,WAAO,AAAC,CAAC,WAAU,GAAG,SAAC,AAAD;AACpB,AAAI,QAAA,CAAA,SAAQ,CAAC;AACb,eAAS,AAAC,EAAC,SAAC,AAAD,CAAM;AACf,gBAAQ,EAAI,IAAI,UAAQ,AAAC,CAAC,GAAI,uBAAqB,AAAC,EAAC,CAAC,CAAC;MACzD,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,SAAQ,GAAG,SAAC,AAAD;AAClB,SAAC,AAAC,CAAC,4CAA2C,GAAG,SAAC,AAAD,CAAM;AACrD,AAAI,YAAA,CAAA,GAAE,EAAI,CAAA,SAAQ,QAAQ,AAAC,CAAC,OAAM,CAAC,AAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC;AAC1C,eAAK,AAAC,CAAC,GAAE,EAAE,CAAC,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;AACxB,eAAK,AAAC,CAAC,GAAE,EAAE,CAAC,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;QAC1B,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,0CAAyC,GAAG,SAAC,AAAD;AAC7C,eAAK,AAAC,EAAC,SAAC,AAAD;iBAAM,CAAA,SAAQ,QAAQ,AAAC,CAAC,iBAAgB,CAAC,AAAC,CAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAG,GAAC,CAAG,GAAC,CAAC;UAAA,EAAC,aAAa,AAAC,EAAC,CAAC;QACtG,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,iDAAgD,GAAG,SAAC,AAAD;AACpD,kBAAQ,aAAa,AAAC,CAAC,OAAM,CAAG,EAAC,SAAQ,GAAG,SAAC,AAAD;mBAAM,OAAK;YAAA,CAAA,CAAC,CAAC,CAAC;AAC1D,eAAK,AAAC,CAAC,SAAQ,QAAQ,AAAC,CAAC,OAAM,CAAC,AAAC,EAAC,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;QACtD,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,YAAW,GAAG,SAAC,AAAD;AACrB,SAAC,AAAC,CAAC,iDAAgD,GAAG,SAAC,AAAD,CAAM;AAC1D,AAAI,YAAA,CAAA,CAAA,EAAI,CAAA,SAAQ,WAAW,AAAC,CAAC,oBAAmB,CAAC,CAAC;AAClD,eAAK,AAAC,CAAC,CAAA,CAAC,QAAQ,AAAC,CAAC,CAAC,CAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAG,EAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,qDAAoD,GAAG,SAAC,AAAD,CAAM;AAC9D,AAAI,YAAA,CAAA,CAAA,EAAI,CAAA,SAAQ,WAAW,AAAC,CAAC,QAAO,CAAC,CAAC;AACtC,eAAK,AAAC,CAAC,CAAA,CAAC,QAAQ,AAAC,CAAC,CAAC,CAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAG,EAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACjF,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,6CAA4C,GAAG,SAAC,AAAD,CAAM;AACtD,AAAI,YAAA,CAAA,CAAA,EAAI,CAAA,SAAQ,WAAW,AAAC,CAAC,uBAAsB,CAAC,CAAC;AACrD,eAAK,AAAC,CAAC,CAAA,OAAO,CAAC,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;QAC7B,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,kDAAiD,GAAG,SAAC,AAAD,CAAM;AAC3D,kBAAQ,aAAa,AAAC,CAAC,OAAM,CAAG,EAAC,YAAW,CAAG,EAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC,CAAC;AACvD,eAAK,AAAC,CAAC,SAAQ,WAAW,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC;QACvD,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,aAAY,GAAG,SAAC,AAAD;AACtB,SAAC,AAAC,CAAC,kDAAiD,GAAG,SAAC,AAAD,CAAM;AAC3D,AAAI,YAAA,CAAA,CAAA,EAAI,CAAA,SAAQ,YAAY,AAAC,CAAC,oBAAmB,CAAC,CAAC;AACnD,eAAK,AAAC,CAAC,CAAA,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAI,WAAS,AAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC;QAC9C,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,sDAAqD,GAAG,SAAC,AAAD,CAAM;AAC/D,AAAI,YAAA,CAAA,CAAA,EAAI,CAAA,SAAQ,YAAY,AAAC,CAAC,QAAO,CAAC,CAAC;AACvC,eAAK,AAAC,CAAC,CAAA,CAAC,QAAQ,AAAC,CAAC,CAAC,GAAI,WAAS,AAAC,CAAC,MAAK,CAAC,CAAC,CAAC,CAAC;QAC7C,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,mDAAkD,GAAG,SAAC,AAAD,CAAM;AAC5D,kBAAQ,aAAa,AAAC,CAAC,OAAM,CAAG,EAAC,aAAY,CAAG,EAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC,CAAC;AACxD,eAAK,AAAC,CAAC,SAAQ,YAAY,AAAC,CAAC,OAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC;QACxD,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,QAAO,GAAG,SAAC,AAAD;AACjB,SAAC,AAAC,CAAC,uCAAsC,GAAG,SAAC,AAAD,CAAM;AAChD,AAAI,YAAA,CAAA,IAAG,EAAI,CAAA,SAAQ,OAAO,AAAC,CAAC,GAAE,CAAC,CAAC;AAChC,eAAK,AAAC,CAAC,IAAG,AAAC,CAAC,GAAI,QAAM,AAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAA,CAAC,CAAC;QAC5C,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,gDAA+C,GAAG,SAAC,AAAD;AACnD,kBAAQ,gBAAgB,AAAC,CAAC,CAAC,KAAI,GAAG,SAAC,GAAE;mBAAM,OAAK;YAAA,CAAA,CAAC,CAAC,CAAC;AACnD,eAAK,AAAC,CAAC,SAAQ,OAAO,AAAC,CAAC,KAAI,CAAC,AAAC,CAAC,UAAS,CAAC,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;QAC7D,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,QAAO,GAAG,SAAC,AAAD;AACjB,SAAC,AAAC,CAAC,uCAAsC,GAAG,SAAC,AAAD,CAAM;AAChD,AAAI,YAAA,CAAA,IAAG,EAAI,CAAA,SAAQ,OAAO,AAAC,CAAC,GAAE,CAAC,CAAC;AAChC,AAAI,YAAA,CAAA,GAAE,EAAI,IAAI,QAAM,AAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC;AAC3B,aAAG,AAAC,CAAC,GAAE,CAAG,IAAE,CAAC,CAAC;AACd,eAAK,AAAC,CAAC,GAAE,EAAE,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;QAC5B,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,gDAA+C,GAAG,SAAC,AAAD;AACnD,AAAI,YAAA,CAAA,QAAO,CAAC;AACZ,kBAAQ,gBAAgB,AAAC,CAAC,CAAC,KAAI,GAAG,SAAC,GAAE,CAAG,CAAA,KAAI,CAAM;AAC9C,qBAAO,EAAI,MAAI,CAAC;YAClB,CAAA,CAAC,CAAC,CAAC;AACL,kBAAQ,OAAO,AAAC,CAAC,KAAI,CAAC,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC,CAAC;AAC3C,eAAK,AAAC,CAAC,QAAO,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;QAClC,EAAC,CAAC;MACJ,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,QAAO,GAAG,SAAC,AAAD;AACjB,SAAC,AAAC,CAAC,sCAAqC,GAAG,SAAC,AAAD,CAAM;AAC/C,AAAI,YAAA,CAAA,IAAG,EAAI,CAAA,SAAQ,OAAO,AAAC,CAAC,UAAS,CAAC,CAAC;AACvC,AAAI,YAAA,CAAA,GAAE,EAAI,IAAI,QAAM,AAAC,CAAC,CAAA,CAAG,EAAA,CAAC,CAAC;AAC3B,eAAK,AAAC,CAAC,IAAG,AAAC,CAAC,GAAE,CAAG,EAAC,OAAM,CAAC,CAAC,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;QAC/C,EAAC,CAAC;AACF,SAAC,AAAC,CAAC,gDAA+C,GAAG,SAAC,AAAD;AACnD,kBAAQ,gBAAgB,AAAC,CAAC,CAAC,KAAI,GAAG,SAAC,GAAE,CAAG,CAAA,IAAG;mBAAM,KAAG;YAAA,CAAA,CAAC,CAAC,CAAC;AACvD,eAAK,AAAC,CAAC,SAAQ,OAAO,AAAC,CAAC,KAAI,CAAC,AAAC,CAAC,UAAS,CAAG,EAAC,MAAK,CAAC,CAAC,CAAC,QAAQ,AAAC,CAAC,CAAC,MAAK,CAAC,CAAC,CAAC;QACzE,EAAC,CAAC;MACJ,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;AArJQ,UAAQ,AAAC,cAAqC,CAAA;AADtD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,6BAAoB,KAAG,uBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,YAAoB,KAAG,MAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,mBAAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,aASd,SAAM,WAAS,CACD,KAAI,CAAG;AACjB,aAAG,MAAM,EAAI,MAAI,CAAC;QACpB,AAZgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,oBACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAepC,WAAK,eAAe,AAAC,CAAC,UAAS,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC9D,eAAO,EAAC,GAAI,MAAI,AAAC,EAAC,CAAC,CAAC;QACtB,CAAC,CAAC,CAAC;AAjBL,cAAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,QAiBd,SAAM,MAAI,CACI,KAAI,CAAG;AACjB,aAAG,MAAM,EAAI,MAAI,CAAC;QACpB,AApBgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,eACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,6BAAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,uBAsBd,SAAM,qBAAmB,CACX,CAAA,CAAG,CAAA,CAAA,CAAG;AAChB,eAAK,cAAc,AAAC,CAAC,CAAA,CAAG,MAAI,CAAG,EAAA,CAAG,MAAI,CAAC,CAAC;AACxC,aAAG,EAAE,EAAI,EAAA,CAAC;AACV,aAAG,EAAE,EAAI,EAAA,CAAC;QACZ,AA3BgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,8BACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AA8BpC,WAAK,eAAe,AAAC,CAAC,oBAAmB,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACxE,eAAO,EAAC,GAAI,WAAS,AAAC,CAAC,OAAM,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,oBAAmB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACvE,eAAO,EAAC,CAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAG,EAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;AAnCL,gCAAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,0BAmCd,SAAM,wBAAsB,CACd,CAAA,CAAG,CAAA,CAAA,CAAG,GAAC,AApC6B,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,iCACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AAApC,0BAAA,SAAS,AAAD,CAAG;AACD,AAAI,UAAA,oBAsCd,SAAM,kBAAgB,CACR,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,EAAC,CAAG,CAAA,GAAE,CAAG,CAAA,GAAE,CAAG,GAAC,AAvCX,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,2BACkB,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;AA6CpC,WAAK,eAAe,AAAC,CAAC,QAAO,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC5D,eAAO,EAAC,GAAI,WAAS,AAAC,CAAC,MAAK,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,QAAO,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC3D,eAAO,EAAC,CAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAG,EAAC,KAAI,CAAG,IAAI,WAAS,AAAC,CAAC,GAAE,CAAC,CAAC,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;AAlDL,gBAAA,SAAS,AAAD;AACE,AAAI,UAAA,UAkDd,SAAM,QAAM,CACE,CAAA,CAAG,CAAA,CAAA,CAAG;AAChB,aAAG,EAAE,EAAI,EAAA,CAAC;AACV,aAAG,EAAE,EAAI,EAAA,CAAC;QACZ,AAtDgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,WAsD5C,QAAO,CAAP,UAAS,GAAE,CAAG;AACZ,iBAAO,IAAE,CAAC;UACZ,MAvD8D,CAAC;MACzD,AAAC,EAAC,CAJ0B,CAAA;IAEL;EAC3B,CAAA;AADI,CAAC,CAAC;AAuJ8B","file":"angular2/test/reflection/reflector_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  it,\n  iit,\n  ddescribe,\n  expect,\n  beforeEach} from 'angular2/test_lib';\nimport {Reflector} from 'angular2/src/reflection/reflection';\nimport {ReflectionCapabilities} from 'angular2/src/reflection/reflection_capabilities';\nimport {CONST} from 'angular2/src/facade/lang';\nclass Annotation {\n  constructor(value) {\n    this.value = value;\n  }\n}\nObject.defineProperty(Annotation, \"annotations\", {get: function() {\n    return [new CONST()];\n  }});\nclass AType {\n  constructor(value) {\n    this.value = value;\n  }\n}\nclass ClassWithAnnotations {\n  constructor(a, b) {\n    assert.argumentTypes(a, AType, b, AType);\n    this.a = a;\n    this.b = b;\n  }\n}\nObject.defineProperty(ClassWithAnnotations, \"annotations\", {get: function() {\n    return [new Annotation('class')];\n  }});\nObject.defineProperty(ClassWithAnnotations, \"parameters\", {get: function() {\n    return [[AType, new Annotation(\"a\")], [AType, new Annotation(\"b\")]];\n  }});\nclass ClassWithoutAnnotations {\n  constructor(a, b) {}\n}\nclass TestObjWith11Args {\n  constructor(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {}\n}\nfunction testFunc(a, b) {\n  assert.argumentTypes(a, AType, b, AType);\n}\nObject.defineProperty(testFunc, \"annotations\", {get: function() {\n    return [new Annotation('func')];\n  }});\nObject.defineProperty(testFunc, \"parameters\", {get: function() {\n    return [[AType, new Annotation(\"a\")], [AType, new Annotation(\"b\")]];\n  }});\nclass TestObj {\n  constructor(a, b) {\n    this.a = a;\n    this.b = b;\n  }\n  identity(arg) {\n    return arg;\n  }\n}\nexport function main() {\n  describe('Reflector', () => {\n    var reflector;\n    beforeEach(() => {\n      reflector = new Reflector(new ReflectionCapabilities());\n    });\n    describe(\"factory\", () => {\n      it(\"should create a factory for the given type\", () => {\n        var obj = reflector.factory(TestObj)(1, 2);\n        expect(obj.a).toEqual(1);\n        expect(obj.b).toEqual(2);\n      });\n      it(\"should throw when more than 10 arguments\", () => {\n        expect(() => reflector.factory(TestObjWith11Args)(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)).toThrowError();\n      });\n      it(\"should return a registered factory if available\", () => {\n        reflector.registerType(TestObj, {\"factory\": () => \"fake\"});\n        expect(reflector.factory(TestObj)()).toEqual(\"fake\");\n      });\n    });\n    describe(\"parameters\", () => {\n      it(\"should return an array of parameters for a type\", () => {\n        var p = reflector.parameters(ClassWithAnnotations);\n        expect(p).toEqual([[AType, new Annotation('a')], [AType, new Annotation('b')]]);\n      });\n      it(\"should return an array of parameters for a function\", () => {\n        var p = reflector.parameters(testFunc);\n        expect(p).toEqual([[AType, new Annotation('a')], [AType, new Annotation('b')]]);\n      });\n      it(\"should work for a class without annotations\", () => {\n        var p = reflector.parameters(ClassWithoutAnnotations);\n        expect(p.length).toEqual(2);\n      });\n      it(\"should return registered parameters if available\", () => {\n        reflector.registerType(TestObj, {\"parameters\": [1, 2]});\n        expect(reflector.parameters(TestObj)).toEqual([1, 2]);\n      });\n    });\n    describe(\"annotations\", () => {\n      it(\"should return an array of annotations for a type\", () => {\n        var p = reflector.annotations(ClassWithAnnotations);\n        expect(p).toEqual([new Annotation('class')]);\n      });\n      it(\"should return an array of annotations for a function\", () => {\n        var p = reflector.annotations(testFunc);\n        expect(p).toEqual([new Annotation('func')]);\n      });\n      it(\"should return registered annotations if available\", () => {\n        reflector.registerType(TestObj, {\"annotations\": [1, 2]});\n        expect(reflector.annotations(TestObj)).toEqual([1, 2]);\n      });\n    });\n    describe(\"getter\", () => {\n      it(\"returns a function reading a property\", () => {\n        var getA = reflector.getter('a');\n        expect(getA(new TestObj(1, 2))).toEqual(1);\n      });\n      it(\"should return a registered getter if available\", () => {\n        reflector.registerGetters({\"abc\": (obj) => \"fake\"});\n        expect(reflector.getter(\"abc\")(\"anything\")).toEqual(\"fake\");\n      });\n    });\n    describe(\"setter\", () => {\n      it(\"returns a function setting a property\", () => {\n        var setA = reflector.setter('a');\n        var obj = new TestObj(1, 2);\n        setA(obj, 100);\n        expect(obj.a).toEqual(100);\n      });\n      it(\"should return a registered setter if available\", () => {\n        var updateMe;\n        reflector.registerSetters({\"abc\": (obj, value) => {\n            updateMe = value;\n          }});\n        reflector.setter(\"abc\")(\"anything\", \"fake\");\n        expect(updateMe).toEqual(\"fake\");\n      });\n    });\n    describe(\"method\", () => {\n      it(\"returns a function invoking a method\", () => {\n        var func = reflector.method('identity');\n        var obj = new TestObj(1, 2);\n        expect(func(obj, ['value'])).toEqual('value');\n      });\n      it(\"should return a registered method if available\", () => {\n        reflector.registerMethods({\"abc\": (obj, args) => args});\n        expect(reflector.method(\"abc\")(\"anything\", [\"fake\"])).toEqual(['fake']);\n      });\n    });\n  });\n}\n//# sourceMappingURL=reflector_spec.js.map\n\n//# sourceMappingURL=./reflector_spec.map"]}