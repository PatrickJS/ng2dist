{"version":3,"sources":["direct_dom_renderer_integration_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/render/dom/direct_dom_renderer_integration_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  elementText,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  SpyObject} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {ProtoViewDto,\n  ViewDefinition,\n  ViewContainerRef,\n  EventDispatcher,\n  DirectiveMetadata} from 'angular2/src/render/api';\nimport {IntegrationTestbed,\n  LoggingEventDispatcher,\n  FakeEvent} from './integration_testbed';\nexport function main() {\n  describe('DirectDomRenderer integration', () => {\n    var testbed,\n        renderer,\n        eventPlugin,\n        compileRoot,\n        rootEl;\n    beforeEach(() => {\n      rootEl = el('<div></div>');\n    });\n    function createRenderer({urlData,\n      viewCacheCapacity,\n      shadowDomStrategy,\n      templates} = {}) {\n      testbed = new IntegrationTestbed({\n        urlData: urlData,\n        viewCacheCapacity: viewCacheCapacity,\n        shadowDomStrategy: shadowDomStrategy,\n        templates: templates\n      });\n      renderer = testbed.renderer;\n      eventPlugin = testbed.eventPlugin;\n      compileRoot = (rootEl, componentId) => testbed.compileRoot(rootEl, componentId);\n    }\n    it('should create root views while using the given elements in place', inject([AsyncTestCompleter], (async) => {\n      createRenderer();\n      renderer.createRootProtoView(rootEl, 'someComponentId').then((rootProtoView) => {\n        expect(rootProtoView.elementBinders[0].directives[0].directiveIndex).toBe(0);\n        var viewRefs = renderer.createView(rootProtoView.render);\n        expect(viewRefs.length).toBe(1);\n        expect(viewRefs[0].delegate.rootNodes[0]).toEqual(rootEl);\n        async.done();\n      });\n    }));\n    it('should add a static component', inject([AsyncTestCompleter], (async) => {\n      createRenderer();\n      renderer.createRootProtoView(rootEl, 'someComponentId').then((rootProtoView) => {\n        var template = new ViewDefinition({\n          componentId: 'someComponent',\n          template: 'hello',\n          directives: []\n        });\n        renderer.compile(template).then((pv) => {\n          renderer.mergeChildComponentProtoViews(rootProtoView.render, [pv.render]);\n          renderer.createView(rootProtoView.render);\n          expect(rootEl).toHaveText('hello');\n          async.done();\n        });\n      });\n    }));\n    it('should add a a dynamic component', inject([AsyncTestCompleter], (async) => {\n      createRenderer();\n      renderer.createRootProtoView(rootEl, 'someComponentId').then((rootProtoView) => {\n        var template = new ViewDefinition({\n          componentId: 'someComponent',\n          template: 'hello',\n          directives: []\n        });\n        renderer.compile(template).then((pv) => {\n          var rootViewRef = renderer.createView(rootProtoView.render)[0];\n          var childComponentViewRef = renderer.createView(pv.render)[0];\n          renderer.setDynamicComponentView(rootViewRef, 0, childComponentViewRef);\n          expect(rootEl).toHaveText('hello');\n          async.done();\n        });\n      });\n    }));\n    it('should update text nodes', inject([AsyncTestCompleter], (async) => {\n      createRenderer({templates: [new ViewDefinition({\n          componentId: 'someComponent',\n          template: '{{a}}',\n          directives: []\n        })]});\n      compileRoot(rootEl, 'someComponent').then((rootProtoView) => {\n        var viewRefs = renderer.createView(rootProtoView.render);\n        renderer.setText(viewRefs[1], 0, 'hello');\n        expect(rootEl).toHaveText('hello');\n        async.done();\n      });\n    }));\n    it('should update element properties', inject([AsyncTestCompleter], (async) => {\n      createRenderer({templates: [new ViewDefinition({\n          componentId: 'someComponent',\n          template: '<input [value]=\"someProp\">',\n          directives: []\n        })]});\n      compileRoot(rootEl, 'someComponent').then((rootProtoView) => {\n        var viewRefs = renderer.createView(rootProtoView.render);\n        renderer.setElementProperty(viewRefs[1], 0, 'value', 'hello');\n        expect(DOM.childNodes(rootEl)[0].value).toEqual('hello');\n        async.done();\n      });\n    }));\n    it('should add and remove views to and from containers', inject([AsyncTestCompleter], (async) => {\n      createRenderer({templates: [new ViewDefinition({\n          componentId: 'someComponent',\n          template: '<template>hello</template>',\n          directives: []\n        })]});\n      compileRoot(rootEl, 'someComponent').then((rootProtoView) => {\n        var viewRef = renderer.createView(rootProtoView.render)[1];\n        var vcProtoViewRef = rootProtoView.elementBinders[0].nestedProtoView.elementBinders[0].nestedProtoView.render;\n        var vcRef = new ViewContainerRef(viewRef, 0);\n        var childViewRef = renderer.createView(vcProtoViewRef)[0];\n        expect(rootEl).toHaveText('');\n        renderer.insertViewIntoContainer(vcRef, childViewRef);\n        expect(rootEl).toHaveText('hello');\n        renderer.detachViewFromContainer(vcRef, 0);\n        expect(rootEl).toHaveText('');\n        async.done();\n      });\n    }));\n    it('should cache views', inject([AsyncTestCompleter], (async) => {\n      createRenderer({\n        templates: [new ViewDefinition({\n          componentId: 'someComponent',\n          template: '<template>hello</template>',\n          directives: []\n        })],\n        viewCacheCapacity: 2\n      });\n      compileRoot(rootEl, 'someComponent').then((rootProtoView) => {\n        var vcProtoViewRef = rootProtoView.elementBinders[0].nestedProtoView.elementBinders[0].nestedProtoView.render;\n        var viewRef1 = renderer.createView(vcProtoViewRef)[0];\n        renderer.destroyView(viewRef1);\n        var viewRef2 = renderer.createView(vcProtoViewRef)[0];\n        var viewRef3 = renderer.createView(vcProtoViewRef)[0];\n        expect(viewRef2.delegate).toBe(viewRef1.delegate);\n        expect(viewRef3.delegate).not.toBe(viewRef1.delegate);\n        async.done();\n      });\n    }));\n    xit('should handle events', inject([AsyncTestCompleter], (async) => {\n      createRenderer({templates: [new ViewDefinition({\n          componentId: 'someComponent',\n          template: '<input (change)=\"$event.target.value\">',\n          directives: []\n        })]});\n      compileRoot(rootEl, 'someComponent').then((rootProtoView) => {\n        var viewRef = renderer.createView(rootProtoView.render)[1];\n        var dispatcher = new LoggingEventDispatcher();\n        renderer.setEventDispatcher(viewRef, dispatcher);\n        var inputEl = DOM.childNodes(rootEl)[0];\n        inputEl.value = 'hello';\n        eventPlugin.dispatchEvent('change', new FakeEvent(inputEl));\n        expect(dispatcher.log).toEqual([[0, 'change', ['hello']]]);\n        async.done();\n      });\n    }));\n  });\n}\nvar someComponent = new DirectiveMetadata({\n  id: 'someComponent',\n  type: DirectiveMetadata.COMPONENT_TYPE,\n  selector: 'some-comp'\n});\n//# sourceMappingURL=direct_dom_renderer_integration_spec.js.map\n\n//# sourceMappingURL=./direct_dom_renderer_integration_spec.map"]}