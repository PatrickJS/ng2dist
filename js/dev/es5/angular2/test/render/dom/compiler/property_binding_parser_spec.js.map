{"version":3,"sources":["property_binding_parser_spec.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,2XAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;AAkB7C,SAAS,KAAG,CAAE,AAAD;AAClB,WAAO,AAAC,CAAC,uBAAsB,GAAG,SAAC,AAAD;AAChC,aAAS,eAAa,CAAE,AAAyB;UAAzB,mBAAiB,6CAAI,MAAI;AAC/C,aAAO,IAAI,gBAAc,AAAC,CAAC,CAAC,GAAI,SAAO,AAAC,EAAC,SAAC,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAM;AACrE,aAAI,kBAAiB,CAAG;AACtB,kBAAM,YAAY,AAAC,EAAC,oBAAoB,AAAC,CAAC,EAAC,AAAC,CAAC,uBAAsB,CAAC,CAAC,CAAC;UACxE;AAAA,QACF,EAAC,CAAG,IAAI,sBAAoB,AAAC,CAAC,GAAI,OAAK,AAAC,CAAC,GAAI,MAAI,AAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1D;AACA,aAAS,QAAM,CAAE,OAAM,AAA4B;UAAzB,mBAAiB,6CAAI,MAAI;AACjD,aAAO,CAAA,WAAU,IAAI,AAAC,CAAC,cAAa,AAAC,CAAC,kBAAiB,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,GAAG,SAAC,cAAa;eAAM,CAAA,cAAa,uBAAuB;QAAA,EAAC,CAAC;MACxI;AACA,OAAC,AAAC,CAAC,yBAAwB,GAAG,SAAC,AAAD,CAAM;AAClC,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,qBAAoB,CAAC,CAAC,CAAC;AAChD,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,IAAE,CAAC,OAAO,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;MAC9E,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,2EAA0E,GAAG,SAAC,AAAD,CAAM;AACpF,aAAK,AAAC,CAAC,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,sBAAqB,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;AACzD,aAAK,AAAC,CAAC,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,sBAAqB,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC,KAAK,AAAC,CAAC,IAAG,CAAC,CAAC;MAC3D,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,4BAA2B,GAAG,SAAC,AAAD,CAAM;AACrC,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,wBAAuB,CAAC,CAAC,CAAC;AACnD,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,IAAE,CAAC,OAAO,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;MAC9E,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,uEAAsE,GAAG,SAAC,AAAD,CAAM;AAChF,aAAK,AAAC,CAAC,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,yBAAwB,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;MACjE,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,oCAAmC,GAAG,SAAC,AAAD,CAAM;AAC7C,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,uBAAsB,CAAC,CAAC,CAAC;AAClD,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,IAAE,CAAC,OAAO,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;MAClF,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,2BAA0B,GAAG,SAAC,AAAD,CAAM;AACpC,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,iCAAgC,CAAC,CAAC,CAAC;AAC5D,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,IAAE,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;MACvE,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,6EAA4E,GAAG,SAAC,AAAD,CAAM;AACtF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,wCAAuC,CAAC,CAAG,KAAG,CAAC,CAAC;AACzE,aAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAC,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;AACtD,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,gBAAgB,iBAAiB,CAAG,aAAW,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MACrG,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,wGAAuG,GAAG,SAAC,AAAD,CAAM;AACjH,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,4CAA2C,CAAC,CAAG,KAAG,CAAC,CAAC;AAC7E,aAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAC,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;AACtD,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,gBAAgB,iBAAiB,CAAG,aAAW,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MACrG,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,0DAAyD,GAAG,SAAC,AAAD,CAAM;AACnE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,iCAAgC,CAAC,CAAC,CAAC;AAC5D,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,aAAW,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MACrF,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,iFAAgF,GAAG,SAAC,AAAD,CAAM;AAC1F,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,8BAA6B,CAAC,CAAC,CAAC;AACzD,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,aAAW,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MACrF,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,wDAAuD,GAAG,SAAC,AAAD,CAAM;AACjE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,oBAAmB,CAAC,CAAC,CAAC;AAC/C,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,aAAW,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MACrF,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,+EAA8E,GAAG,SAAC,AAAD,CAAM;AACxF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,iBAAgB,CAAC,CAAC,CAAC;AAC5C,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,iBAAiB,CAAG,aAAW,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;MACrF,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,yEAAwE,GAAG,SAAC,AAAD,CAAM;AAClF,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,kBAAiB,CAAC,CAAC,CAAC;AAC7C,aAAK,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;MAClC,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,yBAAwB,GAAG,SAAC,AAAD,CAAM;AAClC,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,2BAA0B,CAAC,CAAC,CAAC;AACtD,AAAI,UAAA,CAAA,YAAW,EAAI,CAAA,OAAM,CAAE,CAAA,CAAC,cAAc,CAAE,CAAA,CAAC,CAAC;AAC9C,aAAK,AAAC,CAAC,YAAW,OAAO,OAAO,CAAC,QAAQ,AAAC,CAAC,KAAI,CAAC,CAAC;AACjD,aAAK,AAAC,CAAC,YAAW,SAAS,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAC9C,cAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,6BAA4B,CAAC,CAAC,CAAC;AACpD,mBAAW,EAAI,CAAA,OAAM,CAAE,CAAA,CAAC,cAAc,CAAE,CAAA,CAAC,CAAC;AAC1C,aAAK,AAAC,CAAC,YAAW,OAAO,OAAO,CAAC,QAAQ,AAAC,CAAC,KAAI,CAAC,CAAC;AACjD,aAAK,AAAC,CAAC,YAAW,SAAS,CAAC,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;MAClD,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,2EAA0E,GAAG,SAAC,AAAD,CAAM;AACpF,aAAK,AAAC,CAAC,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,wBAAuB,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;AAC9D,aAAK,AAAC,CAAC,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,wBAAuB,CAAC,CAAC,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;MAChE,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,wDAAuD,GAAG,SAAC,AAAD,CAAM;AACjE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,+BAA8B,CAAC,CAAC,CAAC;AAC1D,AAAI,UAAA,CAAA,YAAW,EAAI,CAAA,OAAM,CAAE,CAAA,CAAC,cAAc,CAAE,CAAA,CAAC,CAAC;AAC9C,aAAK,AAAC,CAAC,YAAW,OAAO,OAAO,CAAC,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;AACrD,aAAK,AAAC,CAAC,YAAW,SAAS,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;MAChD,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,0BAAyB,GAAG,SAAC,AAAD,CAAM;AACnC,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,4BAA2B,CAAC,CAAC,CAAC;AACvD,AAAI,UAAA,CAAA,YAAW,EAAI,CAAA,OAAM,CAAE,CAAA,CAAC,cAAc,CAAE,CAAA,CAAC,CAAC;AAC9C,aAAK,AAAC,CAAC,YAAW,OAAO,OAAO,CAAC,QAAQ,AAAC,CAAC,KAAI,CAAC,CAAC;AACjD,aAAK,AAAC,CAAC,YAAW,SAAS,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;MAChD,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,yDAAwD,GAAG,SAAC,AAAD,CAAM;AAClE,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,EAAC,AAAC,CAAC,gCAA+B,CAAC,CAAC,CAAC;AAC3D,AAAI,UAAA,CAAA,YAAW,EAAI,CAAA,OAAM,CAAE,CAAA,CAAC,cAAc,CAAE,CAAA,CAAC,CAAC;AAC9C,aAAK,AAAC,CAAC,YAAW,OAAO,OAAO,CAAC,QAAQ,AAAC,CAAC,SAAQ,CAAC,CAAC;AACrD,aAAK,AAAC,CAAC,YAAW,SAAS,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;MAChD,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,sDAAqD,GAAG,SAAC,AAAD,CAAM;AAC/D,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,cAAa,AAAC,EAAC,QAAQ,AAAC,CAAC,EAAC,AAAC,CAAC,gCAA+B,CAAC,CAAC,CAAC;AAC5E,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,MAAM,AAAC,EAAC,CAAG,IAAE,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;AAC5D,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,MAAM,AAAC,EAAC,CAAG,IAAE,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;MAC9D,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,+CAA8C,GAAG,SAAC,AAAD,CAAM;AACxD,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,cAAa,AAAC,EAAC,QAAQ,AAAC,CAAC,EAAC,AAAC,CAAC,8BAA6B,CAAC,CAAC,CAAC;AAC1E,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,MAAM,AAAC,EAAC,CAAG,IAAE,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;AAC5D,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,MAAM,AAAC,EAAC,CAAG,IAAE,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;MAC9D,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,uCAAsC,GAAG,SAAC,AAAD,CAAM;AAChD,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,wBAAuB,CAAC,CAAC;AAC1C,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,OAAM,CAAC,CAAC;AAC9B,AAAI,UAAA,CAAA,MAAK,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,gBAAgB,CAAG,QAAM,CAAC,CAAC;AAChE,aAAK,AAAC,CAAC,OAAM,CAAG,MAAI,CAAC,CAAC;AACtB,aAAK,AAAC,CAAC,OAAM,MAAM,CAAC,QAAQ,AAAC,CAAC,KAAI,CAAC,CAAC;MACtC,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,6CAA4C,GAAG,SAAC,AAAD,CAAM;AACtD,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,EAAC,AAAC,CAAC,0BAAyB,CAAC,CAAC;AAC5C,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,OAAM,AAAC,CAAC,OAAM,CAAC,CAAC;AAC9B,aAAK,AAAC,CAAC,UAAS,IAAI,AAAC,CAAC,OAAM,CAAE,CAAA,CAAC,gBAAgB,CAAG,WAAS,CAAC,CAAC,WAAW,AAAC,EAAC,CAAC;MAC7E,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;AAzIQ,UAAQ,AAAC,cAAqC,CAAA;AADtD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,4BAAoB,KAAG,sBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,sBAAoB,KAAG,gBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,YAAoB,KAAG,MAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;gBAeI,CAAA,UAAS,OAAO,AAAC,EAAC;AAjBlC,iBAAA,SAAS,QAAO;AACN,AAAI,UAAA,WA0Id,SAAM,SAAO,CACC,OAAM,CAAG;AACnB,AA7IJ,wBAAc,iBAAiB,AAAC,UAAkB,KAAK,MAAmB,CA6I/D;AACP,aAAG,eAAe,EAAI,QAAM,CAAC;QAC/B,AA9IgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,YA8I5C,OAAM,CAAN,UAAQ,MAAK,CAAG,CAAA,OAAM,CAAG,CAAA,OAAM,CAAG;AAChC,iBAAK,cAAc,AAAC,CAAC,MAAK,CAAG,eAAa,CAAG,QAAM,CAAG,eAAa,CAAG,QAAM,CAAG,eAAa,CAAC,CAAC;AAC9F,eAAG,eAAe,AAAC,CAAC,MAAK,CAAG,QAAM,CAAG,QAAM,CAAC,CAAC;UAC/C,MAhJgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAuIc,WAAU,CAvIN,CAJS,CAAA;AAqJpC,WAAK,eAAe,AAAC,CAAC,QAAO,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7E,eAAO,EAAC,CAAC,cAAa,CAAC,CAAG,EAAC,cAAa,CAAC,CAAG,EAAC,cAAa,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IArJ0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAwJ4C","file":"angular2/test/render/dom/compiler/property_binding_parser_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {describe,\n  beforeEach,\n  it,\n  expect,\n  iit,\n  ddescribe,\n  el} from 'angular2/test_lib';\nimport {PropertyBindingParser} from 'angular2/src/render/dom/compiler/property_binding_parser';\nimport {CompilePipeline} from 'angular2/src/render/dom/compiler/compile_pipeline';\nimport {MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {CompileElement} from 'angular2/src/render/dom/compiler/compile_element';\nimport {CompileStep} from 'angular2/src/render/dom/compiler/compile_step';\nimport {CompileControl} from 'angular2/src/render/dom/compiler/compile_control';\nimport {Lexer,\n  Parser} from 'angular2/change_detection';\nvar EMPTY_MAP = MapWrapper.create();\nexport function main() {\n  describe('PropertyBindingParser', () => {\n    function createPipeline(hasNestedProtoView = false) {\n      return new CompilePipeline([new MockStep((parent, current, control) => {\n        if (hasNestedProtoView) {\n          current.bindElement().bindNestedProtoView(el('<template></template>'));\n        }\n      }), new PropertyBindingParser(new Parser(new Lexer()))]);\n    }\n    function process(element, hasNestedProtoView = false) {\n      return ListWrapper.map(createPipeline(hasNestedProtoView).process(element), (compileElement) => compileElement.inheritedElementBinder);\n    }\n    it('should detect [] syntax', () => {\n      var results = process(el('<div [a]=\"b\"></div>'));\n      expect(MapWrapper.get(results[0].propertyBindings, 'a').source).toEqual('b');\n    });\n    it('should detect [] syntax only if an attribute name starts and ends with []', () => {\n      expect(process(el('<div z[a]=\"b\"></div>'))[0]).toBe(null);\n      expect(process(el('<div [a]v=\"b\"></div>'))[0]).toBe(null);\n    });\n    it('should detect bind- syntax', () => {\n      var results = process(el('<div bind-a=\"b\"></div>'));\n      expect(MapWrapper.get(results[0].propertyBindings, 'a').source).toEqual('b');\n    });\n    it('should detect bind- syntax only if an attribute name starts with bind', () => {\n      expect(process(el('<div _bind-a=\"b\"></div>'))[0]).toEqual(null);\n    });\n    it('should detect interpolation syntax', () => {\n      var results = process(el('<div a=\"{{b}}\"></div>'));\n      expect(MapWrapper.get(results[0].propertyBindings, 'a').source).toEqual('{{b}}');\n    });\n    it('should detect var- syntax', () => {\n      var results = process(el('<template var-a=\"b\"></template>'));\n      expect(MapWrapper.get(results[0].variableBindings, 'b')).toEqual('a');\n    });\n    it('should store variable binding for a template element on the nestedProtoView', () => {\n      var results = process(el('<template var-george=\"washington\"></p>'), true);\n      expect(results[0].variableBindings).toEqual(EMPTY_MAP);\n      expect(MapWrapper.get(results[0].nestedProtoView.variableBindings, 'washington')).toEqual('george');\n    });\n    it('should store variable binding for a non-template element using shorthand syntax on the nestedProtoView', () => {\n      var results = process(el('<template #george=\"washington\"></template>'), true);\n      expect(results[0].variableBindings).toEqual(EMPTY_MAP);\n      expect(MapWrapper.get(results[0].nestedProtoView.variableBindings, 'washington')).toEqual('george');\n    });\n    it('should store variable binding for a non-template element', () => {\n      var results = process(el('<p var-george=\"washington\"></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, 'washington')).toEqual('george');\n    });\n    it('should store variable binding for a non-template element using shorthand syntax', () => {\n      var results = process(el('<p #george=\"washington\"></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, 'washington')).toEqual('george');\n    });\n    it('should store a variable binding with an implicit value', () => {\n      var results = process(el('<p var-george></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, '\\$implicit')).toEqual('george');\n    });\n    it('should store a variable binding with an implicit value using shorthand syntax', () => {\n      var results = process(el('<p #george></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, '\\$implicit')).toEqual('george');\n    });\n    it('should detect variable bindings only if an attribute name starts with #', () => {\n      var results = process(el('<p b#george></p>'));\n      expect(results[0]).toEqual(null);\n    });\n    it('should detect () syntax', () => {\n      var results = process(el('<div (click)=\"b()\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('b()');\n      expect(eventBinding.fullName).toEqual('click');\n      results = process(el('<div (click[])=\"b()\"></div>'));\n      eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('b()');\n      expect(eventBinding.fullName).toEqual('click[]');\n    });\n    it('should detect () syntax only if an attribute name starts and ends with ()', () => {\n      expect(process(el('<div z(a)=\"b()\"></div>'))[0]).toEqual(null);\n      expect(process(el('<div (a)v=\"b()\"></div>'))[0]).toEqual(null);\n    });\n    it('should parse event handlers using () syntax as actions', () => {\n      var results = process(el('<div (click)=\"foo=bar\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('foo=bar');\n      expect(eventBinding.fullName).toEqual('click');\n    });\n    it('should detect on- syntax', () => {\n      var results = process(el('<div on-click=\"b()\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('b()');\n      expect(eventBinding.fullName).toEqual('click');\n    });\n    it('should parse event handlers using on- syntax as actions', () => {\n      var results = process(el('<div on-click=\"foo=bar\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('foo=bar');\n      expect(eventBinding.fullName).toEqual('click');\n    });\n    it('should store bound properties as temporal attributes', () => {\n      var results = createPipeline().process(el('<div bind-a=\"b\" [c]=\"d\"></div>'));\n      expect(MapWrapper.get(results[0].attrs(), 'a')).toEqual('b');\n      expect(MapWrapper.get(results[0].attrs(), 'c')).toEqual('d');\n    });\n    it('should store variables as temporal attributes', () => {\n      var results = createPipeline().process(el('<div var-a=\"b\" #c=\"d\"></div>'));\n      expect(MapWrapper.get(results[0].attrs(), 'a')).toEqual('b');\n      expect(MapWrapper.get(results[0].attrs(), 'c')).toEqual('d');\n    });\n    it('should store working property setters', () => {\n      var element = el('<input bind-value=\"1\">');\n      var results = process(element);\n      var setter = MapWrapper.get(results[0].propertySetters, 'value');\n      setter(element, 'abc');\n      expect(element.value).toEqual('abc');\n    });\n    it('should store property setters as camel case', () => {\n      var element = el('<div bind-some-prop=\"1\">');\n      var results = process(element);\n      expect(MapWrapper.get(results[0].propertySetters, 'someProp')).toBeTruthy();\n    });\n  });\n}\nclass MockStep extends CompileStep {\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    this.processClosure(parent, current, control);\n  }\n}\nObject.defineProperty(MockStep.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\n//# sourceMappingURL=property_binding_parser_spec.js.map\n\n//# sourceMappingURL=./property_binding_parser_spec.map"]}