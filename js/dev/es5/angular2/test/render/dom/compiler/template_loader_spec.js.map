{"version":3,"sources":["template_loader_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/render/dom/compiler/template_loader_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {ViewDefinition} from 'angular2/src/render/api';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {MockXHR} from 'angular2/src/mock/xhr_mock';\nexport function main() {\n  describe('TemplateLoader', () => {\n    var loader,\n        xhr;\n    beforeEach(() => {\n      xhr = new MockXHR();\n      loader = new TemplateLoader(xhr, new FakeUrlResolver());\n    });\n    it('should load inline templates', inject([AsyncTestCompleter], (async) => {\n      var template = new ViewDefinition({template: 'template template'});\n      loader.load(template).then((el) => {\n        expect(DOM.content(el)).toHaveText('template template');\n        async.done();\n      });\n    }));\n    it('should load templates through XHR', inject([AsyncTestCompleter], (async) => {\n      xhr.expect('base/foo', 'xhr template');\n      var template = new ViewDefinition({absUrl: 'base/foo'});\n      loader.load(template).then((el) => {\n        expect(DOM.content(el)).toHaveText('xhr template');\n        async.done();\n      });\n      xhr.flush();\n    }));\n    it('should cache template loaded through XHR', inject([AsyncTestCompleter], (async) => {\n      var firstEl;\n      xhr.expect('base/foo', 'xhr template');\n      var template = new ViewDefinition({absUrl: 'base/foo'});\n      loader.load(template).then((el) => {\n        firstEl = el;\n        return loader.load(template);\n      }).then((el) => {\n        expect(el).toBe(firstEl);\n        expect(DOM.content(el)).toHaveText('xhr template');\n        async.done();\n      });\n      xhr.flush();\n    }));\n    it('should throw when no template is defined', () => {\n      var template = new ViewDefinition({\n        template: null,\n        absUrl: null\n      });\n      expect(() => loader.load(template)).toThrowError('View should have either the url or template property set');\n    });\n    it('should return a rejected Promise when xhr loading fails', inject([AsyncTestCompleter], (async) => {\n      xhr.expect('base/foo', null);\n      var template = new ViewDefinition({absUrl: 'base/foo'});\n      PromiseWrapper.then(loader.load(template), function(_) {\n        throw 'Unexpected response';\n      }, function(error) {\n        expect(error).toEqual('Failed to load base/foo');\n        async.done();\n      });\n      xhr.flush();\n    }));\n  });\n}\nclass SomeComponent {}\nclass FakeUrlResolver extends UrlResolver {\n  constructor() {\n    super();\n  }\n  resolve(baseUrl, url) {\n    assert.argumentTypes(baseUrl, assert.type.string, url, assert.type.string);\n    return assert.returnType((baseUrl + url), assert.type.string);\n  }\n}\nObject.defineProperty(FakeUrlResolver.prototype.resolve, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\n//# sourceMappingURL=template_loader_spec.js.map\n\n//# sourceMappingURL=./template_loader_spec.map"]}