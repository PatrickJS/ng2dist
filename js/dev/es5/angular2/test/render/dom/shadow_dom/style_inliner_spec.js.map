{"version":3,"sources":["style_inliner_spec.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,6OAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;;AAoB7C,SAAS,KAAG,CAAE,AAAD;AAClB,WAAO,AAAC,CAAC,cAAa,GAAG,SAAC,AAAD;AACvB,uBAAiB,AAAC,EAAC,SAAC,AAAD;aAAM,EAAC,IAAG,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;MAAA,EAAC,CAAC;AACtD,aAAO,AAAC,CAAC,SAAQ,GAAG,SAAC,AAAD;AAClB,SAAC,AAAC,CAAC,0DAAyD,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,YAAW,CAAC,GAAG,SAAC,OAAM,CAAM;AACjG,AAAI,YAAA,CAAA,GAAE,EAAI,WAAS,CAAC;AACpB,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,cAAY,CAAC,CAAC;AACzD,eAAK,AAAC,CAAC,SAAQ,CAAC,IAAI,YAAY,AAAC,EAAC,CAAC;AACnC,eAAK,AAAC,CAAC,SAAQ,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;QAChC,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,6BAA4B,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AACzG,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,UAAQ,CAAC,CAAC;AAC3C,AAAI,YAAA,CAAA,GAAE,EAAI,kCAAgC,CAAC;AAC3C,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,cAAY,CAAC,CAAC;AACzD,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,mBAAkB,CAAC,CAAC;AACxC,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,qDAAoD,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AACjI,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,UAAQ,CAAC,CAAC;AAC3C,AAAI,YAAA,CAAA,GAAE,EAAI,gCAA8B,CAAC;AACzC,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,cAAY,CAAC,CAAC;AACzD,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,mBAAkB,CAAC,CAAC;AACxC,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,uCAAsC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,YAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,OAAM,CAAG,CAAA,KAAI,CAAM;AACzG,AAAI,YAAA,CAAA,GAAE,EAAI,6BAA2B,CAAC;AACtC,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,cAAY,CAAC,CAAC;AACzD,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,sDAAqD,CAAC,CAAC;AAC3E,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,sCAAqC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AAClH,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,UAAQ,CAAC,CAAC;AAC3C,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,UAAQ,CAAC,CAAC;AAC3C,AAAI,YAAA,CAAA,GAAE,EAAI,+CAA6C,CAAC;AACxD,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,cAAY,CAAC,CAAC;AACzD,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,4BAA2B,CAAC,CAAC;AACjD,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,oCAAmC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AAChH,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,4BAA0B,CAAC,CAAC;AAC7D,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,UAAQ,CAAC,CAAC;AAC3C,AAAI,YAAA,CAAA,GAAE,EAAI,6BAA2B,CAAC;AACtC,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,eAAa,CAAC,CAAC;AAC1D,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,4BAA2B,CAAC,CAAC;AACjD,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,+CAA8C,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AAC3H,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,4BAA0B,CAAC,CAAC;AAC7D,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,4BAA0B,CAAC,CAAC;AAC7D,AAAI,YAAA,CAAA,GAAE,EAAI,6BAA2B,CAAC;AACtC,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,eAAa,CAAC,CAAC;AAC1D,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,4BAA2B,CAAC,CAAC;AACjD,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;AACH,SAAC,AAAC,CAAC,yCAAwC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,YAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,OAAM,CAAG,CAAA,KAAI,CAAM;AAC3G,AAAI,YAAA,CAAA,GAAE,EAAI,2BAAyB,CAAC;AACpC,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,eAAa,CAAC,CAAC;AAC1D,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,uDAAsD,CAAC,CAAC;AAC5E,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;MACL,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,aAAY,GAAG,SAAC,AAAD;AACtB,SAAC,AAAC,CAAC,4CAA2C,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AACxH,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,UAAQ,CAAC,CAAC;AAC3C,AAAI,YAAA,CAAA,GAAE,EAAI,qEAAmE,CAAC;AAC9E,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,eAAa,CAAC,CAAC;AAC1D,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,wEAAuE,CAAC,CAAC;AAC7F,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;MACL,EAAC,CAAC;AACF,aAAO,AAAC,CAAC,gBAAe,GAAG,SAAC,AAAD;AACzB,SAAC,AAAC,CAAC,uCAAsC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,GAAE,CAAG,aAAW,CAAG,mBAAiB,CAAC,GAAG,SAAC,GAAE,CAAG,CAAA,OAAM,CAAG,CAAA,KAAI,CAAM;AACnH,YAAE,MAAM,AAAC,CAAC,qBAAoB,CAAG,sEAAoE,CAAC,CAAC;AACvG,YAAE,MAAM,AAAC,CAAC,4BAA2B,CAAG,kDAAgD,CAAC,CAAC;AAC1F,AAAI,YAAA,CAAA,GAAE,EAAI,qBAAmB,CAAC;AAC9B,AAAI,YAAA,CAAA,SAAQ,EAAI,CAAA,OAAM,cAAc,AAAC,CAAC,GAAE,CAAG,eAAa,CAAC,CAAC;AAC1D,eAAK,AAAC,CAAC,SAAQ,CAAC,YAAY,AAAC,EAAC,CAAC;AAC/B,uBAAa,KAAK,AAAC,CAAC,SAAQ,CAAG,UAAS,GAAE,CAAG;AAC3C,iBAAK,AAAC,CAAC,GAAE,CAAC,QAAQ,AAAC,CAAC,4DAA2D,EAAI,yDAAuD,CAAC,CAAC;AAC5I,gBAAI,KAAK,AAAC,EAAC,CAAC;UACd,CAAG,UAAS,CAAA,CAAG;AACb,gBAAM,QAAM,CAAC;UACf,CAAC,CAAC;QACJ,EAAC,CAAC,CAAC;MACL,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;AAjJQ,UAAQ,AAAC,cAAqC,CAAA;AADtD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,yBAAoB,KAAG,mBAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,yBAAoB,KAAG,mBAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,mBAAoB,KAAG,aAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,UAAoB,KAAG,IAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,UAAoB,KAAG,IAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,WAAoB,KAAG,KAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;AAFZ,gBAAA,SAAS,QAAO;AACN,AAAI,UAAA,UAkJd,SAAM,QAAM,CACE,AAAD,CAAG;AACZ,AArJJ,wBAAc,iBAAiB,AAAC,SAAkB,KAAK,MAAmB,CAqJ/D;AACP,aAAG,WAAW,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;QACvC,AAtJgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAsJ5C,YAAE,CAAF,UAAI,GAAE,CAAG;AACP,iBAAK,cAAc,AAAC,CAAC,GAAE,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC7C,AAAI,cAAA,CAAA,QAAO,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,WAAW,CAAG,IAAE,CAAC,CAAC;AACnD,eAAI,OAAM,AAAC,CAAC,QAAO,CAAC,CAAG;AACrB,mBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,cAAa,OAAO,AAAC,CAAC,WAAU,CAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,OAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;YACjH;AAAA,AACA,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,cAAa,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,OAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;UAC/G;AACA,cAAI,CAAJ,UAAM,GAAE,CAAG,CAAA,QAAO,CAAG;AACnB,iBAAK,cAAc,AAAC,CAAC,GAAE,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,SAAO,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC3E,qBAAS,IAAI,AAAC,CAAC,IAAG,WAAW,CAAG,IAAE,CAAG,SAAO,CAAC,CAAC;UAChD;AAAA,aAhKgE,SAAO,CAAC,CAAC;MACnE,AAAC,CA+Ia,GAAE,CA/IG,CAJS,CAAA;AAqKpC,WAAK,eAAe,AAAC,CAAC,OAAM,UAAU,IAAI,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACxE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,OAAM,UAAU,MAAM,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC1E,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IAxK0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA2KkC","file":"angular2/test/render/dom/shadow_dom/style_inliner_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {isBlank} from 'angular2/src/facade/lang';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {Map,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {XHR} from 'angular2/src/services/xhr';\nimport {bind} from 'angular2/di';\nexport function main() {\n  describe('StyleInliner', () => {\n    beforeEachBindings(() => [bind(XHR).toClass(FakeXHR)]);\n    describe('loading', () => {\n      it('should return a string when there is no import statement', inject([StyleInliner], (inliner) => {\n        var css = '.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).not.toBePromise();\n        expect(loadedCss).toEqual(css);\n      }));\n      it('should inline @import rules', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import url(\"one.css\");.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('.one {}\\n.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n      it('should support url([unquoted url]) in @import rules', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import url(one.css);.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('.one {}\\n.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n      it('should handle @import error gracefuly', inject([StyleInliner, AsyncTestCompleter], (inliner, async) => {\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('/* failed to import http://base/one.css */\\n.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n      it('should inline multiple @import rules', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        xhr.reply('http://base/two.css', '.two {}');\n        var css = '@import \"one.css\";@import \"two.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('.one {}\\n.two {}\\n.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n      it('should inline nested @import rules', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '@import \"two.css\";.one {}');\n        xhr.reply('http://base/two.css', '.two {}');\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('.two {}\\n.one {}\\n.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n      it('should handle circular dependencies gracefuly', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '@import \"two.css\";.one {}');\n        xhr.reply('http://base/two.css', '@import \"one.css\";.two {}');\n        var css = '@import \"one.css\";.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('.two {}\\n.one {}\\n.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n      it('should handle invalid @import fracefuly', inject([StyleInliner, AsyncTestCompleter], (inliner, async) => {\n        var css = '@import one.css;.main {}';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('/* Invalid import rule: \"@import one.css;\" */.main {}');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n    });\n    describe('media query', () => {\n      it('should wrap inlined content in media query', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '.one {}');\n        var css = '@import \"one.css\" (min-width: 700px) and (orientation: landscape);';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual('@media (min-width: 700px) and (orientation: landscape) {\\n.one {}\\n}\\n');\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n    });\n    describe('url rewritting', () => {\n      it('should rewrite url in inlined content', inject([XHR, StyleInliner, AsyncTestCompleter], (xhr, inliner, async) => {\n        xhr.reply('http://base/one.css', '@import \"./nested/two.css\";.one {background-image: url(\"one.jpg\");}');\n        xhr.reply('http://base/nested/two.css', '.two {background-image: url(\"../img/two.jpg\");}');\n        var css = '@import \"one.css\";';\n        var loadedCss = inliner.inlineImports(css, 'http://base/');\n        expect(loadedCss).toBePromise();\n        PromiseWrapper.then(loadedCss, function(css) {\n          expect(css).toEqual(\".two {background-image: url('http://base/img/two.jpg');}\\n\" + \".one {background-image: url('http://base/one.jpg');}\\n\");\n          async.done();\n        }, function(e) {\n          throw 'fail;';\n        });\n      }));\n    });\n  });\n}\nclass FakeXHR extends XHR {\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n  get(url) {\n    assert.argumentTypes(url, assert.type.string);\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return assert.returnType((PromiseWrapper.reject('xhr error')), assert.genericType(Promise, assert.type.string));\n    }\n    return assert.returnType((PromiseWrapper.resolve(response)), assert.genericType(Promise, assert.type.string));\n  }\n  reply(url, response) {\n    assert.argumentTypes(url, assert.type.string, response, assert.type.string);\n    MapWrapper.set(this._responses, url, response);\n  }\n}\nObject.defineProperty(FakeXHR.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(FakeXHR.prototype.reply, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\n//# sourceMappingURL=style_inliner_spec.js.map\n\n//# sourceMappingURL=./style_inliner_spec.map"]}