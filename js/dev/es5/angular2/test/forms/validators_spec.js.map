{"version":3,"sources":["validators_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/forms/validators_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach,\n  el} from 'angular2/test_lib';\nimport {ControlGroup,\n  Control,\n  Validators} from 'angular2/forms';\nexport function main() {\n  function validator(key, error) {\n    assert.argumentTypes(key, assert.type.string, error, assert.type.any);\n    return function(c) {\n      assert.argumentTypes(c, Control);\n      var r = {};\n      r[key] = error;\n      return r;\n    };\n  }\n  Object.defineProperty(validator, \"parameters\", {get: function() {\n      return [[assert.type.string], [assert.type.any]];\n    }});\n  describe(\"Validators\", () => {\n    describe(\"required\", () => {\n      it(\"should error on an empty string\", () => {\n        expect(Validators.required(new Control(\"\"))).toEqual({\"required\": true});\n      });\n      it(\"should error on null\", () => {\n        expect(Validators.required(new Control(null))).toEqual({\"required\": true});\n      });\n      it(\"should not error on a non-empty string\", () => {\n        expect(Validators.required(new Control(\"not empty\"))).toEqual(null);\n      });\n    });\n    describe(\"compose\", () => {\n      it(\"should collect errors from all the validators\", () => {\n        var c = Validators.compose([validator(\"a\", true), validator(\"b\", true)]);\n        expect(c(new Control(\"\"))).toEqual({\n          \"a\": true,\n          \"b\": true\n        });\n      });\n      it(\"should run validators left to right\", () => {\n        var c = Validators.compose([validator(\"a\", 1), validator(\"a\", 2)]);\n        expect(c(new Control(\"\"))).toEqual({\"a\": 2});\n      });\n      it(\"should return null when no errors\", () => {\n        var c = Validators.compose([Validators.nullValidator, Validators.nullValidator]);\n        expect(c(new Control(\"\"))).toEqual(null);\n      });\n    });\n    describe(\"controlGroupValidator\", () => {\n      it(\"should collect errors from the child controls\", () => {\n        var one = new Control(\"one\", validator(\"a\", true));\n        var two = new Control(\"one\", validator(\"b\", true));\n        var g = new ControlGroup({\n          \"one\": one,\n          \"two\": two\n        });\n        expect(Validators.group(g)).toEqual({\n          \"a\": [one],\n          \"b\": [two]\n        });\n      });\n      it(\"should not include controls that have no errors\", () => {\n        var one = new Control(\"one\", validator(\"a\", true));\n        var two = new Control(\"two\");\n        var g = new ControlGroup({\n          \"one\": one,\n          \"two\": two\n        });\n        expect(Validators.group(g)).toEqual({\"a\": [one]});\n      });\n      it(\"should return null when no errors\", () => {\n        var g = new ControlGroup({\"one\": new Control(\"one\")});\n        expect(Validators.group(g)).toEqual(null);\n      });\n    });\n  });\n}\n//# sourceMappingURL=validators_spec.js.map\n\n//# sourceMappingURL=./validators_spec.map"]}