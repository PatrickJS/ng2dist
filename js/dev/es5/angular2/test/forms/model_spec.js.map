{"version":3,"sources":["model_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/forms/model_spec.js","sourcesContent":["import {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach,\n  el,\n  AsyncTestCompleter,\n  inject} from 'angular2/test_lib';\nimport {ControlGroup,\n  Control,\n  ControlArray,\n  Validators} from 'angular2/forms';\nimport {ObservableWrapper} from 'angular2/src/facade/async';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nexport function main() {\n  describe(\"Form Model\", () => {\n    describe(\"Control\", () => {\n      describe(\"validator\", () => {\n        it(\"should run validator with the initial value\", () => {\n          var c = new Control(\"value\", Validators.required);\n          expect(c.valid).toEqual(true);\n        });\n        it(\"should rerun the validator when the value changes\", () => {\n          var c = new Control(\"value\", Validators.required);\n          c.updateValue(null);\n          expect(c.valid).toEqual(false);\n        });\n        it(\"should return errors\", () => {\n          var c = new Control(null, Validators.required);\n          expect(c.errors).toEqual({\"required\": true});\n        });\n      });\n      describe(\"pristine\", () => {\n        it(\"should be true after creating a control\", () => {\n          var c = new Control(\"value\");\n          expect(c.pristine).toEqual(true);\n        });\n        it(\"should be false after changing the value of the control\", () => {\n          var c = new Control(\"value\");\n          c.updateValue(\"new value\");\n          expect(c.pristine).toEqual(false);\n        });\n      });\n      describe(\"dirty\", () => {\n        it(\"should be false after creating a control\", () => {\n          var c = new Control(\"value\");\n          expect(c.dirty).toEqual(false);\n        });\n        it(\"should be true after changing the value of the control\", () => {\n          var c = new Control(\"value\");\n          c.updateValue(\"new value\");\n          expect(c.dirty).toEqual(true);\n        });\n      });\n      describe(\"valueChanges\", () => {\n        var c;\n        beforeEach(() => {\n          c = new Control(\"old\");\n        });\n        it(\"should fire an event after the value has been updated\", inject([AsyncTestCompleter], (async) => {\n          ObservableWrapper.subscribe(c.valueChanges, (value) => {\n            expect(c.value).toEqual('new');\n            expect(value).toEqual('new');\n            async.done();\n          });\n          c.updateValue(\"new\");\n        }));\n        it(\"should return a cold observable\", inject([AsyncTestCompleter], (async) => {\n          c.updateValue(\"will be ignored\");\n          ObservableWrapper.subscribe(c.valueChanges, (value) => {\n            expect(value).toEqual('new');\n            async.done();\n          });\n          c.updateValue(\"new\");\n        }));\n      });\n    });\n    describe(\"ControlGroup\", () => {\n      describe(\"value\", () => {\n        it(\"should be the reduced value of the child controls\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control(\"111\"),\n            \"two\": new Control(\"222\")\n          });\n          expect(g.value).toEqual({\n            \"one\": \"111\",\n            \"two\": \"222\"\n          });\n        });\n        it(\"should be empty when there are no child controls\", () => {\n          var g = new ControlGroup({});\n          expect(g.value).toEqual({});\n        });\n        it(\"should support nested groups\", () => {\n          var g = new ControlGroup({\n            \"one\": new Control(\"111\"),\n            \"nested\": new ControlGroup({\"two\": new Control(\"222\")})\n          });\n          expect(g.value).toEqual({\n            \"one\": \"111\",\n            \"nested\": {\"two\": \"222\"}\n          });\n          g.controls[\"nested\"].controls[\"two\"].updateValue(\"333\");\n          expect(g.value).toEqual({\n            \"one\": \"111\",\n            \"nested\": {\"two\": \"333\"}\n          });\n        });\n      });\n      describe(\"validator\", () => {\n        it(\"should run the validator with the initial value (valid)\", () => {\n          var g = new ControlGroup({\"one\": new Control('value', Validators.required)});\n          expect(g.valid).toEqual(true);\n          expect(g.errors).toEqual(null);\n        });\n        it(\"should run the validator with the initial value (invalid)\", () => {\n          var one = new Control(null, Validators.required);\n          var g = new ControlGroup({\"one\": one});\n          expect(g.valid).toEqual(false);\n          expect(g.errors).toEqual({\"required\": [one]});\n        });\n        it(\"should run the validator with the value changes\", () => {\n          var c = new Control(null, Validators.required);\n          var g = new ControlGroup({\"one\": c});\n          c.updateValue(\"some value\");\n          expect(g.valid).toEqual(true);\n          expect(g.errors).toEqual(null);\n        });\n      });\n      describe(\"pristine\", () => {\n        it(\"should be true after creating a control\", () => {\n          var c = new Control('value');\n          var g = new ControlGroup({\"one\": c});\n          expect(g.pristine).toEqual(true);\n        });\n        it(\"should be false after changing the value of the control\", () => {\n          var c = new Control('value');\n          var g = new ControlGroup({\"one\": c});\n          c.updateValue('new value');\n          expect(g.pristine).toEqual(false);\n        });\n      });\n      describe(\"optional components\", () => {\n        describe(\"contains\", () => {\n          var group;\n          beforeEach(() => {\n            group = new ControlGroup({\n              \"required\": new Control(\"requiredValue\"),\n              \"optional\": new Control(\"optionalValue\")\n            }, {\"optional\": false});\n          });\n          it(\"should return false when the component is not included\", () => {\n            expect(group.contains(\"optional\")).toEqual(false);\n          });\n          it(\"should return false when there is no component with the given name\", () => {\n            expect(group.contains(\"something else\")).toEqual(false);\n          });\n          it(\"should return true when the component is included\", () => {\n            expect(group.contains(\"required\")).toEqual(true);\n            group.include(\"optional\");\n            expect(group.contains(\"optional\")).toEqual(true);\n          });\n        });\n        it(\"should not include an inactive component into the group value\", () => {\n          var group = new ControlGroup({\n            \"required\": new Control(\"requiredValue\"),\n            \"optional\": new Control(\"optionalValue\")\n          }, {\"optional\": false});\n          expect(group.value).toEqual({\"required\": \"requiredValue\"});\n          group.include(\"optional\");\n          expect(group.value).toEqual({\n            \"required\": \"requiredValue\",\n            \"optional\": \"optionalValue\"\n          });\n        });\n        it(\"should not run Validators on an inactive component\", () => {\n          var group = new ControlGroup({\n            \"required\": new Control(\"requiredValue\", Validators.required),\n            \"optional\": new Control(\"\", Validators.required)\n          }, {\"optional\": false});\n          expect(group.valid).toEqual(true);\n          group.include(\"optional\");\n          expect(group.valid).toEqual(false);\n        });\n        describe(\"valueChanges\", () => {\n          var g,\n              c1,\n              c2;\n          beforeEach(() => {\n            c1 = new Control(\"old1\");\n            c2 = new Control(\"old2\");\n            g = new ControlGroup({\n              \"one\": c1,\n              \"two\": c2\n            }, {\"two\": true});\n          });\n          it(\"should fire an event after the value has been updated\", inject([AsyncTestCompleter], (async) => {\n            ObservableWrapper.subscribe(g.valueChanges, (value) => {\n              expect(g.value).toEqual({\n                'one': 'new1',\n                'two': 'old2'\n              });\n              expect(value).toEqual({\n                'one': 'new1',\n                'two': 'old2'\n              });\n              async.done();\n            });\n            c1.updateValue(\"new1\");\n          }));\n          it(\"should fire an event after the control's observable fired an event\", inject([AsyncTestCompleter], (async) => {\n            var controlCallbackIsCalled = false;\n            ObservableWrapper.subscribe(c1.valueChanges, (value) => {\n              controlCallbackIsCalled = true;\n            });\n            ObservableWrapper.subscribe(g.valueChanges, (value) => {\n              expect(controlCallbackIsCalled).toBe(true);\n              async.done();\n            });\n            c1.updateValue(\"new1\");\n          }));\n          it(\"should fire an event when a control is excluded\", inject([AsyncTestCompleter], (async) => {\n            ObservableWrapper.subscribe(g.valueChanges, (value) => {\n              expect(value).toEqual({'one': 'old1'});\n              async.done();\n            });\n            g.exclude(\"two\");\n          }));\n          it(\"should fire an event when a control is included\", inject([AsyncTestCompleter], (async) => {\n            g.exclude(\"two\");\n            ObservableWrapper.subscribe(g.valueChanges, (value) => {\n              expect(value).toEqual({\n                'one': 'old1',\n                'two': 'old2'\n              });\n              async.done();\n            });\n            g.include(\"two\");\n          }));\n          it(\"should fire an event every time a control is updated\", inject([AsyncTestCompleter], (async) => {\n            var loggedValues = [];\n            ObservableWrapper.subscribe(g.valueChanges, (value) => {\n              ListWrapper.push(loggedValues, value);\n              if (loggedValues.length == 2) {\n                expect(loggedValues).toEqual([{\n                  \"one\": \"new1\",\n                  \"two\": \"old2\"\n                }, {\n                  \"one\": \"new1\",\n                  \"two\": \"new2\"\n                }]);\n                async.done();\n              }\n            });\n            c1.updateValue(\"new1\");\n            c2.updateValue(\"new2\");\n          }));\n          xit(\"should not fire an event when an excluded control is updated\", inject([AsyncTestCompleter], (async) => {}));\n        });\n      });\n      describe(\"ControlArray\", () => {\n        describe(\"adding/removing\", () => {\n          var a;\n          var c1,\n              c2,\n              c3;\n          beforeEach(() => {\n            a = new ControlArray([]);\n            c1 = new Control(1);\n            c2 = new Control(2);\n            c3 = new Control(3);\n          });\n          it(\"should support pushing\", () => {\n            a.push(c1);\n            expect(a.length).toEqual(1);\n            expect(a.controls).toEqual([c1]);\n          });\n          it(\"should support removing\", () => {\n            a.push(c1);\n            a.push(c2);\n            a.push(c3);\n            a.removeAt(1);\n            expect(a.controls).toEqual([c1, c3]);\n          });\n          it(\"should support inserting\", () => {\n            a.push(c1);\n            a.push(c3);\n            a.insert(1, c2);\n            expect(a.controls).toEqual([c1, c2, c3]);\n          });\n        });\n        describe(\"value\", () => {\n          it(\"should be the reduced value of the child controls\", () => {\n            var a = new ControlArray([new Control(1), new Control(2)]);\n            expect(a.value).toEqual([1, 2]);\n          });\n          it(\"should be an empty array when there are no child controls\", () => {\n            var a = new ControlArray([]);\n            expect(a.value).toEqual([]);\n          });\n        });\n        describe(\"validator\", () => {\n          it(\"should run the validator with the initial value (valid)\", () => {\n            var a = new ControlArray([new Control(1, Validators.required), new Control(2, Validators.required)]);\n            expect(a.valid).toBe(true);\n            expect(a.errors).toBe(null);\n          });\n          it(\"should run the validator with the initial value (invalid)\", () => {\n            var a = new ControlArray([new Control(1, Validators.required), new Control(null, Validators.required), new Control(2, Validators.required)]);\n            expect(a.valid).toBe(false);\n            expect(a.errors).toEqual({\"required\": [a.controls[1]]});\n          });\n          it(\"should run the validator when the value changes\", () => {\n            var a = new ControlArray([]);\n            var c = new Control(null, Validators.required);\n            a.push(c);\n            expect(a.valid).toBe(false);\n            c.updateValue(\"some value\");\n            expect(a.valid).toBe(true);\n            expect(a.errors).toBe(null);\n          });\n        });\n        describe(\"pristine\", () => {\n          it(\"should be true after creating a control\", () => {\n            var a = new ControlArray([new Control(1)]);\n            expect(a.pristine).toBe(true);\n          });\n          it(\"should be false after changing the value of the control\", () => {\n            var c = new Control(1);\n            var a = new ControlArray([c]);\n            c.updateValue('new value');\n            expect(a.pristine).toEqual(false);\n          });\n        });\n        describe(\"valueChanges\", () => {\n          var a,\n              c1,\n              c2;\n          beforeEach(() => {\n            c1 = new Control(\"old1\");\n            c2 = new Control(\"old2\");\n            a = new ControlArray([c1, c2]);\n          });\n          it(\"should fire an event after the value has been updated\", inject([AsyncTestCompleter], (async) => {\n            ObservableWrapper.subscribe(a.valueChanges, (value) => {\n              expect(a.value).toEqual(['new1', 'old2']);\n              expect(value).toEqual(['new1', 'old2']);\n              async.done();\n            });\n            c1.updateValue(\"new1\");\n          }));\n          it(\"should fire an event after the control's observable fired an event\", inject([AsyncTestCompleter], (async) => {\n            var controlCallbackIsCalled = false;\n            ObservableWrapper.subscribe(c1.valueChanges, (value) => {\n              controlCallbackIsCalled = true;\n            });\n            ObservableWrapper.subscribe(a.valueChanges, (value) => {\n              expect(controlCallbackIsCalled).toBe(true);\n              async.done();\n            });\n            c1.updateValue(\"new1\");\n          }));\n          it(\"should fire an event when a control is removed\", inject([AsyncTestCompleter], (async) => {\n            ObservableWrapper.subscribe(a.valueChanges, (value) => {\n              expect(value).toEqual(['old1']);\n              async.done();\n            });\n            a.removeAt(1);\n          }));\n          it(\"should fire an event when a control is added\", inject([AsyncTestCompleter], (async) => {\n            a.removeAt(1);\n            ObservableWrapper.subscribe(a.valueChanges, (value) => {\n              expect(value).toEqual(['old1', 'old2']);\n              async.done();\n            });\n            a.push(c2);\n          }));\n        });\n      });\n    });\n  });\n}\n//# sourceMappingURL=model_spec.js.map\n\n//# sourceMappingURL=./model_spec.map"]}