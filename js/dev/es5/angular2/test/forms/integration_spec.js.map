{"version":3,"sources":["integration_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/forms/integration_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  dispatchEvent,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Inject} from 'angular2/di';\nimport {Component,\n  Decorator,\n  View,\n  PropertySetter} from 'angular2/angular2';\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\nimport {ControlGroupDirective,\n  ControlDirective,\n  Control,\n  ControlGroup,\n  OptionalControl,\n  ControlValueAccessor,\n  RequiredValidatorDirective,\n  CheckboxControlValueAccessor,\n  DefaultValueAccessor,\n  Validators} from 'angular2/forms';\nexport function main() {\n  describe(\"integration tests\", () => {\n    if (DOM.supportsDOMEvents()) {\n      it(\"should initialize DOM elements with the given form object\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var ctx = new MyComp(new ControlGroup({\"login\": new Control(\"loginValue\")}));\n        var t = `<div [control-group]=\"form\">\n                <input type=\"text\" control=\"login\">\n              </div>`;\n        tb.createView(MyComp, {\n          context: ctx,\n          html: t\n        }).then((view) => {\n          view.detectChanges();\n          var input = view.querySelector(\"input\");\n          expect(input.value).toEqual(\"loginValue\");\n          async.done();\n        });\n      }));\n      it(\"should update the control group values on DOM change\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var form = new ControlGroup({\"login\": new Control(\"oldValue\")});\n        var ctx = new MyComp(form);\n        var t = `<div [control-group]=\"form\">\n                  <input type=\"text\" control=\"login\">\n                </div>`;\n        tb.createView(MyComp, {\n          context: ctx,\n          html: t\n        }).then((view) => {\n          view.detectChanges();\n          var input = view.querySelector(\"input\");\n          input.value = \"updatedValue\";\n          dispatchEvent(input, \"change\");\n          expect(form.value).toEqual({\"login\": \"updatedValue\"});\n          async.done();\n        });\n      }));\n      it(\"should work with single controls\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var control = new Control(\"loginValue\");\n        var ctx = new MyComp(control);\n        var t = `<div><input type=\"text\" [control]=\"form\"></div>`;\n        tb.createView(MyComp, {\n          context: ctx,\n          html: t\n        }).then((view) => {\n          view.detectChanges();\n          var input = view.querySelector(\"input\");\n          expect(input.value).toEqual(\"loginValue\");\n          input.value = \"updatedValue\";\n          dispatchEvent(input, \"change\");\n          expect(control.value).toEqual(\"updatedValue\");\n          async.done();\n        });\n      }));\n      it(\"should update DOM elements when rebinding the control group\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var form = new ControlGroup({\"login\": new Control(\"oldValue\")});\n        var ctx = new MyComp(form);\n        var t = `<div [control-group]=\"form\">\n                <input type=\"text\" control=\"login\">\n              </div>`;\n        tb.createView(MyComp, {\n          context: ctx,\n          html: t\n        }).then((view) => {\n          view.detectChanges();\n          ctx.form = new ControlGroup({\"login\": new Control(\"newValue\")});\n          view.detectChanges();\n          var input = view.querySelector(\"input\");\n          expect(input.value).toEqual(\"newValue\");\n          async.done();\n        });\n      }));\n      it(\"should update DOM element when rebinding the control name\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var ctx = new MyComp(new ControlGroup({\n          \"one\": new Control(\"one\"),\n          \"two\": new Control(\"two\")\n        }), \"one\");\n        var t = `<div [control-group]=\"form\">\n                <input type=\"text\" [control]=\"name\">\n              </div>`;\n        tb.createView(MyComp, {\n          context: ctx,\n          html: t\n        }).then((view) => {\n          view.detectChanges();\n          var input = view.querySelector(\"input\");\n          expect(input.value).toEqual(\"one\");\n          ctx.name = \"two\";\n          view.detectChanges();\n          expect(input.value).toEqual(\"two\");\n          async.done();\n        });\n      }));\n      describe(\"different control types\", () => {\n        it(\"should support <input type=text>\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var ctx = new MyComp(new ControlGroup({\"text\": new Control(\"old\")}));\n          var t = `<div [control-group]=\"form\">\n                    <input type=\"text\" control=\"text\">\n                  </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var input = view.querySelector(\"input\");\n            expect(input.value).toEqual(\"old\");\n            input.value = \"new\";\n            dispatchEvent(input, \"input\");\n            expect(ctx.form.value).toEqual({\"text\": \"new\"});\n            async.done();\n          });\n        }));\n        it(\"should support <input> without type\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var ctx = new MyComp(new ControlGroup({\"text\": new Control(\"old\")}));\n          var t = `<div [control-group]=\"form\">\n                    <input control=\"text\">\n                  </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var input = view.querySelector(\"input\");\n            expect(input.value).toEqual(\"old\");\n            input.value = \"new\";\n            dispatchEvent(input, \"input\");\n            expect(ctx.form.value).toEqual({\"text\": \"new\"});\n            async.done();\n          });\n        }));\n        it(\"should support <textarea>\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var ctx = new MyComp(new ControlGroup({\"text\": new Control('old')}));\n          var t = `<div [control-group]=\"form\">\n                    <textarea control=\"text\"></textarea>\n                  </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var textarea = view.querySelector(\"textarea\");\n            expect(textarea.value).toEqual(\"old\");\n            textarea.value = \"new\";\n            dispatchEvent(textarea, \"input\");\n            expect(ctx.form.value).toEqual({\"text\": 'new'});\n            async.done();\n          });\n        }));\n        it(\"should support <type=checkbox>\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var ctx = new MyComp(new ControlGroup({\"checkbox\": new Control(true)}));\n          var t = `<div [control-group]=\"form\">\n                    <input type=\"checkbox\" control=\"checkbox\">\n                  </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var input = view.querySelector(\"input\");\n            expect(input.checked).toBe(true);\n            input.checked = false;\n            dispatchEvent(input, \"change\");\n            expect(ctx.form.value).toEqual({\"checkbox\": false});\n            async.done();\n          });\n        }));\n        it(\"should support <select>\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var ctx = new MyComp(new ControlGroup({\"city\": new Control(\"SF\")}));\n          var t = `<div [control-group]=\"form\">\n                      <select control=\"city\">\n                        <option value=\"SF\"></option>\n                        <option value=\"NYC\"></option>\n                      </select>\n                    </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var select = view.querySelector(\"select\");\n            var sfOption = view.querySelector(\"option\");\n            expect(select.value).toEqual('SF');\n            expect(sfOption.selected).toBe(true);\n            select.value = 'NYC';\n            dispatchEvent(select, \"change\");\n            expect(ctx.form.value).toEqual({\"city\": 'NYC'});\n            expect(sfOption.selected).toBe(false);\n            async.done();\n          });\n        }));\n        it(\"should support custom value accessors\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var ctx = new MyComp(new ControlGroup({\"name\": new Control(\"aa\")}));\n          var t = `<div [control-group]=\"form\">\n                    <input type=\"text\" control=\"name\" wrapped-value>\n                  </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var input = view.querySelector(\"input\");\n            expect(input.value).toEqual(\"!aa!\");\n            input.value = \"!bb!\";\n            dispatchEvent(input, \"change\");\n            expect(ctx.form.value).toEqual({\"name\": \"bb\"});\n            async.done();\n          });\n        }));\n      });\n      describe(\"validations\", () => {\n        it(\"should use validators defined in html\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var form = new ControlGroup({\"login\": new Control(\"aa\")});\n          var ctx = new MyComp(form);\n          var t = `<div [control-group]=\"form\">\n                    <input type=\"text\" control=\"login\" required>\n                   </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            expect(form.valid).toEqual(true);\n            var input = view.querySelector(\"input\");\n            input.value = \"\";\n            dispatchEvent(input, \"change\");\n            expect(form.valid).toEqual(false);\n            async.done();\n          });\n        }));\n        it(\"should use validators defined in the model\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var form = new ControlGroup({\"login\": new Control(\"aa\", Validators.required)});\n          var ctx = new MyComp(form);\n          var t = `<div [control-group]=\"form\">\n                    <input type=\"text\" control=\"login\">\n                   </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            expect(form.valid).toEqual(true);\n            var input = view.querySelector(\"input\");\n            input.value = \"\";\n            dispatchEvent(input, \"change\");\n            expect(form.valid).toEqual(false);\n            async.done();\n          });\n        }));\n      });\n      describe(\"nested forms\", () => {\n        it(\"should init DOM with the given form object\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var form = new ControlGroup({\"nested\": new ControlGroup({\"login\": new Control(\"value\")})});\n          var ctx = new MyComp(form);\n          var t = `<div [control-group]=\"form\">\n                    <div control-group=\"nested\">\n                      <input type=\"text\" control=\"login\">\n                    </div>\n                </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var input = view.querySelector(\"input\");\n            expect(input.value).toEqual(\"value\");\n            async.done();\n          });\n        }));\n        it(\"should update the control group values on DOM change\", inject([TestBed, AsyncTestCompleter], (tb, async) => {\n          var form = new ControlGroup({\"nested\": new ControlGroup({\"login\": new Control(\"value\")})});\n          var ctx = new MyComp(form);\n          var t = `<div [control-group]=\"form\">\n                      <div control-group=\"nested\">\n                        <input type=\"text\" control=\"login\">\n                      </div>\n                  </div>`;\n          tb.createView(MyComp, {\n            context: ctx,\n            html: t\n          }).then((view) => {\n            view.detectChanges();\n            var input = view.querySelector(\"input\");\n            input.value = \"updatedValue\";\n            dispatchEvent(input, \"change\");\n            expect(form.value).toEqual({\"nested\": {\"login\": \"updatedValue\"}});\n            async.done();\n          });\n        }));\n      });\n    }\n  });\n}\nclass MyComp {\n  constructor(form = null, name = null) {\n    this.form = form;\n    this.name = name;\n  }\n}\nObject.defineProperty(MyComp, \"annotations\", {get: function() {\n    return [new Component({selector: \"my-comp\"}), new View({directives: [ControlGroupDirective, ControlDirective, WrappedValue, RequiredValidatorDirective, CheckboxControlValueAccessor, DefaultValueAccessor]})];\n  }});\nObject.defineProperty(MyComp, \"parameters\", {get: function() {\n    return [[new Inject('form')], [new Inject('name')]];\n  }});\nclass WrappedValue {\n  constructor(cd, setProperty) {\n    assert.argumentTypes(cd, ControlDirective, setProperty, Function);\n    this._setProperty = setProperty;\n    cd.valueAccessor = this;\n  }\n  writeValue(value) {\n    this._setProperty(`!${value}!`);\n  }\n  handleOnChange(value) {\n    this.onChange(value.substring(1, value.length - 1));\n  }\n}\nObject.defineProperty(WrappedValue, \"annotations\", {get: function() {\n    return [new Decorator({\n      selector: '[wrapped-value]',\n      hostListeners: {'change': 'handleOnChange($event.target.value)'}\n    })];\n  }});\nObject.defineProperty(WrappedValue, \"parameters\", {get: function() {\n    return [[ControlDirective], [Function, new PropertySetter('value')]];\n  }});\n//# sourceMappingURL=integration_spec.js.map\n\n//# sourceMappingURL=./integration_spec.map"]}