{"version":3,"sources":["change_detection_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/change_detection/change_detection_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ddescribe,\n  describe,\n  it,\n  iit,\n  xit,\n  expect,\n  beforeEach,\n  afterEach,\n  IS_DARTIUM} from 'angular2/test_lib';\nimport {isPresent,\n  isBlank,\n  isJsObject,\n  BaseException,\n  FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {Parser} from 'angular2/src/change_detection/parser/parser';\nimport {Lexer} from 'angular2/src/change_detection/parser/lexer';\nimport {Locals} from 'angular2/src/change_detection/parser/locals';\nimport {ChangeDispatcher,\n  DynamicChangeDetector,\n  ChangeDetectionError,\n  BindingRecord,\n  DirectiveRecord,\n  PipeRegistry,\n  Pipe,\n  NO_CHANGE,\n  CHECK_ALWAYS,\n  CHECK_ONCE,\n  CHECKED,\n  DETACHED,\n  ON_PUSH,\n  DEFAULT} from 'angular2/change_detection';\nimport {JitProtoChangeDetector,\n  DynamicProtoChangeDetector} from 'angular2/src/change_detection/proto_change_detector';\nexport function main() {\n  describe(\"change detection\", () => {\n    StringMapWrapper.forEach({\n      \"dynamic\": (registry = null, strategy = null) => new DynamicProtoChangeDetector(registry, strategy),\n      \"JIT\": (registry = null, strategy = null) => new JitProtoChangeDetector(registry, strategy)\n    }, (createProtoChangeDetector, name) => {\n      if (name == \"JIT\" && IS_DARTIUM)\n        return ;\n      function ast(exp, location = 'location') {\n        assert.argumentTypes(exp, assert.type.string, location, assert.type.string);\n        var parser = new Parser(new Lexer());\n        return parser.parseBinding(exp, location);\n      }\n      Object.defineProperty(ast, \"parameters\", {get: function() {\n          return [[assert.type.string], [assert.type.string]];\n        }});\n      function dirs(directives) {\n        assert.argumentTypes(directives, List);\n        return new FakeDirectives(directives);\n      }\n      Object.defineProperty(dirs, \"parameters\", {get: function() {\n          return [[List]];\n        }});\n      function convertLocalsToVariableBindings(locals) {\n        var variableBindings = [];\n        var loc = locals;\n        while (isPresent(loc)) {\n          MapWrapper.forEach(loc.current, (v, k) => ListWrapper.push(variableBindings, k));\n          loc = loc.parent;\n        }\n        return variableBindings;\n      }\n      function createChangeDetector(propName, exp, context = null, locals = null, registry = null) {\n        assert.argumentTypes(propName, assert.type.string, exp, assert.type.string, context, assert.type.any, locals, assert.type.any, registry, assert.type.any);\n        var pcd = createProtoChangeDetector(registry);\n        var dispatcher = new TestDispatcher();\n        var variableBindings = convertLocalsToVariableBindings(locals);\n        var records = [BindingRecord.createForElement(ast(exp), 0, propName)];\n        var cd = pcd.instantiate(dispatcher, records, variableBindings, []);\n        cd.hydrate(context, locals, null);\n        return {\n          \"changeDetector\": cd,\n          \"dispatcher\": dispatcher\n        };\n      }\n      Object.defineProperty(createChangeDetector, \"parameters\", {get: function() {\n          return [[assert.type.string], [assert.type.string], [], [], []];\n        }});\n      function executeWatch(memo, exp, context = null, locals = null) {\n        assert.argumentTypes(memo, assert.type.string, exp, assert.type.string, context, assert.type.any, locals, assert.type.any);\n        var res = createChangeDetector(memo, exp, context, locals);\n        res[\"changeDetector\"].detectChanges();\n        return res[\"dispatcher\"].log;\n      }\n      Object.defineProperty(executeWatch, \"parameters\", {get: function() {\n          return [[assert.type.string], [assert.type.string], [], []];\n        }});\n      function instantiate(protoChangeDetector, dispatcher, bindings, directiveRecords = null) {\n        if (isBlank(directiveRecords))\n          directiveRecords = [];\n        return protoChangeDetector.instantiate(dispatcher, bindings, null, directiveRecords);\n      }\n      describe(`${name} change detection`, () => {\n        var dispatcher;\n        beforeEach(() => {\n          dispatcher = new TestDispatcher();\n        });\n        it('should do simple watching', () => {\n          var person = new Person(\"misko\");\n          var c = createChangeDetector('name', 'name', person);\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual(['name=misko']);\n          dispatcher.clear();\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([]);\n          dispatcher.clear();\n          person.name = \"Misko\";\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual(['name=Misko']);\n        });\n        it('should report all changes on the first run including uninitialized values', () => {\n          expect(executeWatch('value', 'value', new Uninitialized())).toEqual(['value=null']);\n        });\n        it('should report all changes on the first run including null values', () => {\n          var td = new TestData(null);\n          expect(executeWatch('a', 'a', td)).toEqual(['a=null']);\n        });\n        it(\"should support literals\", () => {\n          expect(executeWatch('const', '10')).toEqual(['const=10']);\n          expect(executeWatch('const', '\"str\"')).toEqual(['const=str']);\n          expect(executeWatch('const', '\"a\\n\\nb\"')).toEqual(['const=a\\n\\nb']);\n        });\n        it('simple chained property access', () => {\n          var address = new Address('Grenoble');\n          var person = new Person('Victor', address);\n          expect(executeWatch('address.city', 'address.city', person)).toEqual(['address.city=Grenoble']);\n        });\n        it(\"should support method calls\", () => {\n          var person = new Person('Victor');\n          expect(executeWatch('m', 'sayHi(\"Jim\")', person)).toEqual(['m=Hi, Jim']);\n        });\n        it(\"should support function calls\", () => {\n          var td = new TestData(() => (a) => a);\n          expect(executeWatch('value', 'a()(99)', td)).toEqual(['value=99']);\n        });\n        it(\"should support chained method calls\", () => {\n          var person = new Person('Victor');\n          var td = new TestData(person);\n          expect(executeWatch('m', 'a.sayHi(\"Jim\")', td)).toEqual(['m=Hi, Jim']);\n        });\n        it(\"should support literal array\", () => {\n          var c = createChangeDetector('array', '[1,2]');\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues).toEqual([[1, 2]]);\n          c = createChangeDetector('array', '[1,a]', new TestData(2));\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues).toEqual([[1, 2]]);\n        });\n        it(\"should support literal maps\", () => {\n          var c = createChangeDetector('map', '{z:1}');\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues[0]['z']).toEqual(1);\n          c = createChangeDetector('map', '{z:a}', new TestData(1));\n          c[\"changeDetector\"].detectChanges();\n          expect(c[\"dispatcher\"].loggedValues[0]['z']).toEqual(1);\n        });\n        it(\"should support binary operations\", () => {\n          expect(executeWatch('exp', '10 + 2')).toEqual(['exp=12']);\n          expect(executeWatch('exp', '10 - 2')).toEqual(['exp=8']);\n          expect(executeWatch('exp', '10 * 2')).toEqual(['exp=20']);\n          expect(executeWatch('exp', '10 / 2')).toEqual([`exp=${5.0}`]);\n          expect(executeWatch('exp', '11 % 2')).toEqual(['exp=1']);\n          expect(executeWatch('exp', '1 == 1')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '1 != 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '1 < 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '2 > 1')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 < 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '1 <= 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 <= 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 <= 1')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '2 >= 1')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '2 >= 2')).toEqual(['exp=true']);\n          expect(executeWatch('exp', '1 >= 2')).toEqual(['exp=false']);\n          expect(executeWatch('exp', 'true && true')).toEqual(['exp=true']);\n          expect(executeWatch('exp', 'true && false')).toEqual(['exp=false']);\n          expect(executeWatch('exp', 'true || false')).toEqual(['exp=true']);\n          expect(executeWatch('exp', 'false || false')).toEqual(['exp=false']);\n        });\n        it(\"should support negate\", () => {\n          expect(executeWatch('exp', '!true')).toEqual(['exp=false']);\n          expect(executeWatch('exp', '!!true')).toEqual(['exp=true']);\n        });\n        it(\"should support conditionals\", () => {\n          expect(executeWatch('m', '1 < 2 ? 1 : 2')).toEqual(['m=1']);\n          expect(executeWatch('m', '1 > 2 ? 1 : 2')).toEqual(['m=2']);\n        });\n        describe(\"keyed access\", () => {\n          it(\"should support accessing a list item\", () => {\n            expect(executeWatch('array[0]', '[\"foo\", \"bar\"][0]')).toEqual(['array[0]=foo']);\n          });\n          it(\"should support accessing a map item\", () => {\n            expect(executeWatch('map[foo]', '{\"foo\": \"bar\"}[\"foo\"]')).toEqual(['map[foo]=bar']);\n          });\n        });\n        it(\"should support interpolation\", () => {\n          var parser = new Parser(new Lexer());\n          var pcd = createProtoChangeDetector();\n          var ast = parser.parseInterpolation(\"B{{a}}A\", \"location\");\n          var cd = instantiate(pcd, dispatcher, [BindingRecord.createForElement(ast, 0, \"memo\")]);\n          cd.hydrate(new TestData(\"value\"), null, null);\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([\"memo=BvalueA\"]);\n        });\n        describe(\"change notification\", () => {\n          describe(\"simple checks\", () => {\n            it(\"should pass a change record to the dispatcher\", () => {\n              var person = new Person('bob');\n              var c = createChangeDetector('name', 'name', person);\n              var cd = c[\"changeDetector\"];\n              var dispatcher = c[\"dispatcher\"];\n              cd.detectChanges();\n              expect(dispatcher.loggedValues).toEqual(['bob']);\n            });\n          });\n          describe(\"pipes\", () => {\n            it(\"should pass a change record to the dispatcher\", () => {\n              var registry = new FakePipeRegistry('pipe', () => new CountingPipe());\n              var person = new Person('bob');\n              var c = createChangeDetector('name', 'name | pipe', person, null, registry);\n              var cd = c[\"changeDetector\"];\n              var dispatcher = c[\"dispatcher\"];\n              cd.detectChanges();\n              expect(dispatcher.loggedValues).toEqual(['bob state:0']);\n            });\n          });\n          describe(\"updating directives\", () => {\n            var dirRecord1 = new DirectiveRecord(0, 0, true, true);\n            var dirRecord2 = new DirectiveRecord(0, 1, true, true);\n            var dirRecordNoCallbacks = new DirectiveRecord(0, 0, false, false);\n            function updateA(exp, dirRecord) {\n              return BindingRecord.createForDirective(ast(exp), \"a\", (o, v) => o.a = v, dirRecord);\n            }\n            Object.defineProperty(updateA, \"parameters\", {get: function() {\n                return [[assert.type.string], []];\n              }});\n            function updateB(exp, dirRecord) {\n              return BindingRecord.createForDirective(ast(exp), \"b\", (o, v) => o.b = v, dirRecord);\n            }\n            Object.defineProperty(updateB, \"parameters\", {get: function() {\n                return [[assert.type.string], []];\n              }});\n            var directive1;\n            var directive2;\n            beforeEach(() => {\n              directive1 = new TestDirective();\n              directive2 = new TestDirective();\n            });\n            it(\"should happen directly, without invoking the dispatcher\", () => {\n              var pcd = createProtoChangeDetector();\n              var cd = instantiate(pcd, dispatcher, [updateA(\"42\", dirRecord1)], [dirRecord1]);\n              cd.hydrate(null, null, dirs([directive1]));\n              cd.detectChanges();\n              expect(dispatcher.loggedValues).toEqual([]);\n              expect(directive1.a).toEqual(42);\n            });\n            describe(\"onChange\", () => {\n              it(\"should notify the directive when a group of records changes\", () => {\n                var pcd = createProtoChangeDetector();\n                var cd = instantiate(pcd, dispatcher, [updateA(\"1\", dirRecord1), updateB(\"2\", dirRecord1), updateA(\"3\", dirRecord2)], [dirRecord1, dirRecord2]);\n                cd.hydrate(null, null, dirs([directive1, directive2]));\n                cd.detectChanges();\n                expect(directive1.changes).toEqual({\n                  'a': 1,\n                  'b': 2\n                });\n                expect(directive2.changes).toEqual({'a': 3});\n              });\n              it(\"should not call onChange when callOnChange is false\", () => {\n                var pcd = createProtoChangeDetector();\n                var cd = instantiate(pcd, dispatcher, [updateA(\"1\", dirRecordNoCallbacks)], [dirRecordNoCallbacks]);\n                cd.hydrate(null, null, dirs([directive1]));\n                cd.detectChanges();\n                expect(directive1.changes).toEqual(null);\n              });\n            });\n            describe(\"onAllChangesDone\", () => {\n              it(\"should be called after processing all the children\", () => {\n                var pcd = createProtoChangeDetector();\n                var cd = instantiate(pcd, dispatcher, [], [dirRecord1, dirRecord2]);\n                cd.hydrate(null, null, dirs([directive1, directive2]));\n                cd.detectChanges();\n                expect(directive1.onChangesDoneCalled).toBe(true);\n                expect(directive2.onChangesDoneCalled).toBe(true);\n              });\n              it(\"should not be called when onAllChangesDone is false\", () => {\n                var pcd = createProtoChangeDetector();\n                var cd = instantiate(pcd, dispatcher, [updateA(\"1\", dirRecordNoCallbacks)], [dirRecordNoCallbacks]);\n                cd.hydrate(null, null, dirs([directive1]));\n                cd.detectChanges();\n                expect(directive1.onChangesDoneCalled).toEqual(false);\n              });\n              it(\"should be called in reverse order so the child is always notified before the parent\", () => {\n                var pcd = createProtoChangeDetector();\n                var cd = instantiate(pcd, dispatcher, [], [dirRecord1, dirRecord2]);\n                var onChangesDoneCalls = [];\n                var td1;\n                td1 = new TestDirective(() => ListWrapper.push(onChangesDoneCalls, td1));\n                var td2;\n                td2 = new TestDirective(() => ListWrapper.push(onChangesDoneCalls, td2));\n                cd.hydrate(null, null, dirs([td1, td2]));\n                cd.detectChanges();\n                expect(onChangesDoneCalls).toEqual([td2, td1]);\n              });\n              it(\"should be called before processing shadow dom children\", () => {\n                var pcd = createProtoChangeDetector();\n                var shadowDomChildPCD = createProtoChangeDetector();\n                var parent = pcd.instantiate(dispatcher, [], null, [dirRecord1]);\n                var child = shadowDomChildPCD.instantiate(dispatcher, [updateA(\"1\", dirRecord1)], null, [dirRecord1]);\n                parent.addShadowDomChild(child);\n                var directiveInShadowDom = new TestDirective();\n                var parentDirective = new TestDirective(() => {\n                  expect(directiveInShadowDom.a).toBe(null);\n                });\n                parent.hydrate(null, null, dirs([parentDirective]));\n                child.hydrate(null, null, dirs([directiveInShadowDom]));\n                parent.detectChanges();\n              });\n            });\n          });\n        });\n        describe(\"enforce no new changes\", () => {\n          it(\"should throw when a record gets changed after it has been checked\", () => {\n            var pcd = createProtoChangeDetector();\n            var dispatcher = new TestDispatcher();\n            var cd = instantiate(pcd, dispatcher, [BindingRecord.createForElement(ast(\"a\"), 0, \"a\")]);\n            cd.hydrate(new TestData('value'), null, null);\n            expect(() => {\n              cd.checkNoChanges();\n            }).toThrowError(new RegExp(\"Expression 'a in location' has changed after it was checked\"));\n          });\n        });\n        describe(\"error handling\", () => {\n          xit(\"should wrap exceptions into ChangeDetectionError\", () => {\n            var pcd = createProtoChangeDetector();\n            var cd = pcd.instantiate(new TestDispatcher(), [BindingRecord.createForElement(ast(\"invalidProp\"), 0, \"a\")], null, []);\n            cd.hydrate(null, null);\n            try {\n              cd.detectChanges();\n              throw new BaseException(\"fail\");\n            } catch (e) {\n              expect(e).toBeAnInstanceOf(ChangeDetectionError);\n              expect(e.location).toEqual(\"invalidProp in someComponent\");\n            }\n          });\n        });\n        describe(\"Locals\", () => {\n          it('should read a value from locals', () => {\n            var locals = new Locals(null, MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n            expect(executeWatch('key', 'key', null, locals)).toEqual(['key=value']);\n          });\n          it('should invoke a function from local', () => {\n            var locals = new Locals(null, MapWrapper.createFromPairs([[\"key\", () => \"value\"]]));\n            expect(executeWatch('key', 'key()', null, locals)).toEqual(['key=value']);\n          });\n          it('should handle nested locals', () => {\n            var nested = new Locals(null, MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n            var locals = new Locals(nested, MapWrapper.create());\n            expect(executeWatch('key', 'key', null, locals)).toEqual(['key=value']);\n          });\n          it(\"should fall back to a regular field read when the locals map\" + \"does not have the requested field\", () => {\n            var locals = new Locals(null, MapWrapper.createFromPairs([[\"key\", \"value\"]]));\n            expect(executeWatch('name', 'name', new Person(\"Jim\"), locals)).toEqual(['name=Jim']);\n          });\n        });\n        describe(\"handle children\", () => {\n          var parent,\n              child;\n          beforeEach(() => {\n            var protoParent = createProtoChangeDetector();\n            parent = instantiate(protoParent, null, []);\n            var protoChild = createProtoChangeDetector();\n            child = instantiate(protoChild, null, []);\n          });\n          it(\"should add light dom children\", () => {\n            parent.addChild(child);\n            expect(parent.lightDomChildren.length).toEqual(1);\n            expect(parent.lightDomChildren[0]).toBe(child);\n          });\n          it(\"should add shadow dom children\", () => {\n            parent.addShadowDomChild(child);\n            expect(parent.shadowDomChildren.length).toEqual(1);\n            expect(parent.shadowDomChildren[0]).toBe(child);\n          });\n          it(\"should remove light dom children\", () => {\n            parent.addChild(child);\n            parent.removeChild(child);\n            expect(parent.lightDomChildren).toEqual([]);\n          });\n        });\n      });\n      describe(\"mode\", () => {\n        it(\"should set the mode to CHECK_ALWAYS when the default change detection is used\", () => {\n          var proto = createProtoChangeDetector(null, DEFAULT);\n          var cd = proto.instantiate(null, [], [], []);\n          expect(cd.mode).toEqual(null);\n          cd.hydrate(null, null, null);\n          expect(cd.mode).toEqual(CHECK_ALWAYS);\n        });\n        it(\"should set the mode to CHECK_ONCE when the push change detection is used\", () => {\n          var proto = createProtoChangeDetector(null, ON_PUSH);\n          var cd = proto.instantiate(null, [], [], []);\n          cd.hydrate(null, null, null);\n          expect(cd.mode).toEqual(CHECK_ONCE);\n        });\n        it(\"should not check a detached change detector\", () => {\n          var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.mode = DETACHED;\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([]);\n        });\n        it(\"should not check a checked change detector\", () => {\n          var c = createChangeDetector('name', 'a', new TestData(\"value\"));\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.mode = CHECKED;\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual([]);\n        });\n        it(\"should change CHECK_ONCE to CHECKED\", () => {\n          var cd = instantiate(createProtoChangeDetector(), null, []);\n          cd.mode = CHECK_ONCE;\n          cd.detectChanges();\n          expect(cd.mode).toEqual(CHECKED);\n        });\n        it(\"should not change the CHECK_ALWAYS\", () => {\n          var cd = instantiate(createProtoChangeDetector(), null, []);\n          cd.mode = CHECK_ALWAYS;\n          cd.detectChanges();\n          expect(cd.mode).toEqual(CHECK_ALWAYS);\n        });\n      });\n      describe(\"markPathToRootAsCheckOnce\", () => {\n        function changeDetector(mode, parent) {\n          var cd = instantiate(createProtoChangeDetector(), null, []);\n          cd.mode = mode;\n          if (isPresent(parent))\n            parent.addChild(cd);\n          return cd;\n        }\n        it(\"should mark all checked detectors as CHECK_ONCE \" + \"until reaching a detached one\", () => {\n          var root = changeDetector(CHECK_ALWAYS, null);\n          var disabled = changeDetector(DETACHED, root);\n          var parent = changeDetector(CHECKED, disabled);\n          var checkAlwaysChild = changeDetector(CHECK_ALWAYS, parent);\n          var checkOnceChild = changeDetector(CHECK_ONCE, checkAlwaysChild);\n          var checkedChild = changeDetector(CHECKED, checkOnceChild);\n          checkedChild.markPathToRootAsCheckOnce();\n          expect(root.mode).toEqual(CHECK_ALWAYS);\n          expect(disabled.mode).toEqual(DETACHED);\n          expect(parent.mode).toEqual(CHECK_ONCE);\n          expect(checkAlwaysChild.mode).toEqual(CHECK_ALWAYS);\n          expect(checkOnceChild.mode).toEqual(CHECK_ONCE);\n          expect(checkedChild.mode).toEqual(CHECK_ONCE);\n        });\n      });\n      describe(\"hydration\", () => {\n        it(\"should be able to rehydrate a change detector\", () => {\n          var c = createChangeDetector(\"memo\", \"name\");\n          var cd = c[\"changeDetector\"];\n          cd.hydrate(\"some context\", null, null);\n          expect(cd.hydrated()).toBe(true);\n          cd.dehydrate();\n          expect(cd.hydrated()).toBe(false);\n          cd.hydrate(\"other context\", null, null);\n          expect(cd.hydrated()).toBe(true);\n        });\n        it(\"should destroy all active pipes during dehyration\", () => {\n          var pipe = new OncePipe();\n          var registry = new FakePipeRegistry('pipe', () => pipe);\n          var c = createChangeDetector(\"memo\", \"name | pipe\", new Person('bob'), null, registry);\n          var cd = c[\"changeDetector\"];\n          cd.detectChanges();\n          cd.dehydrate();\n          expect(pipe.destroyCalled).toBe(true);\n        });\n      });\n      describe(\"pipes\", () => {\n        it(\"should support pipes\", () => {\n          var registry = new FakePipeRegistry('pipe', () => new CountingPipe());\n          var ctx = new Person(\"Megatron\");\n          var c = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n          var cd = c[\"changeDetector\"];\n          var dispatcher = c[\"dispatcher\"];\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual(['memo=Megatron state:0']);\n          dispatcher.clear();\n          cd.detectChanges();\n          expect(dispatcher.log).toEqual(['memo=Megatron state:1']);\n        });\n        it(\"should lookup pipes in the registry when the context is not supported\", () => {\n          var registry = new FakePipeRegistry('pipe', () => new OncePipe());\n          var ctx = new Person(\"Megatron\");\n          var c = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n          var cd = c[\"changeDetector\"];\n          cd.detectChanges();\n          expect(registry.numberOfLookups).toEqual(1);\n          ctx.name = \"Optimus Prime\";\n          cd.detectChanges();\n          expect(registry.numberOfLookups).toEqual(2);\n        });\n        it(\"should invoke onDestroy on a pipe before switching to another one\", () => {\n          var pipe = new OncePipe();\n          var registry = new FakePipeRegistry('pipe', () => pipe);\n          var ctx = new Person(\"Megatron\");\n          var c = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n          var cd = c[\"changeDetector\"];\n          cd.detectChanges();\n          ctx.name = \"Optimus Prime\";\n          cd.detectChanges();\n          expect(pipe.destroyCalled).toEqual(true);\n        });\n        it(\"should inject the binding propagation configuration \" + \"of the encompassing component into a pipe\", () => {\n          var registry = new FakePipeRegistry('pipe', () => new IdentityPipe());\n          var c = createChangeDetector(\"memo\", \"name | pipe\", new Person('bob'), null, registry);\n          var cd = c[\"changeDetector\"];\n          cd.detectChanges();\n          expect(registry.bpc).toBe(cd.bindingPropagationConfig);\n        });\n      });\n      it(\"should do nothing when returns NO_CHANGE\", () => {\n        var registry = new FakePipeRegistry('pipe', () => new IdentityPipe());\n        var ctx = new Person(\"Megatron\");\n        var c = createChangeDetector(\"memo\", \"name | pipe\", ctx, null, registry);\n        var cd = c[\"changeDetector\"];\n        var dispatcher = c[\"dispatcher\"];\n        cd.detectChanges();\n        cd.detectChanges();\n        expect(dispatcher.log).toEqual(['memo=Megatron']);\n        ctx.name = \"Optimus Prime\";\n        dispatcher.clear();\n        cd.detectChanges();\n        expect(dispatcher.log).toEqual(['memo=Optimus Prime']);\n      });\n    });\n  });\n}\nclass CountingPipe extends Pipe {\n  constructor() {\n    super();\n    this.state = 0;\n  }\n  supports(newValue) {\n    return true;\n  }\n  transform(value) {\n    return `${value} state:${this.state++}`;\n  }\n}\nclass OncePipe extends Pipe {\n  constructor() {\n    super();\n    this.called = false;\n    this.destroyCalled = false;\n  }\n  supports(newValue) {\n    return !this.called;\n  }\n  onDestroy() {\n    this.destroyCalled = true;\n  }\n  transform(value) {\n    this.called = true;\n    return value;\n  }\n}\nclass IdentityPipe extends Pipe {\n  supports(newValue) {\n    return true;\n  }\n  transform(value) {\n    if (this.state === value) {\n      return NO_CHANGE;\n    } else {\n      this.state = value;\n      return value;\n    }\n  }\n}\nclass FakePipeRegistry extends PipeRegistry {\n  constructor(pipeType, factory) {\n    super({});\n    this.pipeType = pipeType;\n    this.factory = factory;\n    this.numberOfLookups = 0;\n  }\n  get(type, obj, bpc) {\n    assert.argumentTypes(type, assert.type.string, obj, assert.type.any, bpc, assert.type.any);\n    if (type != this.pipeType)\n      return null;\n    this.numberOfLookups++;\n    this.bpc = bpc;\n    return this.factory();\n  }\n}\nObject.defineProperty(FakePipeRegistry.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string], [], []];\n  }});\nclass TestDirective {\n  constructor(onChangesDoneSpy = null) {\n    this.onChangesDoneCalled = false;\n    this.onChangesDoneSpy = onChangesDoneSpy;\n    this.a = null;\n    this.b = null;\n    this.changes = null;\n  }\n  onChange(changes) {\n    var r = {};\n    StringMapWrapper.forEach(changes, (c, key) => r[key] = c.currentValue);\n    this.changes = r;\n  }\n  onAllChangesDone() {\n    this.onChangesDoneCalled = true;\n    if (isPresent(this.onChangesDoneSpy)) {\n      this.onChangesDoneSpy();\n    }\n  }\n}\nclass Person {\n  constructor(name, address = null) {\n    assert.argumentTypes(name, assert.type.string, address, Address);\n    this.name = name;\n    this.address = address;\n  }\n  sayHi(m) {\n    return `Hi, ${m}`;\n  }\n  toString() {\n    var address = this.address == null ? '' : ' address=' + this.address.toString();\n    return assert.returnType(('name=' + this.name + address), assert.type.string);\n  }\n}\nObject.defineProperty(Person, \"parameters\", {get: function() {\n    return [[assert.type.string], [Address]];\n  }});\nclass Address {\n  constructor(city) {\n    assert.argumentTypes(city, assert.type.string);\n    this.city = city;\n  }\n  toString() {\n    return assert.returnType((this.city), assert.type.string);\n  }\n}\nObject.defineProperty(Address, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nclass Uninitialized {}\nclass TestData {\n  constructor(a) {\n    this.a = a;\n  }\n}\nclass FakeDirectives {\n  constructor(directives) {\n    assert.argumentTypes(directives, List);\n    this.directives = directives;\n  }\n  directive(directiveRecord) {\n    assert.argumentTypes(directiveRecord, DirectiveRecord);\n    return this.directives[directiveRecord.directiveIndex];\n  }\n}\nObject.defineProperty(FakeDirectives, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nObject.defineProperty(FakeDirectives.prototype.directive, \"parameters\", {get: function() {\n    return [[DirectiveRecord]];\n  }});\nclass TestDispatcher extends ChangeDispatcher {\n  constructor() {\n    super();\n    this.clear();\n  }\n  clear() {\n    this.log = ListWrapper.create();\n    this.loggedValues = ListWrapper.create();\n  }\n  notifyOnBinding(binding, value) {\n    ListWrapper.push(this.log, `${binding.propertyName}=${this._asString(value)}`);\n    ListWrapper.push(this.loggedValues, value);\n  }\n  _asString(value) {\n    return (isBlank(value) ? 'null' : value.toString());\n  }\n}\n//# sourceMappingURL=change_detection_spec.js.map\n\n//# sourceMappingURL=./change_detection_spec.map"]}