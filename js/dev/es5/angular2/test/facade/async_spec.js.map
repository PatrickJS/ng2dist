{"version":3,"sources":["async_spec.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,oDAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;AAgB7C,SAAS,KAAG,CAAE,AAAD;AAClB,WAAO,AAAC,CAAC,YAAW,GAAG,SAAC,AAAD;AACrB,AAAI,QAAA,CAAA,GAAE,CAAC;AACP,AAAI,QAAA,CAAA,UAAS,CAAC;AACd,eAAS,AAAC,EAAC,SAAC,AAAD,CAAM;AACf,iBAAS,EAAI,CAAA,iBAAgB,iBAAiB,AAAC,EAAC,CAAC;AACjD,UAAE,EAAI,CAAA,iBAAgB,iBAAiB,AAAC,CAAC,UAAS,CAAC,CAAC;MACtD,EAAC,CAAC;AACF,OAAC,AAAC,CAAC,+BAA8B,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,kBAAiB,CAAC,GAAG,SAAC,KAAI;AACpE,wBAAgB,UAAU,AAAC,CAAC,GAAE,GAAG,SAAC,KAAI,CAAM;AAC1C,eAAK,AAAC,CAAC,KAAI,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAC;AACzB,cAAI,KAAK,AAAC,EAAC,CAAC;QACd,EAAC,CAAC;AACF,wBAAgB,SAAS,AAAC,CAAC,UAAS,CAAG,GAAC,CAAC,CAAC;MAC5C,EAAC,CAAC,CAAC;AACH,OAAC,AAAC,CAAC,gCAA+B,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,kBAAiB,CAAC,GAAG,SAAC,KAAI;AACrE,wBAAgB,UAAU,AAAC,CAAC,GAAE,GAAG,SAAC,CAAA,CAAM,GAAC,IAAG,SAAC,KAAI,CAAM;AACrD,eAAK,AAAC,CAAC,KAAI,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;AAC7B,cAAI,KAAK,AAAC,EAAC,CAAC;QACd,EAAC,CAAC;AACF,wBAAgB,UAAU,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC,CAAC;MACjD,EAAC,CAAC,CAAC;AACH,OAAC,AAAC,CAAC,iCAAgC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,kBAAiB,CAAC,GAAG,SAAC,KAAI;AACtE,wBAAgB,UAAU,AAAC,CAAC,GAAE,GAAG,SAAC,CAAA,CAAM,GAAC,IAAG,SAAC,CAAA,CAAM,GAAC,IAAG,SAAC,AAAD,CAAM;AAC3D,cAAI,KAAK,AAAC,EAAC,CAAC;QACd,EAAC,CAAC;AACF,wBAAgB,WAAW,AAAC,CAAC,UAAS,CAAC,CAAC;MAC1C,EAAC,CAAC,CAAC;AACH,OAAC,AAAC,CAAC,gDAA+C,GAAG,SAAC,AAAD;AACnD,AAAI,UAAA,CAAA,MAAK,EAAI,MAAI,CAAC;AAClB,wBAAgB,UAAU,AAAC,CAAC,GAAE,GAAG,SAAC,KAAI,CAAM;AAC1C,eAAK,EAAI,KAAG,CAAC;QACf,EAAC,CAAC;AACF,wBAAgB,SAAS,AAAC,CAAC,UAAS,CAAG,GAAC,CAAC,CAAC;AAC1C,aAAK,AAAC,CAAC,MAAK,CAAC,KAAK,AAAC,CAAC,KAAI,CAAC,CAAC;MAC5B,EAAC,CAAC;AACF,SAAI,CAAC,UAAS,CAAG;AACf,eAAO,AAAC,CAAC,WAAU,GAAG,SAAC,AAAD;AACpB,AAAI,YAAA,CAAA,SAAQ,CAAC;AACb,mBAAS,AAAC,EAAC,SAAC,AAAD,CAAM;AACf,oBAAQ,EAAI,IAAI,UAAQ,AAAC,EAAC,CAAC;AAC3B,oBAAQ,IAAI,AAAC,CAAC,MAAK,CAAC,CAAC;AACrB,oBAAQ,IAAI,AAAC,CAAC,OAAM,CAAC,CAAC;AACtB,oBAAQ,IAAI,AAAC,CAAC,QAAO,CAAC,CAAC;UACzB,EAAC,CAAC;AACF,WAAC,AAAC,CAAC,yCAAwC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,kBAAiB,CAAC,GAAG,SAAC,KAAI;AAC9E,oBAAQ,IAAI,AAAC,CAAC,MAAK,CAAC,YAAY,AAAC,EAAC,SAAC,KAAI,CAAM;AAC3C,mBAAK,AAAC,CAAC,KAAI,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAC;AACzB,kBAAI,KAAK,AAAC,EAAC,CAAC;YACd,EAAC,CAAC;AACF,4BAAgB,UAAU,AAAC,CAAC,GAAE,CAAG,UAAQ,CAAC,CAAC;AAC3C,4BAAgB,SAAS,AAAC,CAAC,UAAS,CAAG,GAAC,CAAC,CAAC;UAC5C,EAAC,CAAC,CAAC;AACH,WAAC,AAAC,CAAC,0CAAyC,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,kBAAiB,CAAC,GAAG,SAAC,KAAI;AAC/E,oBAAQ,IAAI,AAAC,CAAC,OAAM,CAAC,YAAY,AAAC,EAAC,SAAC,KAAI,CAAM;AAC5C,mBAAK,AAAC,CAAC,KAAI,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;AAC7B,kBAAI,KAAK,AAAC,EAAC,CAAC;YACd,EAAC,CAAC;AACF,4BAAgB,UAAU,AAAC,CAAC,GAAE,CAAG,UAAQ,CAAC,CAAC;AAC3C,4BAAgB,UAAU,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC,CAAC;UACjD,EAAC,CAAC,CAAC;AACH,WAAC,AAAC,CAAC,2CAA0C,CAAG,CAAA,MAAK,AAAC,CAAC,CAAC,kBAAiB,CAAC,GAAG,SAAC,KAAI;AAChF,oBAAQ,IAAI,AAAC,CAAC,QAAO,CAAC,YAAY,AAAC,EAAC,SAAC,AAAD,CAAM;AACxC,kBAAI,KAAK,AAAC,EAAC,CAAC;YACd,EAAC,CAAC;AACF,4BAAgB,UAAU,AAAC,CAAC,GAAE,CAAG,UAAQ,CAAC,CAAC;AAC3C,4BAAgB,WAAW,AAAC,CAAC,UAAS,CAAC,CAAC;UAC1C,EAAC,CAAC,CAAC;QACL,EAAC,CAAC;MACJ;AAAA,IACF,EAAC,CAAC;EACJ;AAtFQ,UAAQ,AAAC,cAAqC,CAAA;AADtD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,yBAAoB,KAAG,mBAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,wBAAoB,KAAG,kBAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,2BAAoB,KAAG,qBAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;IAAmB;EAC3B,CAAA;AADI,CAAC,CAAC;AAwF0B","file":"angular2/test/facade/async_spec.js","sourcesContent":["import {describe,\n  it,\n  expect,\n  beforeEach,\n  ddescribe,\n  iit,\n  xit,\n  el,\n  SpyObject,\n  AsyncTestCompleter,\n  inject,\n  IS_DARTIUM} from 'angular2/test_lib';\nimport {ObservableWrapper,\n  Observable,\n  ObservableController,\n  PromiseWrapper} from 'angular2/src/facade/async';\nexport function main() {\n  describe('Observable', () => {\n    var obs;\n    var controller;\n    beforeEach(() => {\n      controller = ObservableWrapper.createController();\n      obs = ObservableWrapper.createObservable(controller);\n    });\n    it(\"should call the next callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(obs, (value) => {\n        expect(value).toEqual(99);\n        async.done();\n      });\n      ObservableWrapper.callNext(controller, 99);\n    }));\n    it(\"should call the throw callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(obs, (_) => {}, (error) => {\n        expect(error).toEqual(\"Boom\");\n        async.done();\n      });\n      ObservableWrapper.callThrow(controller, \"Boom\");\n    }));\n    it(\"should call the return callback\", inject([AsyncTestCompleter], (async) => {\n      ObservableWrapper.subscribe(obs, (_) => {}, (_) => {}, () => {\n        async.done();\n      });\n      ObservableWrapper.callReturn(controller);\n    }));\n    it(\"should subscribe to the wrapper asynchronously\", () => {\n      var called = false;\n      ObservableWrapper.subscribe(obs, (value) => {\n        called = true;\n      });\n      ObservableWrapper.callNext(controller, 99);\n      expect(called).toBe(false);\n    });\n    if (!IS_DARTIUM) {\n      describe(\"Generator\", () => {\n        var generator;\n        beforeEach(() => {\n          generator = new SpyObject();\n          generator.spy(\"next\");\n          generator.spy(\"throw\");\n          generator.spy(\"return\");\n        });\n        it(\"should call next on the given generator\", inject([AsyncTestCompleter], (async) => {\n          generator.spy(\"next\").andCallFake((value) => {\n            expect(value).toEqual(99);\n            async.done();\n          });\n          ObservableWrapper.subscribe(obs, generator);\n          ObservableWrapper.callNext(controller, 99);\n        }));\n        it(\"should call throw on the given generator\", inject([AsyncTestCompleter], (async) => {\n          generator.spy(\"throw\").andCallFake((error) => {\n            expect(error).toEqual(\"Boom\");\n            async.done();\n          });\n          ObservableWrapper.subscribe(obs, generator);\n          ObservableWrapper.callThrow(controller, \"Boom\");\n        }));\n        it(\"should call return on the given generator\", inject([AsyncTestCompleter], (async) => {\n          generator.spy(\"return\").andCallFake(() => {\n            async.done();\n          });\n          ObservableWrapper.subscribe(obs, generator);\n          ObservableWrapper.callReturn(controller);\n        }));\n      });\n    }\n  });\n}\n//# sourceMappingURL=async_spec.js.map\n\n//# sourceMappingURL=./async_spec.map"]}