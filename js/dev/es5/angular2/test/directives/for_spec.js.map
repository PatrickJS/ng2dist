{"version":3,"sources":["for_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/directives/for_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {For} from 'angular2/src/directives/for';\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\nexport function main() {\n  describe('for', () => {\n    var TEMPLATE = '<div><copy-me template=\"for #item of items\">{{item.toString()}};</copy-me></div>';\n    it('should reflect initial elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;');\n        async.done();\n      });\n    }));\n    it('should reflect added elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        ListWrapper.push(view.context.items, 3);\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;3;');\n        async.done();\n      });\n    }));\n    it('should reflect removed elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        ListWrapper.removeAt(view.context.items, 1);\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;');\n        async.done();\n      });\n    }));\n    it('should reflect moved elements', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        ListWrapper.removeAt(view.context.items, 0);\n        ListWrapper.push(view.context.items, 1);\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('2;1;');\n        async.done();\n      });\n    }));\n    it('should reflect a mix of all changes (additions/removals/moves)', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.context.items = [0, 1, 2, 3, 4, 5];\n        view.detectChanges();\n        view.context.items = [6, 2, 7, 0, 4, 8];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('6;2;7;0;4;8;');\n        async.done();\n      });\n    }));\n    it('should iterate over an array of objects', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<ul><li template=\"for #item of items\">{{item[\"name\"]}};</li></ul>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [{'name': 'misko'}, {'name': 'shyam'}];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('misko;shyam;');\n        ListWrapper.push(view.context.items, {'name': 'adam'});\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('misko;shyam;adam;');\n        ListWrapper.removeAt(view.context.items, 2);\n        ListWrapper.removeAt(view.context.items, 0);\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('shyam;');\n        async.done();\n      });\n    }));\n    it('should gracefully handle nulls', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<ul><li template=\"for #item of null\">{{item}};</li></ul>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n        async.done();\n      });\n    }));\n    it('should gracefully handle ref changing to null and back', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;');\n        view.context.items = null;\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('');\n        view.context.items = [1, 2, 3];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;3;');\n        async.done();\n      });\n    }));\n    it('should throw on ref changing to string', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('1;2;');\n        view.context.items = 'whaaa';\n        expect(() => view.detectChanges()).toThrowError();\n        async.done();\n      });\n    }));\n    it('should works with duplicates', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      tb.createView(TestComponent, {html: TEMPLATE}).then((view) => {\n        var a = new Foo();\n        view.context.items = [a, a];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('foo;foo;');\n        async.done();\n      });\n    }));\n    it('should repeat over nested arrays', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div>' + '<div template=\"for #item of items\">' + '<div template=\"for #subitem of item\">' + '{{subitem}}-{{item.length}};' + '</div>|' + '</div>' + '</div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [['a', 'b'], ['c']];\n        view.detectChanges();\n        view.detectChanges();\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('a-2;b-2;|c-1;|');\n        view.context.items = [['e'], ['f', 'g']];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('e-1;|f-2;g-2;|');\n        async.done();\n      });\n    }));\n    it('should repeat over nested arrays with no intermediate element', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div><template [for] #item [of]=\"items\">' + '<div template=\"for #subitem of item\">' + '{{subitem}}-{{item.length}};' + '</div></template></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [['a', 'b'], ['c']];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('a-2;b-2;c-1;');\n        view.context.items = [['e'], ['f', 'g']];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('e-1;f-2;g-2;');\n        async.done();\n      });\n    }));\n    it('should display indices correctly', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div><copy-me template=\"for: var item of items; var i=index\">{{i.toString()}}</copy-me></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.context.items = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('0123456789');\n        view.context.items = [1, 2, 6, 7, 4, 3, 5, 8, 9, 0];\n        view.detectChanges();\n        expect(DOM.getText(view.rootNodes[0])).toEqual('0123456789');\n        async.done();\n      });\n    }));\n  });\n}\nclass Foo {\n  toString() {\n    return 'foo';\n  }\n}\nclass TestComponent {\n  constructor() {\n    this.items = [1, 2];\n  }\n}\nObject.defineProperty(TestComponent, \"annotations\", {get: function() {\n    return [new Component({selector: 'test-cmp'}), new View({directives: [For]})];\n  }});\n//# sourceMappingURL=for_spec.js.map\n\n//# sourceMappingURL=./for_spec.map"]}