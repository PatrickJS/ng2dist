{"version":3,"sources":["change_detection_jit_generator.es6"],"names":[],"mappings":"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","file":"angular2/src/change_detection/change_detection_jit_generator.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {isPresent,\n  isBlank,\n  BaseException,\n  Type} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {ChangeDetectionUtil} from './change_detection_util';\nimport {DirectiveRecord} from './directive_record';\nimport {ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE} from './proto_record';\nvar ABSTRACT_CHANGE_DETECTOR = \"AbstractChangeDetector\";\nvar UTIL = \"ChangeDetectionUtil\";\nvar DISPATCHER_ACCESSOR = \"this.dispatcher\";\nvar PIPE_REGISTRY_ACCESSOR = \"this.pipeRegistry\";\nvar PROTOS_ACCESSOR = \"this.protos\";\nvar DIRECTIVES_ACCESSOR = \"this.directiveRecords\";\nvar CONTEXT_ACCESSOR = \"this.context\";\nvar CHANGE_LOCAL = \"change\";\nvar CHANGES_LOCAL = \"changes\";\nvar LOCALS_ACCESSOR = \"this.locals\";\nvar MODE_ACCESSOR = \"this.mode\";\nvar TEMP_LOCAL = \"temp\";\nvar CURRENT_PROTO = \"currentProto\";\nfunction typeTemplate(type, cons, detectChanges, notifyOnAllChangesDone, setContext) {\n  assert.argumentTypes(type, assert.type.string, cons, assert.type.string, detectChanges, assert.type.string, notifyOnAllChangesDone, assert.type.string, setContext, assert.type.string);\n  return assert.returnType((`\n${cons}\n${detectChanges}\n${notifyOnAllChangesDone}\n${setContext};\n\nreturn function(dispatcher, pipeRegistry) {\n  return new ${type}(dispatcher, pipeRegistry, protos, directiveRecords);\n}\n`), assert.type.string);\n}\nObject.defineProperty(typeTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction constructorTemplate(type, fieldsDefinitions) {\n  assert.argumentTypes(type, assert.type.string, fieldsDefinitions, assert.type.string);\n  return assert.returnType((`\nvar ${type} = function ${type}(dispatcher, pipeRegistry, protos, directiveRecords) {\n${ABSTRACT_CHANGE_DETECTOR}.call(this);\n${DISPATCHER_ACCESSOR} = dispatcher;\n${PIPE_REGISTRY_ACCESSOR} = pipeRegistry;\n${PROTOS_ACCESSOR} = protos;\n${DIRECTIVES_ACCESSOR} = directiveRecords;\n${LOCALS_ACCESSOR} = null;\n${fieldsDefinitions}\n}\n\n${type}.prototype = Object.create(${ABSTRACT_CHANGE_DETECTOR}.prototype);\n`), assert.type.string);\n}\nObject.defineProperty(constructorTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction pipeOnDestroyTemplate(pipeNames) {\n  return pipeNames.map((p) => `${p}.onDestroy()`).join(\"\\n\");\n}\nObject.defineProperty(pipeOnDestroyTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction hydrateTemplate(type, mode, fieldDefinitions, pipeOnDestroy, directiveFieldNames) {\n  assert.argumentTypes(type, assert.type.string, mode, assert.type.string, fieldDefinitions, assert.type.string, pipeOnDestroy, assert.type.string, directiveFieldNames, assert.genericType(List, String));\n  var directiveInit = \"\";\n  for (var i = 0; i < directiveFieldNames.length; ++i) {\n    directiveInit += `${directiveFieldNames[i]} = directives.directive(this.directiveRecords[${i}]);\\n`;\n  }\n  return assert.returnType((`\n${type}.prototype.hydrate = function(context, locals, directives) {\n  ${MODE_ACCESSOR} = \"${mode}\";\n  ${CONTEXT_ACCESSOR} = context;\n  ${LOCALS_ACCESSOR} = locals;\n  ${directiveInit}\n}\n${type}.prototype.dehydrate = function() {\n  ${pipeOnDestroy}\n  ${fieldDefinitions}\n  ${LOCALS_ACCESSOR} = null;\n}\n${type}.prototype.hydrated = function() {\n  return ${CONTEXT_ACCESSOR} !== ${UTIL}.unitialized();\n}\n`), assert.type.string);\n}\nObject.defineProperty(hydrateTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.genericType(List, String)]];\n  }});\nfunction detectChangesTemplate(type, body) {\n  assert.argumentTypes(type, assert.type.string, body, assert.type.string);\n  return assert.returnType((`\n${type}.prototype.detectChangesInRecords = function(throwOnChange) {\n  ${body}\n}\n`), assert.type.string);\n}\nObject.defineProperty(detectChangesTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction callOnAllChangesDoneTemplate(type, body) {\n  assert.argumentTypes(type, assert.type.string, body, assert.type.string);\n  return assert.returnType((`\n${type}.prototype.callOnAllChangesDone = function() {\n  ${body}\n}\n`), assert.type.string);\n}\nObject.defineProperty(callOnAllChangesDoneTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction onAllChangesDoneTemplate(directive) {\n  assert.argumentTypes(directive, assert.type.string);\n  return assert.returnType((`${directive}.onAllChangesDone();`), assert.type.string);\n}\nObject.defineProperty(onAllChangesDoneTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction detectChangesBodyTemplate(localDefinitions, changeDefinitions, records) {\n  assert.argumentTypes(localDefinitions, assert.type.string, changeDefinitions, assert.type.string, records, assert.type.string);\n  return assert.returnType((`\n${localDefinitions}\n${changeDefinitions}\nvar ${TEMP_LOCAL};\nvar ${CHANGE_LOCAL};\nvar ${CURRENT_PROTO};\nvar ${CHANGES_LOCAL} = null;\n\ncontext = ${CONTEXT_ACCESSOR};\n${records}\n`), assert.type.string);\n}\nObject.defineProperty(detectChangesBodyTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction pipeCheckTemplate(protoIndex, context, bindingPropagationConfig, pipe, pipeType, oldValue, newValue, change, update, addToChanges, lastInDirective) {\n  assert.argumentTypes(protoIndex, assert.type.number, context, assert.type.string, bindingPropagationConfig, assert.type.string, pipe, assert.type.string, pipeType, assert.type.string, oldValue, assert.type.string, newValue, assert.type.string, change, assert.type.string, update, assert.type.string, addToChanges, assert.type.any, lastInDirective, assert.type.string);\n  return assert.returnType((`\n${CURRENT_PROTO} = ${PROTOS_ACCESSOR}[${protoIndex}];\nif (${pipe} === ${UTIL}.unitialized()) {\n  ${pipe} = ${PIPE_REGISTRY_ACCESSOR}.get('${pipeType}', ${context}, ${bindingPropagationConfig});\n} else if (!${pipe}.supports(${context})) {\n  ${pipe}.onDestroy();\n  ${pipe} = ${PIPE_REGISTRY_ACCESSOR}.get('${pipeType}', ${context}, ${bindingPropagationConfig});\n}\n\n${newValue} = ${pipe}.transform(${context});\nif (! ${UTIL}.noChangeMarker(${newValue})) {\n  ${change} = true;\n  ${update}\n  ${addToChanges}\n  ${oldValue} = ${newValue};\n}\n${lastInDirective}\n`), assert.type.string);\n}\nObject.defineProperty(pipeCheckTemplate, \"parameters\", {get: function() {\n    return [[assert.type.number], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [], [assert.type.string]];\n  }});\nfunction referenceCheckTemplate(protoIndex, assignment, oldValue, newValue, change, update, addToChanges, lastInDirective) {\n  assert.argumentTypes(protoIndex, assert.type.number, assignment, assert.type.string, oldValue, assert.type.string, newValue, assert.type.string, change, assert.type.string, update, assert.type.string, addToChanges, assert.type.string, lastInDirective, assert.type.string);\n  return assert.returnType((`\n${CURRENT_PROTO} = ${PROTOS_ACCESSOR}[${protoIndex}];\n${assignment}\nif (${newValue} !== ${oldValue} || (${newValue} !== ${newValue}) && (${oldValue} !== ${oldValue})) {\n  ${change} = true;\n  ${update}\n  ${addToChanges}\n  ${oldValue} = ${newValue};\n}\n${lastInDirective}\n`), assert.type.string);\n}\nObject.defineProperty(referenceCheckTemplate, \"parameters\", {get: function() {\n    return [[assert.type.number], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction assignmentTemplate(field, value) {\n  assert.argumentTypes(field, assert.type.string, value, assert.type.string);\n  return `${field} = ${value};`;\n}\nObject.defineProperty(assignmentTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction localDefinitionsTemplate(names) {\n  return assert.returnType((names.map((n) => `var ${n};`).join(\"\\n\")), assert.type.string);\n}\nObject.defineProperty(localDefinitionsTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction changeDefinitionsTemplate(names) {\n  return assert.returnType((names.map((n) => `var ${n} = false;`).join(\"\\n\")), assert.type.string);\n}\nObject.defineProperty(changeDefinitionsTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction fieldDefinitionsTemplate(names) {\n  return assert.returnType((names.map((n) => `${n} = ${UTIL}.unitialized();`).join(\"\\n\")), assert.type.string);\n}\nObject.defineProperty(fieldDefinitionsTemplate, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction ifChangedGuardTemplate(changeNames, body) {\n  assert.argumentTypes(changeNames, List, body, assert.type.string);\n  var cond = changeNames.join(\" || \");\n  return assert.returnType((`\nif (${cond}) {\n  ${body}\n}\n`), assert.type.string);\n}\nObject.defineProperty(ifChangedGuardTemplate, \"parameters\", {get: function() {\n    return [[List], [assert.type.string]];\n  }});\nfunction addToChangesTemplate(oldValue, newValue) {\n  assert.argumentTypes(oldValue, assert.type.string, newValue, assert.type.string);\n  return assert.returnType((`${CHANGES_LOCAL} = ${UTIL}.addChange(${CHANGES_LOCAL}, ${CURRENT_PROTO}.bindingRecord.propertyName, ${UTIL}.simpleChange(${oldValue}, ${newValue}));`), assert.type.string);\n}\nObject.defineProperty(addToChangesTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction updateDirectiveTemplate(oldValue, newValue, directiveProperty) {\n  assert.argumentTypes(oldValue, assert.type.string, newValue, assert.type.string, directiveProperty, assert.type.string);\n  return assert.returnType((`\nif(throwOnChange) ${UTIL}.throwOnChange(${CURRENT_PROTO}, ${UTIL}.simpleChange(${oldValue}, ${newValue}));\n${directiveProperty} = ${newValue};\n  `), assert.type.string);\n}\nObject.defineProperty(updateDirectiveTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.type.string]];\n  }});\nfunction updateElementTemplate(oldValue, newValue) {\n  assert.argumentTypes(oldValue, assert.type.string, newValue, assert.type.string);\n  return assert.returnType((`\nif(throwOnChange) ${UTIL}.throwOnChange(${CURRENT_PROTO}, ${UTIL}.simpleChange(${oldValue}, ${newValue}));\n${DISPATCHER_ACCESSOR}.notifyOnBinding(${CURRENT_PROTO}.bindingRecord, ${newValue});\n  `), assert.type.string);\n}\nObject.defineProperty(updateElementTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nfunction notifyOnChangesTemplate(directive) {\n  assert.argumentTypes(directive, assert.type.string);\n  return assert.returnType((`\nif(${CHANGES_LOCAL}) {\n  ${directive}.onChange(${CHANGES_LOCAL});\n  ${CHANGES_LOCAL} = null;\n}\n`), assert.type.string);\n}\nObject.defineProperty(notifyOnChangesTemplate, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nexport class ChangeDetectorJITGenerator {\n  constructor(typeName, changeDetectionStrategy, records, directiveRecords) {\n    assert.argumentTypes(typeName, assert.type.string, changeDetectionStrategy, assert.type.string, records, assert.genericType(List, ProtoRecord), directiveRecords, List);\n    this.typeName = typeName;\n    this.changeDetectionStrategy = changeDetectionStrategy;\n    this.records = records;\n    this.directiveRecords = directiveRecords;\n    this.localNames = this.getLocalNames(records);\n    this.changeNames = this.getChangeNames(this.localNames);\n    this.fieldNames = this.getFieldNames(this.localNames);\n    this.pipeNames = this.getPipeNames(this.localNames);\n  }\n  getLocalNames(records) {\n    assert.argumentTypes(records, assert.genericType(List, ProtoRecord));\n    var index = 0;\n    var names = records.map((r) => {\n      var sanitizedName = r.name.replace(new RegExp(\"\\\\W\", \"g\"), '');\n      return `${sanitizedName}${index++}`;\n    });\n    return assert.returnType(([\"context\"].concat(names)), assert.genericType(List, assert.type.string));\n  }\n  getChangeNames(localNames) {\n    return assert.returnType((localNames.map((n) => `change_${n}`)), assert.genericType(List, assert.type.string));\n  }\n  getFieldNames(localNames) {\n    return assert.returnType((localNames.map((n) => `this.${n}`)), assert.genericType(List, assert.type.string));\n  }\n  getPipeNames(localNames) {\n    return assert.returnType((localNames.map((n) => `this.${n}_pipe`)), assert.genericType(List, assert.type.string));\n  }\n  generate() {\n    var text = typeTemplate(this.typeName, this.genConstructor(), this.genDetectChanges(), this.genCallOnAllChangesDone(), this.genHydrate());\n    return assert.returnType((new Function('AbstractChangeDetector', 'ChangeDetectionUtil', 'protos', 'directiveRecords', text)(AbstractChangeDetector, ChangeDetectionUtil, this.records, this.directiveRecords)), Function);\n  }\n  genConstructor() {\n    return assert.returnType((constructorTemplate(this.typeName, this.genFieldDefinitions())), assert.type.string);\n  }\n  genHydrate() {\n    var mode = ChangeDetectionUtil.changeDetectionMode(this.changeDetectionStrategy);\n    return assert.returnType((hydrateTemplate(this.typeName, mode, this.genFieldDefinitions(), pipeOnDestroyTemplate(this.getNonNullPipeNames()), this.getDirectiveFieldNames())), assert.type.string);\n  }\n  getDirectiveFieldNames() {\n    return assert.returnType((this.directiveRecords.map((d) => this.getDirective(d))), assert.genericType(List, assert.type.string));\n  }\n  getDirective(d) {\n    assert.argumentTypes(d, DirectiveRecord);\n    return `this.directive_${d.name}`;\n  }\n  genFieldDefinitions() {\n    var fields = [];\n    fields = fields.concat(this.fieldNames);\n    fields = fields.concat(this.getNonNullPipeNames());\n    fields = fields.concat(this.getDirectiveFieldNames());\n    return fieldDefinitionsTemplate(fields);\n  }\n  getNonNullPipeNames() {\n    var pipes = [];\n    this.records.forEach((r) => {\n      if (r.mode === RECORD_TYPE_PIPE || r.mode === RECORD_TYPE_BINDING_PIPE) {\n        pipes.push(this.pipeNames[r.selfIndex]);\n      }\n    });\n    return assert.returnType((pipes), assert.genericType(List, assert.type.string));\n  }\n  genDetectChanges() {\n    var body = this.genDetectChangesBody();\n    return assert.returnType((detectChangesTemplate(this.typeName, body)), assert.type.string);\n  }\n  genCallOnAllChangesDone() {\n    var notifications = [];\n    var dirs = this.directiveRecords;\n    for (var i = dirs.length - 1; i >= 0; --i) {\n      var dir = dirs[i];\n      if (dir.callOnAllChangesDone) {\n        var directive = `this.directive_${dir.name}`;\n        notifications.push(onAllChangesDoneTemplate(directive));\n      }\n    }\n    return assert.returnType((callOnAllChangesDoneTemplate(this.typeName, notifications.join(\";\\n\"))), assert.type.string);\n  }\n  genDetectChangesBody() {\n    var rec = this.records.map((r) => this.genRecord(r)).join(\"\\n\");\n    return assert.returnType((detectChangesBodyTemplate(this.genLocalDefinitions(), this.genChangeDefinitions(), rec)), assert.type.string);\n  }\n  genLocalDefinitions() {\n    return assert.returnType((localDefinitionsTemplate(this.localNames)), assert.type.string);\n  }\n  genChangeDefinitions() {\n    return assert.returnType((changeDefinitionsTemplate(this.changeNames)), assert.type.string);\n  }\n  genRecord(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    if (r.mode === RECORD_TYPE_PIPE || r.mode === RECORD_TYPE_BINDING_PIPE) {\n      return assert.returnType((this.genPipeCheck(r)), assert.type.string);\n    } else {\n      return assert.returnType((this.genReferenceCheck(r)), assert.type.string);\n    }\n  }\n  genPipeCheck(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var context = this.localNames[r.contextIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n    var pipe = this.pipeNames[r.selfIndex];\n    var bpc = r.mode === RECORD_TYPE_BINDING_PIPE ? \"this.bindingPropagationConfig\" : \"null\";\n    var update = this.genUpdateDirectiveOrElement(r);\n    var addToChanges = this.genAddToChanges(r);\n    var lastInDirective = this.genNotifyOnChanges(r);\n    return assert.returnType((pipeCheckTemplate(r.selfIndex - 1, context, bpc, pipe, r.name, oldValue, newValue, change, update, addToChanges, lastInDirective)), assert.type.string);\n  }\n  genReferenceCheck(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var oldValue = this.fieldNames[r.selfIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var change = this.changeNames[r.selfIndex];\n    var assignment = this.genUpdateCurrentValue(r);\n    var update = this.genUpdateDirectiveOrElement(r);\n    var addToChanges = this.genAddToChanges(r);\n    var lastInDirective = this.genNotifyOnChanges(r);\n    var check = referenceCheckTemplate(r.selfIndex - 1, assignment, oldValue, newValue, change, update, addToChanges, lastInDirective);\n    if (r.isPureFunction()) {\n      return assert.returnType((this.ifChangedGuard(r, check)), assert.type.string);\n    } else {\n      return assert.returnType((check), assert.type.string);\n    }\n  }\n  genUpdateCurrentValue(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var context = this.localNames[r.contextIndex];\n    var newValue = this.localNames[r.selfIndex];\n    var args = this.genArgs(r);\n    switch (r.mode) {\n      case RECORD_TYPE_SELF:\n        return assert.returnType((assignmentTemplate(newValue, context)), assert.type.string);\n      case RECORD_TYPE_CONST:\n        return assert.returnType((`${newValue} = ${this.genLiteral(r.funcOrValue)}`), assert.type.string);\n      case RECORD_TYPE_PROPERTY:\n        return assert.returnType((assignmentTemplate(newValue, `${context}.${r.name}`)), assert.type.string);\n      case RECORD_TYPE_LOCAL:\n        return assert.returnType((assignmentTemplate(newValue, `${LOCALS_ACCESSOR}.get('${r.name}')`)), assert.type.string);\n      case RECORD_TYPE_INVOKE_METHOD:\n        return assert.returnType((assignmentTemplate(newValue, `${context}.${r.name}(${args})`)), assert.type.string);\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return assert.returnType((assignmentTemplate(newValue, `${context}(${args})`)), assert.type.string);\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return assert.returnType((assignmentTemplate(newValue, `${UTIL}.${r.name}(${args})`)), assert.type.string);\n      case RECORD_TYPE_INTERPOLATE:\n        return assert.returnType((assignmentTemplate(newValue, this.genInterpolation(r))), assert.type.string);\n      case RECORD_TYPE_KEYED_ACCESS:\n        var key = this.localNames[r.args[0]];\n        return assert.returnType((assignmentTemplate(newValue, `${context}[${key}]`)), assert.type.string);\n      default:\n        throw new BaseException(`Unknown operation ${r.mode}`);\n    }\n  }\n  ifChangedGuard(r, body) {\n    return assert.returnType((ifChangedGuardTemplate(r.args.map((a) => this.changeNames[a]), body)), assert.type.string);\n  }\n  genInterpolation(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var res = \"\";\n    for (var i = 0; i < r.args.length; ++i) {\n      res += this.genLiteral(r.fixedArgs[i]);\n      res += \" + \";\n      res += this.localNames[r.args[i]];\n      res += \" + \";\n    }\n    res += this.genLiteral(r.fixedArgs[r.args.length]);\n    return assert.returnType((res), assert.type.string);\n  }\n  genLiteral(value) {\n    return assert.returnType((JSON.stringify(value)), assert.type.string);\n  }\n  genUpdateDirectiveOrElement(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    if (!r.lastInBinding)\n      return assert.returnType((\"\"), assert.type.string);\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    var br = r.bindingRecord;\n    if (br.isDirective()) {\n      var directiveProperty = `${this.getDirective(br.directiveRecord)}.${br.propertyName}`;\n      return assert.returnType((updateDirectiveTemplate(oldValue, newValue, directiveProperty)), assert.type.string);\n    } else {\n      return assert.returnType((updateElementTemplate(oldValue, newValue)), assert.type.string);\n    }\n  }\n  genAddToChanges(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var newValue = this.localNames[r.selfIndex];\n    var oldValue = this.fieldNames[r.selfIndex];\n    return assert.returnType((r.bindingRecord.callOnChange() ? addToChangesTemplate(oldValue, newValue) : \"\"), assert.type.string);\n  }\n  genNotifyOnChanges(r) {\n    assert.argumentTypes(r, ProtoRecord);\n    var br = r.bindingRecord;\n    if (r.lastInDirective && br.callOnChange()) {\n      return assert.returnType((notifyOnChangesTemplate(this.getDirective(br.directiveRecord))), assert.type.string);\n    } else {\n      return assert.returnType((\"\"), assert.type.string);\n    }\n  }\n  genArgs(r) {\n    return assert.returnType((r.args.map((arg) => this.localNames[arg]).join(\", \")), assert.type.string);\n  }\n}\nObject.defineProperty(ChangeDetectorJITGenerator, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string], [assert.genericType(List, ProtoRecord)], [List]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getLocalNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, ProtoRecord)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getChangeNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, assert.type.string)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getFieldNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, assert.type.string)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getPipeNames, \"parameters\", {get: function() {\n    return [[assert.genericType(List, assert.type.string)]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.getDirective, \"parameters\", {get: function() {\n    return [[DirectiveRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genRecord, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genPipeCheck, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genReferenceCheck, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genUpdateCurrentValue, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.ifChangedGuard, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.string]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genInterpolation, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genUpdateDirectiveOrElement, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genAddToChanges, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genNotifyOnChanges, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(ChangeDetectorJITGenerator.prototype.genArgs, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\n//# sourceMappingURL=change_detection_jit_generator.es6.map\n\n//# sourceMappingURL=./change_detection_jit_generator.map"]}