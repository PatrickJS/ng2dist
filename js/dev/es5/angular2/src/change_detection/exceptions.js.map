{"version":3,"sources":["exceptions.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,+CAAoB,UAAS,SAAQ;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;6CAFY,CAAA,SAAQ,AAAC,4CAAjC,SAAS,QAAO;AACN,AAAI,UAAA,yCACP,SAAM,uCAAqC,CACpC,KAAI,CAAG,CAAA,MAAK,CAAG;AACzB,eAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,OAAK,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AACjE,AALJ,wBAAc,iBAAiB,AAAC,wCAAkB,KAAK,MAAmB,CAK/D;AACP,aAAG,QAAQ,EAAI,EAAA,cAAc,EAAC,CAAA,KAAI,mBAAmB,EAAC,uCAAqC,KAAI,mBAAmB,EAAC,CAAA,MAAK,cAAc,EAAC,sBAAqB,EAAC,CAAA,MAAK,aAAa,EAAC,IAAE,CAAA,CAAC;QACrL,AANgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,0CAM5C,QAAO,CAAP,UAAS,AAAD,CAAG;AACT,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,QAAQ,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC9D,MAPgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAFmD,KAAI,CAErC,EAJ2C;AAYtE,WAAK,eAAe,AAAC,CAAC,sCAAqC,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACzF,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;2BAdmB,CAAA,SAAQ,AAAC,0BAAjC,SAAS,QAAO;AACN,AAAI,UAAA,uBAcP,SAAM,qBAAmB,CAClB,KAAI,CAAG,CAAA,iBAAgB,CAAG;AACpC,eAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,kBAAgB,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AAC5E,AAlBJ,wBAAc,iBAAiB,AAAC,sBAAkB,KAAK,MAAmB,CAkB/D;AACP,aAAG,kBAAkB,EAAI,kBAAgB,CAAC;AAC1C,aAAG,SAAS,EAAI,CAAA,KAAI,mBAAmB,CAAC;AACxC,aAAG,QAAQ,IAAO,IAAG,kBAAkB,EAAC,QAAO,EAAC,CAAA,IAAG,SAAS,EAAC,IAAE,CAAA,CAAC;QAClE,AArBgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC,wBAqB5C,QAAO,CAAP,UAAS,AAAD,CAAG;AACT,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,QAAQ,CAAC,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;UAC9D,MAtBgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAWiC,KAAI,CAXnB,EAJ2C;AA2BtE,WAAK,eAAe,AAAC,CAAC,oBAAmB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACvE,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IA3B0B;EAC3B,CAAA;AADI,CAAC,CAAC;AA8B0B","file":"angular2/src/change_detection/exceptions.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ProtoRecord} from './proto_record';\nexport class ExpressionChangedAfterItHasBeenChecked extends Error {\n  constructor(proto, change) {\n    assert.argumentTypes(proto, ProtoRecord, change, assert.type.any);\n    super();\n    this.message = `Expression '${proto.expressionAsString}' has changed after it was checked. ` + `Previous value: '${change.previousValue}'. Current value: '${change.currentValue}'`;\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\nObject.defineProperty(ExpressionChangedAfterItHasBeenChecked, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.any]];\n  }});\nexport class ChangeDetectionError extends Error {\n  constructor(proto, originalException) {\n    assert.argumentTypes(proto, ProtoRecord, originalException, assert.type.any);\n    super();\n    this.originalException = originalException;\n    this.location = proto.expressionAsString;\n    this.message = `${this.originalException} in [${this.location}]`;\n  }\n  toString() {\n    return assert.returnType((this.message), assert.type.string);\n  }\n}\nObject.defineProperty(ChangeDetectionError, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.any]];\n  }});\n//# sourceMappingURL=exceptions.js.map\n\n//# sourceMappingURL=./exceptions.map"]}