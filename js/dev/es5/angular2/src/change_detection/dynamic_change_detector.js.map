{"version":3,"sources":["dynamic_change_detector.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,yPAAoB,UAAS,SAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgUpD,SAAS,OAAK,CAAE,CAAA,CAAG,CAAA,CAAA,CAAG;AACpB,OAAI,CAAA,IAAM,EAAA;AACR,WAAO,KAAG,CAAC;AAAA,AACb,OAAI,CAAA,WAAa,OAAK,CAAA,EAAK,CAAA,CAAA,WAAa,OAAK,CAAA,EAAK,CAAA,CAAA,GAAK,EAAA;AACrD,WAAO,KAAG,CAAC;AAAA,AACb,OAAI,CAAC,CAAA,IAAM,EAAA,CAAC,GAAK,EAAC,CAAA,IAAM,EAAA,CAAC;AACvB,WAAO,KAAG,CAAC;AAAA,AACb,SAAO,MAAI,CAAC;EACd;AAAA,AAxUA,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,cAAoB,KAAG,QAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,sBAAoB,KAAG,gBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,6BAAoB,KAAG,uBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,sBAAoB,KAAG,gBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,mBAAoB,KAAG,aAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,0BAAoB,KAAG,oBAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;AAA1C,2BAAoB,KAAG,qBAAkB,CAAC;AAA1C,wBAAoB,KAAG,kBAAkB,CAAC;AAA1C,gCAAoB,KAAG,0BAAkB,CAAC;AAA1C,wBAAoB,KAAG,kBAAkB,CAAC;AAA1C,iCAAoB,KAAG,2BAAkB,CAAC;AAA1C,+BAAoB,KAAG,yBAAkB,CAAC;AAA1C,+BAAoB,KAAG,yBAAkB,CAAC;AAA1C,uBAAoB,KAAG,iBAAkB,CAAC;AAA1C,+BAAoB,KAAG,yBAAkB,CAAC;AAA1C,8BAAoB,KAAG,wBAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,6CAAoB,KAAG,uCAAkB,CAAC;AAA1C,2BAAoB,KAAG,qBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;4BAFY,CAAA,SAAQ,AAAC,2BAAjC,SAAS,QAAO;AACN,AAAI,UAAA,wBA4BP,SAAM,sBAAoB,CACnB,qBAAoB,CAAG,CAAA,UAAS,CAAG,CAAA,YAAW,CAAG,CAAA,YAAW,CAAG,CAAA,gBAAe,CAAG;AAC3F,eAAK,cAAc,AAAC,CAAC,qBAAoB,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,WAAS,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,aAAW,CAAG,aAAW,CAAG,aAAW,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAG,iBAAe,CAAG,KAAG,CAAC,CAAC;AACrM,AAhCJ,wBAAc,iBAAiB,AAAC,uBAAkB,KAAK,MAAmB,CAgC/D;AACP,aAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,aAAG,aAAa,EAAI,aAAW,CAAC;AAChC,aAAG,OAAO,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,YAAW,OAAO,EAAI,EAAA,CAAC,CAAC;AAClE,aAAG,MAAM,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,YAAW,OAAO,EAAI,EAAA,CAAC,CAAC;AACjE,aAAG,aAAa,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,YAAW,OAAO,EAAI,EAAA,CAAC,CAAC;AACxE,aAAG,QAAQ,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,YAAW,OAAO,EAAI,EAAA,CAAC,CAAC;AACnE,oBAAU,KAAK,AAAC,CAAC,IAAG,OAAO,CAAG,cAAY,CAAC,CAAC;AAC5C,oBAAU,KAAK,AAAC,CAAC,IAAG,MAAM,CAAG,KAAG,CAAC,CAAC;AAClC,oBAAU,KAAK,AAAC,CAAC,IAAG,aAAa,CAAG,cAAY,CAAC,CAAC;AAClD,oBAAU,KAAK,AAAC,CAAC,IAAG,QAAQ,CAAG,MAAI,CAAC,CAAC;AACrC,aAAG,OAAO,EAAI,KAAG,CAAC;AAClB,aAAG,WAAW,EAAI,KAAG,CAAC;AACtB,aAAG,OAAO,EAAI,aAAW,CAAC;AAC1B,aAAG,iBAAiB,EAAI,iBAAe,CAAC;AACxC,aAAG,sBAAsB,EAAI,sBAAoB,CAAC;QACpD,AA/CgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AA+C5C,gBAAM,CAAN,UAAQ,OAAM,CAAG,CAAA,MAAK,CAAG,CAAA,UAAS,CAAG;AACnC,iBAAK,cAAc,AAAC,CAAC,OAAM,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,OAAK,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,WAAS,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AACpG,eAAG,KAAK,EAAI,CAAA,mBAAkB,oBAAoB,AAAC,CAAC,IAAG,sBAAsB,CAAC,CAAC;AAC/E,eAAG,OAAO,CAAE,CAAA,CAAC,EAAI,QAAM,CAAC;AACxB,eAAG,OAAO,EAAI,OAAK,CAAC;AACpB,eAAG,WAAW,EAAI,WAAS,CAAC;UAC9B;AACA,kBAAQ,CAAR,UAAU,AAAD,CAAG;AACV,eAAG,cAAc,AAAC,EAAC,CAAC;AACpB,sBAAU,KAAK,AAAC,CAAC,IAAG,OAAO,CAAG,cAAY,CAAC,CAAC;AAC5C,sBAAU,KAAK,AAAC,CAAC,IAAG,QAAQ,CAAG,MAAI,CAAC,CAAC;AACrC,sBAAU,KAAK,AAAC,CAAC,IAAG,MAAM,CAAG,KAAG,CAAC,CAAC;AAClC,sBAAU,KAAK,AAAC,CAAC,IAAG,aAAa,CAAG,cAAY,CAAC,CAAC;AAClD,eAAG,OAAO,EAAI,KAAG,CAAC;UACpB;AACA,sBAAY,CAAZ,UAAc,AAAD,CAAG;AACd,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,MAAM,OAAO,CAAG,GAAE,CAAA,CAAG;AAC1C,iBAAI,SAAQ,AAAC,CAAC,IAAG,MAAM,CAAE,CAAA,CAAC,CAAC,CAAG;AAC5B,mBAAG,MAAM,CAAE,CAAA,CAAC,UAAU,AAAC,EAAC,CAAC;cAC3B;AAAA,YACF;AAAA,UACF;AACA,iBAAO,CAAP,UAAS,AAAD,CAAG;AACT,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,OAAO,CAAE,CAAA,CAAC,IAAM,cAAY,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACnF;AACA,+BAAqB,CAArB,UAAuB,aAAY,CAAG;AACpC,iBAAK,cAAc,AAAC,CAAC,aAAY,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;AACxD,AAAI,cAAA,CAAA,MAAK,EAAI,CAAA,MAAK,KAAK,AAAC,CAAC,IAAG,OAAO,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC,CAAC;AAC5E,AAAI,cAAA,CAAA,OAAM,EAAI,KAAG,CAAC;AAClB,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,MAAK,OAAO,CAAG,GAAE,CAAA,CAAG;AACtC,AAAI,gBAAA,CAAA,KAAI,EAAI,CAAA,MAAK,KAAK,AAAC,CAAC,MAAK,CAAE,CAAA,CAAC,CAAG,YAAU,CAAC,CAAC;AAC/C,AAAI,gBAAA,CAAA,MAAK,EAAI,CAAA,IAAG,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC;AAC/B,iBAAI,SAAQ,AAAC,CAAC,MAAK,CAAC,CAAG;AACrB,mBAAI,aAAY;AACd,oCAAkB,cAAc,AAAC,CAAC,KAAI,CAAG,OAAK,CAAC,CAAC;AAAA,AAClD,mBAAG,0BAA0B,AAAC,CAAC,MAAK,CAAG,CAAA,KAAI,cAAc,CAAC,CAAC;AAC3D,sBAAM,EAAI,CAAA,IAAG,WAAW,AAAC,CAAC,KAAI,cAAc,CAAG,OAAK,CAAG,QAAM,CAAC,CAAC;cACjE;AAAA,AACA,iBAAI,KAAI,gBAAgB,GAAK,CAAA,SAAQ,AAAC,CAAC,OAAM,CAAC,CAAG;AAC/C,mBAAG,WAAW,AAAC,CAAC,KAAI,cAAc,gBAAgB,CAAC,SAAS,AAAC,CAAC,OAAM,CAAC,CAAC;AACtE,sBAAM,EAAI,KAAG,CAAC;cAChB;AAAA,YACF;AAAA,UACF;AACA,6BAAmB,CAAnB,UAAqB,AAAD,CAAG;AACrB,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,IAAG,iBAAiB,CAAC;AAChC,gBAAS,GAAA,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,EAAI,EAAA,CAAG,CAAA,CAAA,GAAK,EAAA,CAAG,GAAE,CAAA,CAAG;AACzC,AAAI,gBAAA,CAAA,GAAE,EAAI,CAAA,IAAG,CAAE,CAAA,CAAC,CAAC;AACjB,iBAAI,GAAE,qBAAqB,CAAG;AAC5B,mBAAG,WAAW,AAAC,CAAC,GAAE,CAAC,iBAAiB,AAAC,EAAC,CAAC;cACzC;AAAA,YACF;AAAA,UACF;AACA,kCAAwB,CAAxB,UAA0B,MAAK,CAAG,CAAA,aAAY,CAAG;AAC/C,eAAI,OAAM,AAAC,CAAC,aAAY,gBAAgB,CAAC,CAAG;AAC1C,iBAAG,WAAW,gBAAgB,AAAC,CAAC,aAAY,CAAG,CAAA,MAAK,aAAa,CAAC,CAAC;YACrE,KAAO;AACL,0BAAY,OAAO,AAAC,CAAC,IAAG,WAAW,AAAC,CAAC,aAAY,gBAAgB,CAAC,CAAG,CAAA,MAAK,aAAa,CAAC,CAAC;YAC3F;AAAA,UACF;AACA,mBAAS,CAAT,UAAW,aAAY,CAAG,CAAA,MAAK,CAAG,CAAA,OAAM,CAAG;AACzC,iBAAK,cAAc,AAAC,CAAC,aAAY,CAAG,cAAY,CAAG,OAAK,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AACrG,eAAI,aAAY,aAAa,AAAC,EAAC,CAAG;AAChC,mBAAO,CAAA,mBAAkB,UAAU,AAAC,CAAC,OAAM,CAAG,CAAA,aAAY,aAAa,CAAG,OAAK,CAAC,CAAC;YACnF,KAAO;AACL,mBAAO,QAAM,CAAC;YAChB;AAAA,UACF;AACA,mBAAS,CAAT,UAAW,SAAQ,CAAG;AACpB,iBAAK,cAAc,AAAC,CAAC,SAAQ,CAAG,gBAAc,CAAC,CAAC;AAChD,iBAAO,CAAA,IAAG,WAAW,UAAU,AAAC,CAAC,SAAQ,CAAC,CAAC;UAC7C;AACA,eAAK,CAAL,UAAO,KAAI,CAAG;AACZ,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,cAAI;AACF,iBAAI,KAAI,KAAK,IAAM,iBAAe,CAAA,EAAK,CAAA,KAAI,KAAK,IAAM,yBAAuB,CAAG;AAC9E,qBAAO,CAAA,IAAG,WAAW,AAAC,CAAC,KAAI,CAAC,CAAC;cAC/B,KAAO;AACL,qBAAO,CAAA,IAAG,gBAAgB,AAAC,CAAC,KAAI,CAAC,CAAC;cACpC;AAAA,YACF,CAAE,OAAO,CAAA,CAAG;AACV,kBAAM,IAAI,qBAAmB,AAAC,CAAC,KAAI,CAAG,EAAA,CAAC,CAAC;YAC1C;AAAA,UACF;AACA,wBAAc,CAAd,UAAgB,KAAI,CAAG;AACrB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,eAAI,IAAG,6BAA6B,AAAC,CAAC,KAAI,CAAC,CAAG;AAC5C,iBAAG,YAAY,AAAC,CAAC,KAAI,CAAG,MAAI,CAAC,CAAC;AAC9B,mBAAO,KAAG,CAAC;YACb;AAAA,AACI,cAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC;AACrC,AAAI,cAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,oBAAoB,AAAC,CAAC,KAAI,CAAC,CAAC;AAC/C,eAAI,CAAC,MAAK,AAAC,CAAC,SAAQ,CAAG,UAAQ,CAAC,CAAG;AACjC,iBAAG,WAAW,AAAC,CAAC,KAAI,CAAG,UAAQ,CAAC,CAAC;AACjC,iBAAG,YAAY,AAAC,CAAC,KAAI,CAAG,KAAG,CAAC,CAAC;AAC7B,iBAAI,KAAI,cAAc,CAAG;AACvB,qBAAO,CAAA,mBAAkB,aAAa,AAAC,CAAC,SAAQ,CAAG,UAAQ,CAAC,CAAC;cAC/D,KAAO;AACL,qBAAO,KAAG,CAAC;cACb;AAAA,YACF,KAAO;AACL,iBAAG,YAAY,AAAC,CAAC,KAAI,CAAG,MAAI,CAAC,CAAC;AAC9B,mBAAO,KAAG,CAAC;YACb;AAAA,UACF;AACA,4BAAkB,CAAlB,UAAoB,KAAI,CAAG;AACzB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,mBAAQ,KAAI,KAAK;AACf,iBAAK,iBAAe;AAClB,qBAAO,CAAA,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAC;AAAA,AACjC,iBAAK,kBAAgB;AACnB,qBAAO,CAAA,KAAI,YAAY,CAAC;AAAA,AAC1B,iBAAK,qBAAmB;AACtB,AAAI,kBAAA,CAAA,OAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAC;AACtC,qBAAO,CAAA,KAAI,YAAY,AAAC,CAAC,OAAM,CAAC,CAAC;AAAA,AACnC,iBAAK,kBAAgB;AACnB,qBAAO,CAAA,IAAG,OAAO,IAAI,AAAC,CAAC,KAAI,KAAK,CAAC,CAAC;AAAA,AACpC,iBAAK,0BAAwB;AAC3B,AAAI,kBAAA,CAAA,OAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAC;AACtC,AAAI,kBAAA,CAAA,IAAG,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC;AAChC,qBAAO,CAAA,KAAI,YAAY,AAAC,CAAC,OAAM,CAAG,KAAG,CAAC,CAAC;AAAA,AACzC,iBAAK,yBAAuB;AAC1B,AAAI,kBAAA,CAAA,GAAE,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAE,CAAA,CAAC,CAAC;AAClC,qBAAO,CAAA,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAE,GAAE,CAAC,CAAC;AAAA,AACtC,iBAAK,2BAAyB;AAC5B,qBAAO,CAAA,eAAc,MAAM,AAAC,CAAC,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAG,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC,CAAC;AAAA,AAC/E,iBAAK,wBAAsB,CAAC;AAC5B,iBAAK,yBAAuB;AAC1B,qBAAO,CAAA,eAAc,MAAM,AAAC,CAAC,KAAI,YAAY,CAAG,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC,CAAC;AAAA,AACxE;AACE,oBAAM,IAAI,cAAY,AAAC,EAAC,oBAAoB,EAAC,CAAA,KAAI,KAAK,EAAG,CAAC;AADrD,YAET;UACF;AACA,mBAAS,CAAT,UAAW,KAAI,CAAG;AAChB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,OAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAC;AACtC,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,IAAG,SAAS,AAAC,CAAC,KAAI,CAAG,QAAM,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,QAAO,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,OAAM,CAAC,CAAC;AACtC,eAAI,CAAC,mBAAkB,eAAe,AAAC,CAAC,QAAO,CAAC,CAAG;AACjD,AAAI,gBAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC;AACrC,iBAAG,WAAW,AAAC,CAAC,KAAI,CAAG,SAAO,CAAC,CAAC;AAChC,iBAAG,YAAY,AAAC,CAAC,KAAI,CAAG,KAAG,CAAC,CAAC;AAC7B,iBAAI,KAAI,cAAc,CAAG;AACvB,qBAAO,CAAA,mBAAkB,aAAa,AAAC,CAAC,SAAQ,CAAG,SAAO,CAAC,CAAC;cAC9D,KAAO;AACL,qBAAO,KAAG,CAAC;cACb;AAAA,YACF,KAAO;AACL,iBAAG,YAAY,AAAC,CAAC,KAAI,CAAG,MAAI,CAAC,CAAC;AAC9B,mBAAO,KAAG,CAAC;YACb;AAAA,UACF;AACA,iBAAO,CAAP,UAAS,KAAI,CAAG,CAAA,OAAM,CAAG;AACvB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AAClE,AAAI,cAAA,CAAA,UAAS,EAAI,CAAA,IAAG,UAAU,AAAC,CAAC,KAAI,CAAC,CAAC;AACtC,eAAI,SAAQ,AAAC,CAAC,UAAS,CAAC,CAAA,EAAK,CAAA,UAAS,SAAS,AAAC,CAAC,OAAM,CAAC,CAAG;AACzD,mBAAO,WAAS,CAAC;YACnB;AAAA,AACA,eAAI,SAAQ,AAAC,CAAC,UAAS,CAAC,CAAG;AACzB,uBAAS,UAAU,AAAC,EAAC,CAAC;YACxB;AAAA,AACI,cAAA,CAAA,GAAE,EAAI,CAAA,KAAI,KAAK,IAAM,yBAAuB,CAAA,CAAI,CAAA,IAAG,yBAAyB,EAAI,KAAG,CAAC;AACxF,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,IAAG,aAAa,IAAI,AAAC,CAAC,KAAI,KAAK,CAAG,QAAM,CAAG,IAAE,CAAC,CAAC;AAC1D,eAAG,WAAW,AAAC,CAAC,KAAI,CAAG,KAAG,CAAC,CAAC;AAC5B,iBAAO,KAAG,CAAC;UACb;AACA,qBAAW,CAAX,UAAa,KAAI,CAAG;AAClB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,iBAAO,CAAA,IAAG,OAAO,CAAE,KAAI,aAAa,CAAC,CAAC;UACxC;AACA,kBAAQ,CAAR,UAAU,KAAI,CAAG;AACf,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,iBAAO,CAAA,IAAG,OAAO,CAAE,KAAI,UAAU,CAAC,CAAC;UACrC;AACA,mBAAS,CAAT,UAAW,KAAI,CAAG,CAAA,KAAI,CAAG;AACvB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,MAAI,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AAChE,eAAG,OAAO,CAAE,KAAI,UAAU,CAAC,EAAI,MAAI,CAAC;UACtC;AACA,kBAAQ,CAAR,UAAU,KAAI,CAAG;AACf,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,iBAAO,CAAA,IAAG,MAAM,CAAE,KAAI,UAAU,CAAC,CAAC;UACpC;AACA,mBAAS,CAAT,UAAW,KAAI,CAAG,CAAA,KAAI,CAAG;AACvB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,MAAI,CAAG,CAAA,MAAK,KAAK,IAAI,CAAC,CAAC;AAChE,eAAG,MAAM,CAAE,KAAI,UAAU,CAAC,EAAI,MAAI,CAAC;UACrC;AACA,oBAAU,CAAV,UAAY,KAAI,CAAG,CAAA,KAAI,CAAG;AACxB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAG,MAAI,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;AACpE,eAAG,QAAQ,CAAE,KAAI,UAAU,CAAC,EAAI,MAAI,CAAC;UACvC;AACA,qCAA2B,CAA3B,UAA6B,KAAI,CAAG;AAClC,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,eAAe,AAAC,EAAC,CAAA,EAAK,EAAC,IAAG,aAAa,AAAC,CAAC,KAAI,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACtG;AACA,qBAAW,CAAX,UAAa,KAAI,CAAG;AAClB,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,KAAI,KAAK,CAAC;AACrB,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,GAAE,CAAA,CAAG;AACpC,iBAAI,IAAG,QAAQ,CAAE,IAAG,CAAE,CAAA,CAAC,CAAC,CAAG;AACzB,qBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;cACvD;AAAA,YACF;AAAA,AACA,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACxD;AACA,kBAAQ,CAAR,UAAU,KAAI,CAAG;AACf,iBAAK,cAAc,AAAC,CAAC,KAAI,CAAG,YAAU,CAAC,CAAC;AACxC,AAAI,cAAA,CAAA,GAAE,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,KAAI,KAAK,OAAO,CAAC,CAAC;AACxD,AAAI,cAAA,CAAA,IAAG,EAAI,CAAA,KAAI,KAAK,CAAC;AACrB,gBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,CAAG,GAAE,CAAA,CAAG;AACpC,gBAAE,CAAE,CAAA,CAAC,EAAI,CAAA,IAAG,OAAO,CAAE,IAAG,CAAE,CAAA,CAAC,CAAC,CAAC;YAC/B;AAAA,AACA,iBAAO,IAAE,CAAC;UACZ;AAAA,aAlQgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAyBkC,sBAAqB,CAzBrC,EAJ2C;AAuQtE,WAAK,eAAe,AAAC,CAAC,qBAAoB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACxE,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAG,EAAC,YAAW,CAAC,CAAG,EAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,YAAU,CAAC,CAAC,CAAG,EAAC,IAAG,CAAC,CAAC,CAAC;QACnH,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC1F,eAAO,EAAC,CAAC,MAAK,KAAK,IAAI,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAG,EAAC,MAAK,KAAK,IAAI,CAAC,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,uBAAuB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACzG,eAAO,EAAC,CAAC,MAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7F,eAAO,EAAC,CAAC,aAAY,CAAC,CAAG,GAAC,CAAG,GAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7F,eAAO,EAAC,CAAC,eAAc,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,OAAO,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACzF,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,gBAAgB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAClG,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,oBAAoB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACtG,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,SAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC3F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,GAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,aAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC/F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,UAAU,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC5F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,GAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,UAAU,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC5F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,GAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,YAAY,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC9F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAG,EAAC,MAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,6BAA6B,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC/G,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,aAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC/F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,qBAAoB,UAAU,UAAU,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC5F,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IA7T0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAyUuC","file":"angular2/src/change_detection/dynamic_change_detector.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {isPresent,\n  isBlank,\n  BaseException,\n  FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {BindingRecord} from './binding_record';\nimport {DirectiveRecord} from './directive_record';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {ChangeDetectionUtil,\n  uninitialized} from './change_detection_util';\nimport {ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE} from './proto_record';\nimport {ExpressionChangedAfterItHasBeenChecked,\n  ChangeDetectionError} from './exceptions';\nexport class DynamicChangeDetector extends AbstractChangeDetector {\n  constructor(changeControlStrategy, dispatcher, pipeRegistry, protoRecords, directiveRecords) {\n    assert.argumentTypes(changeControlStrategy, assert.type.string, dispatcher, assert.type.any, pipeRegistry, PipeRegistry, protoRecords, assert.genericType(List, ProtoRecord), directiveRecords, List);\n    super();\n    this.dispatcher = dispatcher;\n    this.pipeRegistry = pipeRegistry;\n    this.values = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.pipes = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.prevContexts = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.changes = ListWrapper.createFixedSize(protoRecords.length + 1);\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    this.locals = null;\n    this.directives = null;\n    this.protos = protoRecords;\n    this.directiveRecords = directiveRecords;\n    this.changeControlStrategy = changeControlStrategy;\n  }\n  hydrate(context, locals, directives) {\n    assert.argumentTypes(context, assert.type.any, locals, assert.type.any, directives, assert.type.any);\n    this.mode = ChangeDetectionUtil.changeDetectionMode(this.changeControlStrategy);\n    this.values[0] = context;\n    this.locals = locals;\n    this.directives = directives;\n  }\n  dehydrate() {\n    this._destroyPipes();\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    this.locals = null;\n  }\n  _destroyPipes() {\n    for (var i = 0; i < this.pipes.length; ++i) {\n      if (isPresent(this.pipes[i])) {\n        this.pipes[i].onDestroy();\n      }\n    }\n  }\n  hydrated() {\n    return assert.returnType((this.values[0] !== uninitialized), assert.type.boolean);\n  }\n  detectChangesInRecords(throwOnChange) {\n    assert.argumentTypes(throwOnChange, assert.type.boolean);\n    var protos = assert.type(this.protos, assert.genericType(List, ProtoRecord));\n    var changes = null;\n    for (var i = 0; i < protos.length; ++i) {\n      var proto = assert.type(protos[i], ProtoRecord);\n      var change = this._check(proto);\n      if (isPresent(change)) {\n        if (throwOnChange)\n          ChangeDetectionUtil.throwOnChange(proto, change);\n        this._updateDirectiveOrElement(change, proto.bindingRecord);\n        changes = this._addChange(proto.bindingRecord, change, changes);\n      }\n      if (proto.lastInDirective && isPresent(changes)) {\n        this._directive(proto.bindingRecord.directiveRecord).onChange(changes);\n        changes = null;\n      }\n    }\n  }\n  callOnAllChangesDone() {\n    var dirs = this.directiveRecords;\n    for (var i = dirs.length - 1; i >= 0; --i) {\n      var dir = dirs[i];\n      if (dir.callOnAllChangesDone) {\n        this._directive(dir).onAllChangesDone();\n      }\n    }\n  }\n  _updateDirectiveOrElement(change, bindingRecord) {\n    if (isBlank(bindingRecord.directiveRecord)) {\n      this.dispatcher.notifyOnBinding(bindingRecord, change.currentValue);\n    } else {\n      bindingRecord.setter(this._directive(bindingRecord.directiveRecord), change.currentValue);\n    }\n  }\n  _addChange(bindingRecord, change, changes) {\n    assert.argumentTypes(bindingRecord, BindingRecord, change, assert.type.any, changes, assert.type.any);\n    if (bindingRecord.callOnChange()) {\n      return ChangeDetectionUtil.addChange(changes, bindingRecord.propertyName, change);\n    } else {\n      return changes;\n    }\n  }\n  _directive(directive) {\n    assert.argumentTypes(directive, DirectiveRecord);\n    return this.directives.directive(directive);\n  }\n  _check(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    try {\n      if (proto.mode === RECORD_TYPE_PIPE || proto.mode === RECORD_TYPE_BINDING_PIPE) {\n        return this._pipeCheck(proto);\n      } else {\n        return this._referenceCheck(proto);\n      }\n    } catch (e) {\n      throw new ChangeDetectionError(proto, e);\n    }\n  }\n  _referenceCheck(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    if (this._pureFuncAndArgsDidNotChange(proto)) {\n      this._setChanged(proto, false);\n      return null;\n    }\n    var prevValue = this._readSelf(proto);\n    var currValue = this._calculateCurrValue(proto);\n    if (!isSame(prevValue, currValue)) {\n      this._writeSelf(proto, currValue);\n      this._setChanged(proto, true);\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, currValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n  _calculateCurrValue(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    switch (proto.mode) {\n      case RECORD_TYPE_SELF:\n        return this._readContext(proto);\n      case RECORD_TYPE_CONST:\n        return proto.funcOrValue;\n      case RECORD_TYPE_PROPERTY:\n        var context = this._readContext(proto);\n        return proto.funcOrValue(context);\n      case RECORD_TYPE_LOCAL:\n        return this.locals.get(proto.name);\n      case RECORD_TYPE_INVOKE_METHOD:\n        var context = this._readContext(proto);\n        var args = this._readArgs(proto);\n        return proto.funcOrValue(context, args);\n      case RECORD_TYPE_KEYED_ACCESS:\n        var arg = this._readArgs(proto)[0];\n        return this._readContext(proto)[arg];\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return FunctionWrapper.apply(this._readContext(proto), this._readArgs(proto));\n      case RECORD_TYPE_INTERPOLATE:\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto));\n      default:\n        throw new BaseException(`Unknown operation ${proto.mode}`);\n    }\n  }\n  _pipeCheck(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    var context = this._readContext(proto);\n    var pipe = this._pipeFor(proto, context);\n    var newValue = pipe.transform(context);\n    if (!ChangeDetectionUtil.noChangeMarker(newValue)) {\n      var prevValue = this._readSelf(proto);\n      this._writeSelf(proto, newValue);\n      this._setChanged(proto, true);\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, newValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n  _pipeFor(proto, context) {\n    assert.argumentTypes(proto, ProtoRecord, context, assert.type.any);\n    var storedPipe = this._readPipe(proto);\n    if (isPresent(storedPipe) && storedPipe.supports(context)) {\n      return storedPipe;\n    }\n    if (isPresent(storedPipe)) {\n      storedPipe.onDestroy();\n    }\n    var bpc = proto.mode === RECORD_TYPE_BINDING_PIPE ? this.bindingPropagationConfig : null;\n    var pipe = this.pipeRegistry.get(proto.name, context, bpc);\n    this._writePipe(proto, pipe);\n    return pipe;\n  }\n  _readContext(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    return this.values[proto.contextIndex];\n  }\n  _readSelf(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    return this.values[proto.selfIndex];\n  }\n  _writeSelf(proto, value) {\n    assert.argumentTypes(proto, ProtoRecord, value, assert.type.any);\n    this.values[proto.selfIndex] = value;\n  }\n  _readPipe(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    return this.pipes[proto.selfIndex];\n  }\n  _writePipe(proto, value) {\n    assert.argumentTypes(proto, ProtoRecord, value, assert.type.any);\n    this.pipes[proto.selfIndex] = value;\n  }\n  _setChanged(proto, value) {\n    assert.argumentTypes(proto, ProtoRecord, value, assert.type.boolean);\n    this.changes[proto.selfIndex] = value;\n  }\n  _pureFuncAndArgsDidNotChange(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    return assert.returnType((proto.isPureFunction() && !this._argsChanged(proto)), assert.type.boolean);\n  }\n  _argsChanged(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    var args = proto.args;\n    for (var i = 0; i < args.length; ++i) {\n      if (this.changes[args[i]]) {\n        return assert.returnType((true), assert.type.boolean);\n      }\n    }\n    return assert.returnType((false), assert.type.boolean);\n  }\n  _readArgs(proto) {\n    assert.argumentTypes(proto, ProtoRecord);\n    var res = ListWrapper.createFixedSize(proto.args.length);\n    var args = proto.args;\n    for (var i = 0; i < args.length; ++i) {\n      res[i] = this.values[args[i]];\n    }\n    return res;\n  }\n}\nObject.defineProperty(DynamicChangeDetector, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.any], [PipeRegistry], [assert.genericType(List, ProtoRecord)], [List]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype.hydrate, \"parameters\", {get: function() {\n    return [[assert.type.any], [assert.type.any], [assert.type.any]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype.detectChangesInRecords, \"parameters\", {get: function() {\n    return [[assert.type.boolean]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._addChange, \"parameters\", {get: function() {\n    return [[BindingRecord], [], []];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._directive, \"parameters\", {get: function() {\n    return [[DirectiveRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._check, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._referenceCheck, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._calculateCurrValue, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._pipeCheck, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._pipeFor, \"parameters\", {get: function() {\n    return [[ProtoRecord], []];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._readContext, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._readSelf, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._writeSelf, \"parameters\", {get: function() {\n    return [[ProtoRecord], []];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._readPipe, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._writePipe, \"parameters\", {get: function() {\n    return [[ProtoRecord], []];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._setChanged, \"parameters\", {get: function() {\n    return [[ProtoRecord], [assert.type.boolean]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._pureFuncAndArgsDidNotChange, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._argsChanged, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nObject.defineProperty(DynamicChangeDetector.prototype._readArgs, \"parameters\", {get: function() {\n    return [[ProtoRecord]];\n  }});\nfunction isSame(a, b) {\n  if (a === b)\n    return true;\n  if (a instanceof String && b instanceof String && a == b)\n    return true;\n  if ((a !== a) && (b !== b))\n    return true;\n  return false;\n}\n//# sourceMappingURL=dynamic_change_detector.js.map\n\n//# sourceMappingURL=./dynamic_change_detector.map"]}