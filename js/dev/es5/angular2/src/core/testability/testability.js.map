{"version":3,"sources":["testability.es6"],"names":[],"mappings":"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","file":"angular2/src/core/testability/testability.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Injectable} from 'angular2/di';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map,\n  MapWrapper,\n  List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {StringWrapper,\n  isBlank,\n  BaseException} from 'angular2/src/facade/lang';\nimport * as getTestabilityModule from 'angular2/src/core/testability/get_testability';\nexport class Testability {\n  constructor() {\n    this._pendingCount = 0;\n    this._callbacks = ListWrapper.create();\n  }\n  increaseCount(delta = 1) {\n    assert.argumentTypes(delta, assert.type.number);\n    this._pendingCount += delta;\n    if (this._pendingCount < 0) {\n      throw new BaseException('pending async requests below zero');\n    } else if (this._pendingCount == 0) {\n      this._runCallbacks();\n    }\n    return this._pendingCount;\n  }\n  _runCallbacks() {\n    while (this._callbacks.length !== 0) {\n      ListWrapper.removeLast(this._callbacks)();\n    }\n  }\n  whenStable(callback) {\n    assert.argumentTypes(callback, Function);\n    ListWrapper.push(this._callbacks, callback);\n    if (this._pendingCount === 0) {\n      this._runCallbacks();\n    }\n  }\n  getPendingCount() {\n    return assert.returnType((this._pendingCount), assert.type.number);\n  }\n  findBindings(using, binding, exactMatch) {\n    assert.argumentTypes(using, assert.type.any, binding, assert.type.string, exactMatch, assert.type.boolean);\n    return assert.returnType(([]), List);\n  }\n}\nObject.defineProperty(Testability, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(Testability.prototype.increaseCount, \"parameters\", {get: function() {\n    return [[assert.type.number]];\n  }});\nObject.defineProperty(Testability.prototype.whenStable, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(Testability.prototype.findBindings, \"parameters\", {get: function() {\n    return [[], [assert.type.string], [assert.type.boolean]];\n  }});\nexport class TestabilityRegistry {\n  constructor() {\n    this._applications = MapWrapper.create();\n    getTestabilityModule.GetTestability.addToWindow(this);\n  }\n  registerApplication(token, testability) {\n    assert.argumentTypes(token, assert.type.any, testability, Testability);\n    MapWrapper.set(this._applications, token, testability);\n  }\n  findTestabilityInTree(elem) {\n    if (elem == null) {\n      return assert.returnType((null), Testability);\n    }\n    if (MapWrapper.contains(this._applications, elem)) {\n      return assert.returnType((MapWrapper.get(this._applications, elem)), Testability);\n    }\n    if (DOM.isShadowRoot(elem)) {\n      return assert.returnType((this.findTestabilityInTree(DOM.getHost(elem))), Testability);\n    }\n    return assert.returnType((this.findTestabilityInTree(DOM.parentElement(elem))), Testability);\n  }\n}\nObject.defineProperty(TestabilityRegistry, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(TestabilityRegistry.prototype.registerApplication, \"parameters\", {get: function() {\n    return [[], [Testability]];\n  }});\n//# sourceMappingURL=testability.js.map\n\n//# sourceMappingURL=./testability.map"]}