{"version":3,"sources":["generic_browser_adapter.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,4GAAoB,UAAS,SAAQ;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;+BAFY,CAAA,SAAQ,AAAC,8BAAjC,SAAS,QAAO;AACN,AAAI,UAAA,2BAMP,SAAM,yBAAuB;AAPpC,wBAAc,iBAAiB,AAAC,0BACL,MAAM,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAA;;QAqClD,AArCkD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAM5C,4BAAkB,CAAlB,UAAoB,EAAC,CAAG;AACtB,iBAAO,CAAA,EAAC,oBAAoB,AAAC,EAAC,CAAC;UACjC;AACA,0BAAgB,CAAhB,UAAkB,EAAC,CAAG,CAAA,OAAM,CAAG,CAAA,IAAG,CAAG;AACnC,iBAAK,cAAc,AAAC,CAAC,EAAC,CAAG,CAAA,MAAK,KAAK,IAAI,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,KAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAChG,aAAC,KAAK,EAAI,CAAA,IAAG,GAAK,KAAG,CAAA,CAAI,QAAM,EAAI,CAAA,OAAM,EAAI,OAAK,CAAA,CAAI,KAAG,CAAC;UAC5D;AACA,mBAAS,CAAT,UAAW,GAAE,CAAG;AACd,iBAAK,cAAc,AAAC,CAAC,GAAE,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC7C,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,IAAG,mBAAmB,AAAC,CAAC,GAAE,CAAC,CAAC;AACxC,eAAG,YAAY,AAAC,CAAC,IAAG,WAAW,AAAC,EAAC,KAAK,CAAG,MAAI,CAAC,CAAC;AAC/C,AAAI,cAAA,CAAA,KAAI,EAAI,CAAA,WAAU,OAAO,AAAC,EAAC,CAAC;AAChC,eAAI,SAAQ,AAAC,CAAC,KAAI,MAAM,CAAC,CAAG;AAC1B,gBAAI;AACF,AAAI,kBAAA,CAAA,QAAO,EAAI,CAAA,KAAI,MAAM,SAAS,CAAC;AACnC,oBAAI,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,QAAO,OAAO,CAAC,CAAC;AACpD,oBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,QAAO,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACxC,sBAAI,CAAE,CAAA,CAAC,EAAI,CAAA,QAAO,CAAE,CAAA,CAAC,CAAC;gBACxB;AAAA,cACF,CAAE,OAAO,CAAA,CAAG,GAAC;AAAA,YACf,KAAO,GAAC;AAAA,AACR,eAAG,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC;AAClB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,KAAI,CAAC,CAAG,KAAG,CAAC,CAAC;UACzC;AACA,0BAAgB,CAAhB,UAAkB,AAAD,CAAG;AAClB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,IAAG,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACvD;AACA,gCAAsB,CAAtB,UAAwB,AAAD,CAAG;AACxB,iBAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAAC,UAAS,AAAC,CAAC,IAAG,WAAW,AAAC,EAAC,KAAK,iBAAiB,CAAC,CAAC,CAAG,CAAA,MAAK,KAAK,QAAQ,CAAC,CAAC;UACtG;AAAA,aAlCgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAGqC,UAAS,CAH5B,EAJ2C;AAuCtE,WAAK,eAAe,AAAC,CAAC,wBAAuB,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC5E,eAAO,EAAC,GAAI,SAAO,AAAC,EAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,wBAAuB,UAAU,kBAAkB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACvG,eAAO,EAAC,EAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,wBAAuB,UAAU,WAAW,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAChG,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IA7C0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAgDuC","file":"angular2/src/dom/generic_browser_adapter.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {ABSTRACT} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {isPresent,\n  isFunction} from 'angular2/src/facade/lang';\nimport {DomAdapter} from './dom_adapter';\nexport class GenericBrowserDomAdapter extends DomAdapter {\n  getDistributedNodes(el) {\n    return el.getDistributedNodes();\n  }\n  resolveAndSetHref(el, baseUrl, href) {\n    assert.argumentTypes(el, assert.type.any, baseUrl, assert.type.string, href, assert.type.string);\n    el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n  }\n  cssToRules(css) {\n    assert.argumentTypes(css, assert.type.string);\n    var style = this.createStyleElement(css);\n    this.appendChild(this.defaultDoc().head, style);\n    var rules = ListWrapper.create();\n    if (isPresent(style.sheet)) {\n      try {\n        var rawRules = style.sheet.cssRules;\n        rules = ListWrapper.createFixedSize(rawRules.length);\n        for (var i = 0; i < rawRules.length; i++) {\n          rules[i] = rawRules[i];\n        }\n      } catch (e) {}\n    } else {}\n    this.remove(style);\n    return assert.returnType((rules), List);\n  }\n  supportsDOMEvents() {\n    return assert.returnType((true), assert.type.boolean);\n  }\n  supportsNativeShadowDOM() {\n    return assert.returnType((isFunction(this.defaultDoc().body.createShadowRoot)), assert.type.boolean);\n  }\n}\nObject.defineProperty(GenericBrowserDomAdapter, \"annotations\", {get: function() {\n    return [new ABSTRACT()];\n  }});\nObject.defineProperty(GenericBrowserDomAdapter.prototype.resolveAndSetHref, \"parameters\", {get: function() {\n    return [[], [assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(GenericBrowserDomAdapter.prototype.cssToRules, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\n//# sourceMappingURL=generic_browser_adapter.js.map\n\n//# sourceMappingURL=./generic_browser_adapter.map"]}