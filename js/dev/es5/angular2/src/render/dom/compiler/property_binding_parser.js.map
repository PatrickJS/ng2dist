{"version":3,"sources":["property_binding_parser.es6"],"names":[],"mappings":"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","file":"angular2/src/render/dom/compiler/property_binding_parser.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {isPresent,\n  RegExpWrapper} from 'angular2/src/facade/lang';\nimport {MapWrapper} from 'angular2/src/facade/collection';\nimport {Parser} from 'angular2/change_detection';\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\nimport {dashCaseToCamelCase} from '../util';\nvar BIND_NAME_REGEXP = RegExpWrapper.create('^(?:(?:(?:(bind-)|(var-|#)|(on-))(.+))|\\\\[([^\\\\]]+)\\\\]|\\\\(([^\\\\)]+)\\\\))$');\nexport class PropertyBindingParser extends CompileStep {\n  constructor(parser) {\n    assert.argumentTypes(parser, Parser);\n    super();\n    this._parser = parser;\n  }\n  process(parent, current, control) {\n    assert.argumentTypes(parent, CompileElement, current, CompileElement, control, CompileControl);\n    var attrs = current.attrs();\n    var newAttrs = MapWrapper.create();\n    MapWrapper.forEach(attrs, (attrValue, attrName) => {\n      var bindParts = RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);\n      if (isPresent(bindParts)) {\n        if (isPresent(bindParts[1])) {\n          this._bindProperty(bindParts[4], attrValue, current, newAttrs);\n        } else if (isPresent(bindParts[2])) {\n          var identifier = bindParts[4];\n          var value = attrValue == '' ? '\\$implicit' : attrValue;\n          this._bindVariable(identifier, value, current, newAttrs);\n        } else if (isPresent(bindParts[3])) {\n          this._bindEvent(bindParts[4], attrValue, current, newAttrs);\n        } else if (isPresent(bindParts[5])) {\n          this._bindProperty(bindParts[5], attrValue, current, newAttrs);\n        } else if (isPresent(bindParts[6])) {\n          this._bindEvent(bindParts[6], attrValue, current, newAttrs);\n        }\n      } else {\n        var expr = this._parser.parseInterpolation(attrValue, current.elementDescription);\n        if (isPresent(expr)) {\n          this._bindPropertyAst(attrName, expr, current, newAttrs);\n        }\n      }\n    });\n    MapWrapper.forEach(newAttrs, (attrValue, attrName) => {\n      MapWrapper.set(attrs, attrName, attrValue);\n    });\n  }\n  _bindVariable(identifier, value, current, newAttrs) {\n    assert.argumentTypes(identifier, assert.type.any, value, assert.type.any, current, CompileElement, newAttrs, assert.type.any);\n    current.bindElement().bindVariable(dashCaseToCamelCase(identifier), value);\n    MapWrapper.set(newAttrs, identifier, value);\n  }\n  _bindProperty(name, expression, current, newAttrs) {\n    assert.argumentTypes(name, assert.type.any, expression, assert.type.any, current, CompileElement, newAttrs, assert.type.any);\n    this._bindPropertyAst(name, this._parser.parseBinding(expression, current.elementDescription), current, newAttrs);\n  }\n  _bindPropertyAst(name, ast, current, newAttrs) {\n    assert.argumentTypes(name, assert.type.any, ast, assert.type.any, current, CompileElement, newAttrs, assert.type.any);\n    var binder = current.bindElement();\n    var camelCaseName = dashCaseToCamelCase(name);\n    binder.bindProperty(camelCaseName, ast);\n    MapWrapper.set(newAttrs, name, ast.source);\n  }\n  _bindEvent(name, expression, current, newAttrs) {\n    assert.argumentTypes(name, assert.type.any, expression, assert.type.any, current, CompileElement, newAttrs, assert.type.any);\n    current.bindElement().bindEvent(dashCaseToCamelCase(name), this._parser.parseAction(expression, current.elementDescription));\n  }\n}\nObject.defineProperty(PropertyBindingParser, \"parameters\", {get: function() {\n    return [[Parser]];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype.process, \"parameters\", {get: function() {\n    return [[CompileElement], [CompileElement], [CompileControl]];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._bindVariable, \"parameters\", {get: function() {\n    return [[], [], [CompileElement], []];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._bindProperty, \"parameters\", {get: function() {\n    return [[], [], [CompileElement], []];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._bindPropertyAst, \"parameters\", {get: function() {\n    return [[], [], [CompileElement], []];\n  }});\nObject.defineProperty(PropertyBindingParser.prototype._bindEvent, \"parameters\", {get: function() {\n    return [[], [], [CompileElement], []];\n  }});\n//# sourceMappingURL=property_binding_parser.js.map\n\n//# sourceMappingURL=./property_binding_parser.map"]}