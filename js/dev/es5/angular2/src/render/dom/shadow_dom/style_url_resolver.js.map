{"version":3,"sources":["style_url_resolver.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8GAAoB,UAAS,SAAQ;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,iBAAoB,KAAG,WAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,aAAoB,KAAG,OAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;uBAFY,CAAA,SAAQ,AAAC,sBAAjC,SAAS,AAAD;AACE,AAAI,UAAA,mBAKP,SAAM,iBAAe,CACd,QAAO,CAAG;AACpB,eAAK,cAAc,AAAC,CAAC,QAAO,CAAG,YAAU,CAAC,CAAC;AAC3C,aAAG,UAAU,EAAI,SAAO,CAAC;QAC3B,AATgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAS5C,oBAAU,CAAV,UAAY,OAAM,CAAG,CAAA,OAAM,CAAG;AAC5B,iBAAK,cAAc,AAAC,CAAC,OAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC9E,kBAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,OAAM,CAAG,UAAQ,CAAG,QAAM,CAAC,CAAC;AACxD,kBAAM,EAAI,CAAA,IAAG,aAAa,AAAC,CAAC,OAAM,CAAG,aAAW,CAAG,QAAM,CAAC,CAAC;AAC3D,iBAAO,QAAM,CAAC;UAChB;AACA,qBAAW,CAAX,UAAa,OAAM,CAAG,CAAA,EAAC,CAAG,CAAA,OAAM;;AAC9B,iBAAK,cAAc,AAAC,CAAC,OAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAG,GAAC,CAAG,OAAK,CAAG,QAAM,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC1F,iBAAO,CAAA,aAAY,iBAAiB,AAAC,CAAC,OAAM,CAAG,GAAC,GAAG,SAAC,CAAA,CAAM;AACxD,AAAI,gBAAA,CAAA,GAAE,EAAI,CAAA,CAAA,CAAE,CAAA,CAAC,CAAC;AACd,AAAI,gBAAA,CAAA,GAAE,EAAI,CAAA,aAAY,WAAW,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAG,SAAO,CAAG,GAAC,CAAC,CAAC;AACtD,AAAI,gBAAA,CAAA,IAAG,EAAI,CAAA,CAAA,CAAE,CAAA,CAAC,CAAC;AACf,AAAI,gBAAA,CAAA,WAAU,EAAI,CAAA,cAAa,QAAQ,AAAC,CAAC,OAAM,CAAG,IAAE,CAAC,CAAC;AACtD,mBAAO,CAAA,GAAE,EAAI,IAAE,CAAA,CAAI,YAAU,CAAA,CAAI,IAAE,CAAA,CAAI,KAAG,CAAC;YAC7C,EAAC,CAAC;UACJ;aAvB8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AA4BtE,WAAK,eAAe,AAAC,CAAC,gBAAe,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACpE,eAAO,EAAC,GAAI,WAAS,AAAC,EAAC,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACnE,eAAO,EAAC,CAAC,WAAU,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,UAAU,YAAY,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACzF,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,UAAU,aAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC1F,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAG,EAAC,MAAK,CAAC,CAAG,EAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;gBACW,CAAA,aAAY,OAAO,AAAC,CAAC,sBAAqB,CAAC;mBACxC,CAAA,aAAY,OAAO,AAAC,CAAC,mDAAkD,CAAC;eAC5E,CAAA,aAAY,OAAO,AAAC,CAAC,OAAM,CAAC;IAxCZ;EAC3B,CAAA;AADI,CAAC,CAAC;AA2CkC","file":"angular2/src/render/dom/shadow_dom/style_url_resolver.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Injectable} from 'angular2/di';\nimport {RegExp,\n  RegExpWrapper,\n  StringWrapper} from 'angular2/src/facade/lang';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nexport class StyleUrlResolver {\n  constructor(resolver) {\n    assert.argumentTypes(resolver, UrlResolver);\n    this._resolver = resolver;\n  }\n  resolveUrls(cssText, baseUrl) {\n    assert.argumentTypes(cssText, assert.type.string, baseUrl, assert.type.string);\n    cssText = this._replaceUrls(cssText, _cssUrlRe, baseUrl);\n    cssText = this._replaceUrls(cssText, _cssImportRe, baseUrl);\n    return cssText;\n  }\n  _replaceUrls(cssText, re, baseUrl) {\n    assert.argumentTypes(cssText, assert.type.string, re, RegExp, baseUrl, assert.type.string);\n    return StringWrapper.replaceAllMapped(cssText, re, (m) => {\n      var pre = m[1];\n      var url = StringWrapper.replaceAll(m[2], _quoteRe, '');\n      var post = m[3];\n      var resolvedUrl = this._resolver.resolve(baseUrl, url);\n      return pre + \"'\" + resolvedUrl + \"'\" + post;\n    });\n  }\n}\nObject.defineProperty(StyleUrlResolver, \"annotations\", {get: function() {\n    return [new Injectable()];\n  }});\nObject.defineProperty(StyleUrlResolver, \"parameters\", {get: function() {\n    return [[UrlResolver]];\n  }});\nObject.defineProperty(StyleUrlResolver.prototype.resolveUrls, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\nObject.defineProperty(StyleUrlResolver.prototype._replaceUrls, \"parameters\", {get: function() {\n    return [[assert.type.string], [RegExp], [assert.type.string]];\n  }});\nvar _cssUrlRe = RegExpWrapper.create('(url\\\\()([^)]*)(\\\\))');\nvar _cssImportRe = RegExpWrapper.create('(@import[\\\\s]+(?!url\\\\())[\\'\"]([^\\'\"]*)[\\'\"](.*;)');\nvar _quoteRe = RegExpWrapper.create('[\\'\"]');\n//# sourceMappingURL=style_url_resolver.js.map\n\n//# sourceMappingURL=./style_url_resolver.map"]}