{"version":3,"sources":["injector.es6"],"names":[],"mappings":"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","file":"angular2/src/di/injector.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Map,\n  List,\n  MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {ResolvedBinding,\n  Binding,\n  BindingBuilder,\n  bind} from './binding';\nimport {ProviderError,\n  NoProviderError,\n  AsyncBindingError,\n  CyclicDependencyError,\n  InstantiationError,\n  InvalidBindingError} from './exceptions';\nimport {FunctionWrapper,\n  Type,\n  isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {Key} from './key';\nvar _constructing = new Object();\nvar _notFound = new Object();\nclass _Waiting {\n  constructor(promise) {\n    assert.argumentTypes(promise, Promise);\n    this.promise = promise;\n  }\n}\nObject.defineProperty(_Waiting, \"parameters\", {get: function() {\n    return [[Promise]];\n  }});\nfunction _isWaiting(obj) {\n  return assert.returnType((obj instanceof _Waiting), assert.type.boolean);\n}\nexport class Injector {\n  static resolve(bindings) {\n    assert.argumentTypes(bindings, List);\n    var resolvedBindings = _resolveBindings(bindings);\n    var flatten = _flattenBindings(resolvedBindings, MapWrapper.create());\n    return assert.returnType((_createListOfBindings(flatten)), assert.genericType(List, ResolvedBinding));\n  }\n  static resolveAndCreate(bindings, {defaultBindings = false} = {}) {\n    assert.argumentTypes(bindings, List);\n    return new Injector(Injector.resolve(bindings), null, defaultBindings);\n  }\n  static fromResolvedBindings(bindings, {defaultBindings = false} = {}) {\n    assert.argumentTypes(bindings, assert.genericType(List, ResolvedBinding));\n    return new Injector(bindings, null, defaultBindings);\n  }\n  constructor(bindings, parent, defaultBindings) {\n    assert.argumentTypes(bindings, assert.genericType(List, ResolvedBinding), parent, Injector, defaultBindings, assert.type.boolean);\n    this._bindings = bindings;\n    this._instances = this._createInstances();\n    this._parent = parent;\n    this._defaultBindings = defaultBindings;\n    this._asyncStrategy = new _AsyncInjectorStrategy(this);\n    this._syncStrategy = new _SyncInjectorStrategy(this);\n  }\n  get(token) {\n    return this._getByKey(Key.get(token), false, false, false);\n  }\n  getOptional(token) {\n    return this._getByKey(Key.get(token), false, false, true);\n  }\n  asyncGet(token) {\n    return this._getByKey(Key.get(token), true, false, false);\n  }\n  resolveAndCreateChild(bindings) {\n    assert.argumentTypes(bindings, List);\n    return assert.returnType((new Injector(Injector.resolve(bindings), this, false)), Injector);\n  }\n  createChildFromResolved(bindings) {\n    assert.argumentTypes(bindings, assert.genericType(List, ResolvedBinding));\n    return assert.returnType((new Injector(bindings, this, false)), Injector);\n  }\n  _createInstances() {\n    return assert.returnType((ListWrapper.createFixedSize(Key.numberOfKeys + 1)), List);\n  }\n  _getByKey(key, returnPromise, returnLazy, optional) {\n    if (returnLazy) {\n      return () => this._getByKey(key, returnPromise, false, optional);\n    }\n    var strategy = returnPromise ? this._asyncStrategy : this._syncStrategy;\n    var instance = strategy.readFromCache(key);\n    if (instance !== _notFound)\n      return instance;\n    instance = strategy.instantiate(key);\n    if (instance !== _notFound)\n      return instance;\n    if (isPresent(this._parent)) {\n      return this._parent._getByKey(key, returnPromise, returnLazy, optional);\n    }\n    if (optional) {\n      return null;\n    } else {\n      throw new NoProviderError(key);\n    }\n  }\n  _resolveDependencies(key, binding, forceAsync) {\n    try {\n      var getDependency = (d) => this._getByKey(d.key, forceAsync || d.asPromise, d.lazy, d.optional);\n      return assert.returnType((ListWrapper.map(binding.dependencies, getDependency)), List);\n    } catch (e) {\n      this._clear(key);\n      if (e instanceof ProviderError)\n        e.addKey(key);\n      throw e;\n    }\n  }\n  _getInstance(key) {\n    assert.argumentTypes(key, Key);\n    if (this._instances.length <= key.id)\n      return null;\n    return ListWrapper.get(this._instances, key.id);\n  }\n  _setInstance(key, obj) {\n    assert.argumentTypes(key, Key, obj, assert.type.any);\n    ListWrapper.set(this._instances, key.id, obj);\n  }\n  _getBinding(key) {\n    assert.argumentTypes(key, Key);\n    var binding = this._bindings.length <= key.id ? null : ListWrapper.get(this._bindings, key.id);\n    if (isBlank(binding) && this._defaultBindings) {\n      return bind(key.token).toClass(key.token).resolve();\n    } else {\n      return binding;\n    }\n  }\n  _markAsConstructing(key) {\n    assert.argumentTypes(key, Key);\n    this._setInstance(key, _constructing);\n  }\n  _clear(key) {\n    assert.argumentTypes(key, Key);\n    this._setInstance(key, null);\n  }\n}\nObject.defineProperty(Injector, \"parameters\", {get: function() {\n    return [[assert.genericType(List, ResolvedBinding)], [Injector], [assert.type.boolean]];\n  }});\nObject.defineProperty(Injector.resolve, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nObject.defineProperty(Injector.resolveAndCreate, \"parameters\", {get: function() {\n    return [[List], []];\n  }});\nObject.defineProperty(Injector.fromResolvedBindings, \"parameters\", {get: function() {\n    return [[assert.genericType(List, ResolvedBinding)], []];\n  }});\nObject.defineProperty(Injector.prototype.resolveAndCreateChild, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nObject.defineProperty(Injector.prototype.createChildFromResolved, \"parameters\", {get: function() {\n    return [[assert.genericType(List, ResolvedBinding)]];\n  }});\nObject.defineProperty(Injector.prototype._getByKey, \"parameters\", {get: function() {\n    return [[Key], [assert.type.boolean], [assert.type.boolean], [assert.type.boolean]];\n  }});\nObject.defineProperty(Injector.prototype._resolveDependencies, \"parameters\", {get: function() {\n    return [[Key], [ResolvedBinding], [assert.type.boolean]];\n  }});\nObject.defineProperty(Injector.prototype._getInstance, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(Injector.prototype._setInstance, \"parameters\", {get: function() {\n    return [[Key], []];\n  }});\nObject.defineProperty(Injector.prototype._getBinding, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(Injector.prototype._markAsConstructing, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(Injector.prototype._clear, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nclass _SyncInjectorStrategy {\n  constructor(injector) {\n    assert.argumentTypes(injector, Injector);\n    this.injector = injector;\n  }\n  readFromCache(key) {\n    assert.argumentTypes(key, Key);\n    if (key.token === Injector) {\n      return this.injector;\n    }\n    var instance = this.injector._getInstance(key);\n    if (instance === _constructing) {\n      throw new CyclicDependencyError(key);\n    } else if (isPresent(instance) && !_isWaiting(instance)) {\n      return instance;\n    } else {\n      return _notFound;\n    }\n  }\n  instantiate(key) {\n    assert.argumentTypes(key, Key);\n    var binding = this.injector._getBinding(key);\n    if (isBlank(binding))\n      return _notFound;\n    if (binding.providedAsPromise)\n      throw new AsyncBindingError(key);\n    this.injector._markAsConstructing(key);\n    var deps = this.injector._resolveDependencies(key, binding, false);\n    return this._createInstance(key, binding, deps);\n  }\n  _createInstance(key, binding, deps) {\n    assert.argumentTypes(key, Key, binding, ResolvedBinding, deps, List);\n    try {\n      var instance = FunctionWrapper.apply(binding.factory, deps);\n      this.injector._setInstance(key, instance);\n      return instance;\n    } catch (e) {\n      this.injector._clear(key);\n      throw new InstantiationError(e, key);\n    }\n  }\n}\nObject.defineProperty(_SyncInjectorStrategy, \"parameters\", {get: function() {\n    return [[Injector]];\n  }});\nObject.defineProperty(_SyncInjectorStrategy.prototype.readFromCache, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(_SyncInjectorStrategy.prototype.instantiate, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(_SyncInjectorStrategy.prototype._createInstance, \"parameters\", {get: function() {\n    return [[Key], [ResolvedBinding], [List]];\n  }});\nclass _AsyncInjectorStrategy {\n  constructor(injector) {\n    assert.argumentTypes(injector, Injector);\n    this.injector = injector;\n  }\n  readFromCache(key) {\n    assert.argumentTypes(key, Key);\n    if (key.token === Injector) {\n      return PromiseWrapper.resolve(this.injector);\n    }\n    var instance = this.injector._getInstance(key);\n    if (instance === _constructing) {\n      throw new CyclicDependencyError(key);\n    } else if (_isWaiting(instance)) {\n      return instance.promise;\n    } else if (isPresent(instance)) {\n      return PromiseWrapper.resolve(instance);\n    } else {\n      return _notFound;\n    }\n  }\n  instantiate(key) {\n    var binding = this.injector._getBinding(key);\n    if (isBlank(binding))\n      return _notFound;\n    this.injector._markAsConstructing(key);\n    var deps = this.injector._resolveDependencies(key, binding, true);\n    var depsPromise = PromiseWrapper.all(deps);\n    var promise = PromiseWrapper.then(depsPromise, null, (e) => this._errorHandler(key, e)).then((deps) => this._findOrCreate(key, binding, deps)).then((instance) => this._cacheInstance(key, instance));\n    this.injector._setInstance(key, new _Waiting(promise));\n    return promise;\n  }\n  _errorHandler(key, e) {\n    assert.argumentTypes(key, Key, e, assert.type.any);\n    if (e instanceof ProviderError)\n      e.addKey(key);\n    return assert.returnType((PromiseWrapper.reject(e)), Promise);\n  }\n  _findOrCreate(key, binding, deps) {\n    assert.argumentTypes(key, Key, binding, ResolvedBinding, deps, List);\n    try {\n      var instance = this.injector._getInstance(key);\n      if (!_isWaiting(instance))\n        return instance;\n      return FunctionWrapper.apply(binding.factory, deps);\n    } catch (e) {\n      this.injector._clear(key);\n      throw new InstantiationError(e, key);\n    }\n  }\n  _cacheInstance(key, instance) {\n    this.injector._setInstance(key, instance);\n    return instance;\n  }\n}\nObject.defineProperty(_AsyncInjectorStrategy, \"parameters\", {get: function() {\n    return [[Injector]];\n  }});\nObject.defineProperty(_AsyncInjectorStrategy.prototype.readFromCache, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(_AsyncInjectorStrategy.prototype.instantiate, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nObject.defineProperty(_AsyncInjectorStrategy.prototype._errorHandler, \"parameters\", {get: function() {\n    return [[Key], []];\n  }});\nObject.defineProperty(_AsyncInjectorStrategy.prototype._findOrCreate, \"parameters\", {get: function() {\n    return [[Key], [ResolvedBinding], [List]];\n  }});\nfunction _resolveBindings(bindings) {\n  assert.argumentTypes(bindings, List);\n  var resolvedList = ListWrapper.createFixedSize(bindings.length);\n  for (var i = 0; i < bindings.length; i++) {\n    var unresolved = bindings[i];\n    var resolved;\n    if (unresolved instanceof ResolvedBinding) {\n      resolved = unresolved;\n    } else if (unresolved instanceof Type) {\n      resolved = bind(unresolved).toClass(unresolved).resolve();\n    } else if (unresolved instanceof Binding) {\n      resolved = unresolved.resolve();\n    } else if (unresolved instanceof List) {\n      resolved = _resolveBindings(unresolved);\n    } else if (unresolved instanceof BindingBuilder) {\n      throw new InvalidBindingError(unresolved.token);\n    } else {\n      throw new InvalidBindingError(unresolved);\n    }\n    resolvedList[i] = resolved;\n  }\n  return assert.returnType((resolvedList), List);\n}\nObject.defineProperty(_resolveBindings, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nfunction _createListOfBindings(flattenedBindings) {\n  var bindings = ListWrapper.createFixedSize(Key.numberOfKeys + 1);\n  MapWrapper.forEach(flattenedBindings, (v, keyId) => bindings[keyId] = v);\n  return assert.returnType((bindings), List);\n}\nfunction _flattenBindings(bindings, res) {\n  assert.argumentTypes(bindings, List, res, Map);\n  ListWrapper.forEach(bindings, function(b) {\n    if (b instanceof ResolvedBinding) {\n      MapWrapper.set(res, b.key.id, b);\n    } else if (b instanceof List) {\n      _flattenBindings(b, res);\n    }\n  });\n  return res;\n}\nObject.defineProperty(_flattenBindings, \"parameters\", {get: function() {\n    return [[List], [Map]];\n  }});\n//# sourceMappingURL=injector.js.map\n\n//# sourceMappingURL=./injector.map"]}