{"version":3,"sources":["binding.es6"],"names":[],"mappings":"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","file":"angular2/src/di/binding.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Type,\n  isBlank,\n  isPresent,\n  CONST} from 'angular2/src/facade/lang';\nimport {List,\n  MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {Key} from './key';\nimport {Inject,\n  InjectLazy,\n  InjectPromise,\n  Optional,\n  DependencyAnnotation} from './annotations';\nimport {NoAnnotationError} from './exceptions';\nexport class Dependency {\n  constructor(key, asPromise, lazy, optional, properties) {\n    assert.argumentTypes(key, Key, asPromise, assert.type.boolean, lazy, assert.type.boolean, optional, assert.type.boolean, properties, List);\n    this.key = key;\n    this.asPromise = asPromise;\n    this.lazy = lazy;\n    this.optional = optional;\n    this.properties = properties;\n  }\n  static fromKey(key) {\n    assert.argumentTypes(key, Key);\n    return new Dependency(key, false, false, false, []);\n  }\n}\nObject.defineProperty(Dependency, \"parameters\", {get: function() {\n    return [[Key], [assert.type.boolean], [assert.type.boolean], [assert.type.boolean], [List]];\n  }});\nObject.defineProperty(Dependency.fromKey, \"parameters\", {get: function() {\n    return [[Key]];\n  }});\nvar _EMPTY_LIST = [];\nexport class Binding {\n  constructor(token, {toClass,\n    toValue,\n    toAlias,\n    toFactory,\n    toAsyncFactory,\n    deps}) {\n    this.token = token;\n    this.toClass = toClass;\n    this.toValue = toValue;\n    this.toAlias = toAlias;\n    this.toFactory = toFactory;\n    this.toAsyncFactory = toAsyncFactory;\n    this.dependencies = deps;\n  }\n  resolve() {\n    var factoryFn;\n    var resolvedDeps;\n    var isAsync = false;\n    if (isPresent(this.toClass)) {\n      factoryFn = reflector.factory(this.toClass);\n      resolvedDeps = _dependenciesFor(this.toClass);\n    } else if (isPresent(this.toAlias)) {\n      factoryFn = (aliasInstance) => aliasInstance;\n      resolvedDeps = [Dependency.fromKey(Key.get(this.toAlias))];\n    } else if (isPresent(this.toFactory)) {\n      factoryFn = this.toFactory;\n      resolvedDeps = _constructDependencies(this.toFactory, this.dependencies);\n    } else if (isPresent(this.toAsyncFactory)) {\n      factoryFn = this.toAsyncFactory;\n      resolvedDeps = _constructDependencies(this.toAsyncFactory, this.dependencies);\n      isAsync = true;\n    } else {\n      factoryFn = () => this.toValue;\n      resolvedDeps = _EMPTY_LIST;\n    }\n    return assert.returnType((new ResolvedBinding(Key.get(this.token), factoryFn, resolvedDeps, isAsync)), ResolvedBinding);\n  }\n}\nObject.defineProperty(Binding, \"annotations\", {get: function() {\n    return [new CONST()];\n  }});\nexport class ResolvedBinding {\n  constructor(key, factory, dependencies, providedAsPromise) {\n    assert.argumentTypes(key, Key, factory, Function, dependencies, assert.genericType(List, Dependency), providedAsPromise, assert.type.boolean);\n    this.key = key;\n    this.factory = factory;\n    this.dependencies = dependencies;\n    this.providedAsPromise = providedAsPromise;\n  }\n}\nObject.defineProperty(ResolvedBinding, \"parameters\", {get: function() {\n    return [[Key], [Function], [assert.genericType(List, Dependency)], [assert.type.boolean]];\n  }});\nexport function bind(token) {\n  return assert.returnType((new BindingBuilder(token)), BindingBuilder);\n}\nexport class BindingBuilder {\n  constructor(token) {\n    this.token = token;\n  }\n  toClass(type) {\n    assert.argumentTypes(type, Type);\n    return assert.returnType((new Binding(this.token, {toClass: type})), Binding);\n  }\n  toValue(value) {\n    return assert.returnType((new Binding(this.token, {toValue: value})), Binding);\n  }\n  toAlias(aliasToken) {\n    return assert.returnType((new Binding(this.token, {toAlias: aliasToken})), Binding);\n  }\n  toFactory(factoryFunction, dependencies = null) {\n    assert.argumentTypes(factoryFunction, Function, dependencies, List);\n    return assert.returnType((new Binding(this.token, {\n      toFactory: factoryFunction,\n      deps: dependencies\n    })), Binding);\n  }\n  toAsyncFactory(factoryFunction, dependencies = null) {\n    assert.argumentTypes(factoryFunction, Function, dependencies, List);\n    return assert.returnType((new Binding(this.token, {\n      toAsyncFactory: factoryFunction,\n      deps: dependencies\n    })), Binding);\n  }\n}\nObject.defineProperty(BindingBuilder.prototype.toClass, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nObject.defineProperty(BindingBuilder.prototype.toFactory, \"parameters\", {get: function() {\n    return [[Function], [List]];\n  }});\nObject.defineProperty(BindingBuilder.prototype.toAsyncFactory, \"parameters\", {get: function() {\n    return [[Function], [List]];\n  }});\nfunction _constructDependencies(factoryFunction, dependencies) {\n  return isBlank(dependencies) ? _dependenciesFor(factoryFunction) : ListWrapper.map(dependencies, (t) => Dependency.fromKey(Key.get(t)));\n}\nObject.defineProperty(_constructDependencies, \"parameters\", {get: function() {\n    return [[Function], [List]];\n  }});\nfunction _dependenciesFor(typeOrFunc) {\n  var params = reflector.parameters(typeOrFunc);\n  if (isBlank(params))\n    return assert.returnType(([]), List);\n  if (ListWrapper.any(params, (p) => isBlank(p)))\n    throw new NoAnnotationError(typeOrFunc);\n  return assert.returnType((ListWrapper.map(params, (p) => _extractToken(typeOrFunc, p))), List);\n}\nfunction _extractToken(typeOrFunc, annotations) {\n  var depProps = [];\n  var token = null;\n  var optional = false;\n  var lazy = false;\n  var asPromise = false;\n  for (var i = 0; i < annotations.length; ++i) {\n    var paramAnnotation = annotations[i];\n    if (paramAnnotation instanceof Type) {\n      token = paramAnnotation;\n    } else if (paramAnnotation instanceof Inject) {\n      token = paramAnnotation.token;\n    } else if (paramAnnotation instanceof InjectPromise) {\n      token = paramAnnotation.token;\n      asPromise = true;\n    } else if (paramAnnotation instanceof InjectLazy) {\n      token = paramAnnotation.token;\n      lazy = true;\n    } else if (paramAnnotation instanceof Optional) {\n      optional = true;\n    } else if (paramAnnotation instanceof DependencyAnnotation) {\n      if (isPresent(paramAnnotation.token)) {\n        token = paramAnnotation.token;\n      }\n      ListWrapper.push(depProps, paramAnnotation);\n    }\n  }\n  if (isPresent(token)) {\n    return _createDependency(token, asPromise, lazy, optional, depProps);\n  } else {\n    throw new NoAnnotationError(typeOrFunc);\n  }\n}\nfunction _createDependency(token, asPromise, lazy, optional, depProps) {\n  return assert.returnType((new Dependency(Key.get(token), asPromise, lazy, optional, depProps)), Dependency);\n}\n//# sourceMappingURL=binding.js.map\n\n//# sourceMappingURL=./binding.map"]}