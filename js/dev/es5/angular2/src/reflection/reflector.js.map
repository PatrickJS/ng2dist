{"version":3,"sources":["reflector.es6"],"names":[],"mappings":"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","file":"angular2/src/reflection/reflector.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Type,\n  isPresent,\n  stringify,\n  BaseException} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper,\n  Map,\n  MapWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {SetterFn,\n  GetterFn,\n  MethodFn} from './types';\nexport {SetterFn, GetterFn, MethodFn} from './types';\nexport class Reflector {\n  constructor(reflectionCapabilities) {\n    this._typeInfo = MapWrapper.create();\n    this._getters = MapWrapper.create();\n    this._setters = MapWrapper.create();\n    this._methods = MapWrapper.create();\n    this.reflectionCapabilities = reflectionCapabilities;\n  }\n  registerType(type, typeInfo) {\n    MapWrapper.set(this._typeInfo, type, typeInfo);\n  }\n  registerGetters(getters) {\n    _mergeMaps(this._getters, getters);\n  }\n  registerSetters(setters) {\n    _mergeMaps(this._setters, setters);\n  }\n  registerMethods(methods) {\n    _mergeMaps(this._methods, methods);\n  }\n  factory(type) {\n    assert.argumentTypes(type, Type);\n    if (MapWrapper.contains(this._typeInfo, type)) {\n      return assert.returnType((MapWrapper.get(this._typeInfo, type)[\"factory\"]), Function);\n    } else {\n      return assert.returnType((this.reflectionCapabilities.factory(type)), Function);\n    }\n  }\n  parameters(typeOfFunc) {\n    if (MapWrapper.contains(this._typeInfo, typeOfFunc)) {\n      return assert.returnType((MapWrapper.get(this._typeInfo, typeOfFunc)[\"parameters\"]), List);\n    } else {\n      return assert.returnType((this.reflectionCapabilities.parameters(typeOfFunc)), List);\n    }\n  }\n  annotations(typeOfFunc) {\n    if (MapWrapper.contains(this._typeInfo, typeOfFunc)) {\n      return assert.returnType((MapWrapper.get(this._typeInfo, typeOfFunc)[\"annotations\"]), List);\n    } else {\n      return assert.returnType((this.reflectionCapabilities.annotations(typeOfFunc)), List);\n    }\n  }\n  getter(name) {\n    assert.argumentTypes(name, assert.type.string);\n    if (MapWrapper.contains(this._getters, name)) {\n      return assert.returnType((MapWrapper.get(this._getters, name)), GetterFn);\n    } else {\n      return assert.returnType((this.reflectionCapabilities.getter(name)), GetterFn);\n    }\n  }\n  setter(name) {\n    assert.argumentTypes(name, assert.type.string);\n    if (MapWrapper.contains(this._setters, name)) {\n      return assert.returnType((MapWrapper.get(this._setters, name)), SetterFn);\n    } else {\n      return assert.returnType((this.reflectionCapabilities.setter(name)), SetterFn);\n    }\n  }\n  method(name) {\n    assert.argumentTypes(name, assert.type.string);\n    if (MapWrapper.contains(this._methods, name)) {\n      return assert.returnType((MapWrapper.get(this._methods, name)), MethodFn);\n    } else {\n      return assert.returnType((this.reflectionCapabilities.method(name)), MethodFn);\n    }\n  }\n}\nObject.defineProperty(Reflector.prototype.factory, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nObject.defineProperty(Reflector.prototype.getter, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Reflector.prototype.setter, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(Reflector.prototype.method, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction _mergeMaps(target, config) {\n  StringMapWrapper.forEach(config, (v, k) => MapWrapper.set(target, k, v));\n}\nObject.defineProperty(_mergeMaps, \"parameters\", {get: function() {\n    return [[Map], []];\n  }});\n//# sourceMappingURL=reflector.js.map\n\n//# sourceMappingURL=./reflector.map"]}