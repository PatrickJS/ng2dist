{"version":3,"sources":["selenium_webdriver_adapter.es6"],"names":[],"mappings":"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","file":"benchpress/src/webdriver/selenium_webdriver_adapter.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {bind} from 'angular2/di';\nimport {WebDriverAdapter} from '../web_driver_adapter';\nimport webdriver from 'selenium-webdriver';\nexport class SeleniumWebDriverAdapter extends WebDriverAdapter {\n  static get PROTRACTOR_BINDINGS() {\n    return _PROTRACTOR_BINDINGS;\n  }\n  constructor(driver) {\n    super();\n    this._driver = driver;\n  }\n  _convertPromise(thenable) {\n    var completer = PromiseWrapper.completer();\n    thenable.then((data) => completer.resolve(convertToLocalProcess(data)), completer.reject);\n    return completer.promise;\n  }\n  waitFor(callback) {\n    return assert.returnType((this._convertPromise(this._driver.controlFlow().execute(callback))), Promise);\n  }\n  executeScript(script) {\n    assert.argumentTypes(script, assert.type.string);\n    return assert.returnType((this._convertPromise(this._driver.executeScript(script))), Promise);\n  }\n  capabilities() {\n    return assert.returnType((this._convertPromise(this._driver.getCapabilities().then((capsObject) => capsObject.toJSON()))), Promise);\n  }\n  logs(type) {\n    assert.argumentTypes(type, assert.type.string);\n    return assert.returnType((this._convertPromise(this._driver.schedule(new webdriver.Command(webdriver.CommandName.GET_LOG).setParameter('type', type), 'WebDriver.manage().logs().get(' + type + ')'))), Promise);\n  }\n}\nObject.defineProperty(SeleniumWebDriverAdapter.prototype.executeScript, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(SeleniumWebDriverAdapter.prototype.logs, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nfunction convertToLocalProcess(data) {\n  var serialized = JSON.stringify(data);\n  if ('' + serialized === 'undefined') {\n    return undefined;\n  }\n  return JSON.parse(serialized);\n}\nvar _PROTRACTOR_BINDINGS = [bind(WebDriverAdapter).toFactory(() => new SeleniumWebDriverAdapter(global.browser), [])];\n//# sourceMappingURL=selenium_webdriver_adapter.es6.map\n\n//# sourceMappingURL=./selenium_webdriver_adapter.map"]}