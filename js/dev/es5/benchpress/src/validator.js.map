{"version":3,"sources":["validator.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,8HAAoB,UAAS,SAAQ;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,WAAoB,KAAG,KAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;gBAFY,CAAA,SAAQ,AAAC,eAAjC,SAAS,AAAD;AACE,AAAI,UAAA,YAMP,SAAM,UAAQ;;QAWrB,AAjBkD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAS5C,iBAAO,CAAP,UAAS,cAAa,CAAG;AACvB,iBAAK,cAAc,AAAC,CAAC,cAAa,CAAG,CAAA,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAC;AAC7E,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AACA,iBAAO,CAAP,UAAS,AAAD,CAAG;AACT,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AAAA,WATO,MAAK,CAAZ,UAAc,aAAY;AACxB,iBAAO,EAAC,IAAG,AAAC,CAAC,SAAQ,CAAC,UAAU,AAAC,EAAC,SAAC,QAAO;mBAAM,SAAO;YAAA,EAAG,EAAC,aAAY,CAAC,CAAC,CAAC,CAAC;UAC7E,EAP8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AAmBtE,WAAK,eAAe,AAAC,CAAC,SAAQ,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC7D,eAAO,EAAC,GAAI,SAAO,AAAC,EAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,SAAQ,UAAU,SAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC/E,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IAtB0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAyByB","file":"benchpress/src/validator.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {bind} from 'angular2/di';\nimport {List,\n  StringMap} from 'angular2/src/facade/collection';\nimport {ABSTRACT,\n  BaseException} from 'angular2/src/facade/lang';\nimport {MeasureValues} from './measure_values';\nexport class Validator {\n  static bindTo(delegateToken) {\n    return [bind(Validator).toFactory((delegate) => delegate, [delegateToken])];\n  }\n  validate(completeSample) {\n    assert.argumentTypes(completeSample, assert.genericType(List, MeasureValues));\n    throw new BaseException('NYI');\n  }\n  describe() {\n    throw new BaseException('NYI');\n  }\n}\nObject.defineProperty(Validator, \"annotations\", {get: function() {\n    return [new ABSTRACT()];\n  }});\nObject.defineProperty(Validator.prototype.validate, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)]];\n  }});\n//# sourceMappingURL=validator.js.map\n\n//# sourceMappingURL=./validator.map"]}