{"version":3,"sources":["web_driver_adapter.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,uIAAoB,UAAS,SAAQ;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG,CAAG;AAAf,aAAoB,KAAG,OAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,WAAoB,KAAG,KAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,cAAoB,KAAG,QAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;uBAFY,CAAA,SAAQ,AAAC,sBAAjC,SAAS,AAAD;AACE,AAAI,UAAA,mBAMP,SAAM,iBAAe;;QAmB5B,AAzBkD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAS5C,gBAAM,CAAN,UAAQ,QAAO,CAAG;AAChB,iBAAK,cAAc,AAAC,CAAC,QAAO,CAAG,SAAO,CAAC,CAAC;AACxC,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AACA,sBAAY,CAAZ,UAAc,MAAK,CAAG;AACpB,iBAAK,cAAc,AAAC,CAAC,MAAK,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAChD,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AACA,qBAAW,CAAX,UAAa,AAAD,CAAG;AACb,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AACA,aAAG,CAAH,UAAK,IAAG,CAAG;AACT,iBAAK,cAAc,AAAC,CAAC,IAAG,CAAG,CAAA,MAAK,KAAK,OAAO,CAAC,CAAC;AAC9C,gBAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;UAChC;AAAA,WAjBO,MAAK,CAAZ,UAAc,aAAY;AACxB,iBAAO,EAAC,IAAG,AAAC,CAAC,gBAAe,CAAC,UAAU,AAAC,EAAC,SAAC,QAAO;mBAAM,SAAO;YAAA,EAAG,EAAC,aAAY,CAAC,CAAC,CAAC,CAAC;UACpF,EAP8D,CAAC;MACzD,AAAC,EAAC,EAJ4D;AA2BtE,WAAK,eAAe,AAAC,CAAC,gBAAe,CAAG,cAAY,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACpE,eAAO,EAAC,GAAI,SAAO,AAAC,EAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,UAAU,QAAQ,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACrF,eAAO,EAAC,CAAC,QAAO,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,UAAU,cAAc,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC3F,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,gBAAe,UAAU,KAAK,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAClF,eAAO,EAAC,CAAC,MAAK,KAAK,OAAO,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IApC0B;EAC3B,CAAA;AADI,CAAC,CAAC;AAuCkC","file":"benchpress/src/web_driver_adapter.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {bind} from 'angular2/di';\nimport {Promise} from 'angular2/src/facade/async';\nimport {BaseException,\n  ABSTRACT} from 'angular2/src/facade/lang';\nimport {List,\n  Map} from 'angular2/src/facade/collection';\nexport class WebDriverAdapter {\n  static bindTo(delegateToken) {\n    return [bind(WebDriverAdapter).toFactory((delegate) => delegate, [delegateToken])];\n  }\n  waitFor(callback) {\n    assert.argumentTypes(callback, Function);\n    throw new BaseException('NYI');\n  }\n  executeScript(script) {\n    assert.argumentTypes(script, assert.type.string);\n    throw new BaseException('NYI');\n  }\n  capabilities() {\n    throw new BaseException('NYI');\n  }\n  logs(type) {\n    assert.argumentTypes(type, assert.type.string);\n    throw new BaseException('NYI');\n  }\n}\nObject.defineProperty(WebDriverAdapter, \"annotations\", {get: function() {\n    return [new ABSTRACT()];\n  }});\nObject.defineProperty(WebDriverAdapter.prototype.waitFor, \"parameters\", {get: function() {\n    return [[Function]];\n  }});\nObject.defineProperty(WebDriverAdapter.prototype.executeScript, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(WebDriverAdapter.prototype.logs, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\n//# sourceMappingURL=web_driver_adapter.js.map\n\n//# sourceMappingURL=./web_driver_adapter.map"]}