{"version":3,"sources":["perflog_metric_spec.es6"],"names":[],"mappings":"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","file":"benchpress/test/metric/perflog_metric_spec.js","sourcesContent":["import {assert} from \"rtts_assert/rtts_assert\";\nimport {afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {List,\n  ListWrapper,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {Metric,\n  PerflogMetric,\n  WebDriverExtension,\n  PerfLogFeatures,\n  bind,\n  Injector,\n  Options} from 'benchpress/common';\nimport {TraceEventFactory} from '../trace_event_factory';\nexport function main() {\n  var commandLog;\n  var eventFactory = new TraceEventFactory('timeline', 'pid0');\n  function createMetric(perfLogs, microMetrics = null, perfLogFeatures = null) {\n    commandLog = [];\n    if (isBlank(perfLogFeatures)) {\n      perfLogFeatures = new PerfLogFeatures({\n        render: true,\n        gc: true\n      });\n    }\n    if (isBlank(microMetrics)) {\n      microMetrics = StringMapWrapper.create();\n    }\n    var bindings = [Options.DEFAULT_BINDINGS, PerflogMetric.BINDINGS, bind(Options.MICRO_METRICS).toValue(microMetrics), bind(PerflogMetric.SET_TIMEOUT).toValue((fn, millis) => {\n      ListWrapper.push(commandLog, ['setTimeout', millis]);\n      fn();\n    }), bind(WebDriverExtension).toValue(new MockDriverExtension(perfLogs, commandLog, perfLogFeatures))];\n    return Injector.resolveAndCreate(bindings).get(PerflogMetric);\n  }\n  describe('perflog metric', () => {\n    it('should describe itself based on the perfLogFeatrues', () => {\n      expect(createMetric([[]], null, new PerfLogFeatures()).describe()).toEqual({\n        'scriptTime': 'script execution time in ms, including gc and render',\n        'pureScriptTime': 'script execution time in ms, without gc nor render'\n      });\n      expect(createMetric([[]], null, new PerfLogFeatures({\n        render: true,\n        gc: false\n      })).describe()).toEqual({\n        'scriptTime': 'script execution time in ms, including gc and render',\n        'pureScriptTime': 'script execution time in ms, without gc nor render',\n        'renderTime': 'render time in and ouside of script in ms'\n      });\n      expect(createMetric([[]]).describe()).toEqual({\n        'scriptTime': 'script execution time in ms, including gc and render',\n        'pureScriptTime': 'script execution time in ms, without gc nor render',\n        'renderTime': 'render time in and ouside of script in ms',\n        'gcTime': 'gc time in and ouside of script in ms',\n        'gcAmount': 'gc amount in kbytes',\n        'majorGcTime': 'time of major gcs in ms'\n      });\n    });\n    it('should describe itself based on micro metrics', () => {\n      var description = createMetric([[]], {'myMicroMetric': 'someDesc'}).describe();\n      expect(description['myMicroMetric']).toEqual('someDesc');\n    });\n    describe('beginMeasure', () => {\n      it('should mark the timeline', inject([AsyncTestCompleter], (async) => {\n        var metric = createMetric([[]]);\n        metric.beginMeasure().then((_) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0']]);\n          async.done();\n        });\n      }));\n    });\n    describe('endMeasure', () => {\n      it('should mark and aggregate events in between the marks', inject([AsyncTestCompleter], (async) => {\n        var events = [[eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 4), eventFactory.end('script', 6), eventFactory.markEnd('benchpress0', 10)]];\n        var metric = createMetric(events);\n        metric.beginMeasure().then((_) => metric.endMeasure(false)).then((data) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0'], ['timeEnd', 'benchpress0', null], 'readPerfLog']);\n          expect(data['scriptTime']).toBe(2);\n          async.done();\n        });\n      }));\n      it('should restart timing', inject([AsyncTestCompleter], (async) => {\n        var events = [[eventFactory.markStart('benchpress0', 0), eventFactory.markEnd('benchpress0', 1), eventFactory.markStart('benchpress1', 2)], [eventFactory.markEnd('benchpress1', 3)]];\n        var metric = createMetric(events);\n        metric.beginMeasure().then((_) => metric.endMeasure(true)).then((_) => metric.endMeasure(true)).then((_) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0'], ['timeEnd', 'benchpress0', 'benchpress1'], 'readPerfLog', ['timeEnd', 'benchpress1', 'benchpress2'], 'readPerfLog']);\n          async.done();\n        });\n      }));\n      it('should loop and aggregate until the end mark is present', inject([AsyncTestCompleter], (async) => {\n        var events = [[eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 1)], [eventFactory.end('script', 2)], [eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress0', 10)]];\n        var metric = createMetric(events);\n        metric.beginMeasure().then((_) => metric.endMeasure(false)).then((data) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0'], ['timeEnd', 'benchpress0', null], 'readPerfLog', ['setTimeout', 100], 'readPerfLog', ['setTimeout', 100], 'readPerfLog']);\n          expect(data['scriptTime']).toBe(3);\n          async.done();\n        });\n      }));\n      it('should store events after the end mark for the next call', inject([AsyncTestCompleter], (async) => {\n        var events = [[eventFactory.markStart('benchpress0', 0), eventFactory.markEnd('benchpress0', 1), eventFactory.markStart('benchpress1', 1), eventFactory.start('script', 1), eventFactory.end('script', 2)], [eventFactory.start('script', 3), eventFactory.end('script', 5), eventFactory.markEnd('benchpress1', 6)]];\n        var metric = createMetric(events);\n        metric.beginMeasure().then((_) => metric.endMeasure(true)).then((data) => {\n          expect(data['scriptTime']).toBe(0);\n          return metric.endMeasure(true);\n        }).then((data) => {\n          expect(commandLog).toEqual([['timeBegin', 'benchpress0'], ['timeEnd', 'benchpress0', 'benchpress1'], 'readPerfLog', ['timeEnd', 'benchpress1', 'benchpress2'], 'readPerfLog']);\n          expect(data['scriptTime']).toBe(3);\n          async.done();\n        });\n      }));\n    });\n    describe('aggregation', () => {\n      function aggregate(events, microMetrics = null) {\n        ListWrapper.insert(events, 0, eventFactory.markStart('benchpress0', 0));\n        ListWrapper.push(events, eventFactory.markEnd('benchpress0', 10));\n        var metric = createMetric([events], microMetrics);\n        return metric.beginMeasure().then((_) => metric.endMeasure(false));\n      }\n      it('should report a single interval', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('script', 0), eventFactory.end('script', 5)]).then((data) => {\n          expect(data['scriptTime']).toBe(5);\n          async.done();\n        });\n      }));\n      it('should sum up multiple intervals', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('script', 0), eventFactory.end('script', 5), eventFactory.start('script', 10), eventFactory.end('script', 17)]).then((data) => {\n          expect(data['scriptTime']).toBe(12);\n          async.done();\n        });\n      }));\n      it('should ignore not started intervals', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.end('script', 10)]).then((data) => {\n          expect(data['scriptTime']).toBe(0);\n          async.done();\n        });\n      }));\n      it('should ignore not ended intervals', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('script', 10)]).then((data) => {\n          expect(data['scriptTime']).toBe(0);\n          async.done();\n        });\n      }));\n      it('should ignore events from different processed as the start mark', inject([AsyncTestCompleter], (async) => {\n        var otherProcessEventFactory = new TraceEventFactory('timeline', 'pid1');\n        var metric = createMetric([[eventFactory.markStart('benchpress0', 0), eventFactory.start('script', 0, null), eventFactory.end('script', 5, null), otherProcessEventFactory.start('script', 10, null), otherProcessEventFactory.end('script', 17, null), eventFactory.markEnd('benchpress0', 20)]]);\n        metric.beginMeasure().then((_) => metric.endMeasure(false)).then((data) => {\n          expect(data['scriptTime']).toBe(5);\n          async.done();\n        });\n      }));\n      it('should support scriptTime metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('script', 0), eventFactory.end('script', 5)]).then((data) => {\n          expect(data['scriptTime']).toBe(5);\n          async.done();\n        });\n      }));\n      it('should support renderTime metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('render', 0), eventFactory.end('render', 5)]).then((data) => {\n          expect(data['renderTime']).toBe(5);\n          async.done();\n        });\n      }));\n      it('should support gcTime/gcAmount metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('gc', 0, {'usedHeapSize': 2500}), eventFactory.end('gc', 5, {'usedHeapSize': 1000})]).then((data) => {\n          expect(data['gcTime']).toBe(5);\n          expect(data['gcAmount']).toBe(1.5);\n          expect(data['majorGcTime']).toBe(0);\n          async.done();\n        });\n      }));\n      it('should support majorGcTime metric', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('gc', 0, {'usedHeapSize': 2500}), eventFactory.end('gc', 5, {\n          'usedHeapSize': 1000,\n          'majorGc': true\n        })]).then((data) => {\n          expect(data['gcTime']).toBe(5);\n          expect(data['majorGcTime']).toBe(5);\n          async.done();\n        });\n      }));\n      it('should support pureScriptTime = scriptTime-gcTime-renderTime', inject([AsyncTestCompleter], (async) => {\n        aggregate([eventFactory.start('script', 0), eventFactory.start('gc', 1, {'usedHeapSize': 1000}), eventFactory.end('gc', 4, {'usedHeapSize': 0}), eventFactory.start('render', 4), eventFactory.end('render', 5), eventFactory.end('script', 6)]).then((data) => {\n          expect(data['scriptTime']).toBe(6);\n          expect(data['pureScriptTime']).toBe(2);\n          async.done();\n        });\n      }));\n      describe('microMetrics', () => {\n        it('should report micro metrics', inject([AsyncTestCompleter], (async) => {\n          aggregate([eventFactory.markStart('mm1', 0), eventFactory.markEnd('mm1', 5)], {'mm1': 'micro metric 1'}).then((data) => {\n            expect(data['mm1']).toBe(5.0);\n            async.done();\n          });\n        }));\n        it('should ignore micro metrics that were not specified', inject([AsyncTestCompleter], (async) => {\n          aggregate([eventFactory.markStart('mm1', 0), eventFactory.markEnd('mm1', 5)]).then((data) => {\n            expect(data['mm1']).toBeFalsy();\n            async.done();\n          });\n        }));\n        it('should report micro metric averages', inject([AsyncTestCompleter], (async) => {\n          aggregate([eventFactory.markStart('mm1*20', 0), eventFactory.markEnd('mm1*20', 5)], {'mm1': 'micro metric 1'}).then((data) => {\n            expect(data['mm1']).toBe(5 / 20);\n            async.done();\n          });\n        }));\n      });\n    });\n  });\n}\nclass MockDriverExtension extends WebDriverExtension {\n  constructor(perfLogs, commandLog, perfLogFeatures) {\n    super();\n    this._perfLogs = perfLogs;\n    this._commandLog = commandLog;\n    this._perfLogFeatures = perfLogFeatures;\n  }\n  timeBegin(name) {\n    ListWrapper.push(this._commandLog, ['timeBegin', name]);\n    return assert.returnType((PromiseWrapper.resolve(null)), Promise);\n  }\n  timeEnd(name, restartName) {\n    ListWrapper.push(this._commandLog, ['timeEnd', name, restartName]);\n    return assert.returnType((PromiseWrapper.resolve(null)), Promise);\n  }\n  perfLogFeatures() {\n    return assert.returnType((this._perfLogFeatures), PerfLogFeatures);\n  }\n  readPerfLog() {\n    ListWrapper.push(this._commandLog, 'readPerfLog');\n    if (this._perfLogs.length > 0) {\n      var next = this._perfLogs[0];\n      ListWrapper.removeAt(this._perfLogs, 0);\n      return assert.returnType((PromiseWrapper.resolve(next)), Promise);\n    } else {\n      return assert.returnType((PromiseWrapper.resolve([])), Promise);\n    }\n  }\n}\n//# sourceMappingURL=perflog_metric_spec.js.map\n\n//# sourceMappingURL=./perflog_metric_spec.map"]}