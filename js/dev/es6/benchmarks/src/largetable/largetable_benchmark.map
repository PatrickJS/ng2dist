{"version":3,"sources":["largetable_benchmark.js"],"names":[],"mappings":"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","file":"benchmarks/src/largetable/largetable_benchmark.es6","sourcesContent":["import {Parser, Lexer, ChangeDetector, ChangeDetection, jitChangeDetection}\nfrom 'angular2/change_detection';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\n\nimport {bootstrap, Component, Viewport, View, ViewContainer, Compiler, NgElement, Decorator} from 'angular2/angular2';\n\nimport {CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {ShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/shadow_dom_strategy';\nimport {NativeShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/native_shadow_dom_strategy';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {TestabilityRegistry, Testability} from 'angular2/src/core/testability/testability';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {ReflectionCapabilities} from 'angular2/src/reflection/reflection_capabilities';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {window, document, gc} from 'angular2/src/facade/browser';\nimport {getIntParameter, getStringParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nimport {XHR} from 'angular2/src/services/xhr';\nimport {XHRImpl} from 'angular2/src/services/xhr_impl';\n\nimport {If, For, Switch, SwitchWhen, SwitchDefault} from 'angular2/directives';\nimport {BrowserDomAdapter} from 'angular2/src/dom/browser_adapter';\n\nimport {EventManager} from 'angular2/src/render/dom/events/event_manager';\n\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {Parent} from 'angular2/src/core/annotations/visibility';\n\nimport {ViewFactory, VIEW_POOL_CAPACITY} from 'angular2/src/core/compiler/view_factory';\nimport {ProtoViewFactory} from 'angular2/src/core/compiler/proto_view_factory';\nimport {Renderer} from 'angular2/src/render/api';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport * as rc from 'angular2/src/render/dom/compiler/compiler';\nimport * as rvf from 'angular2/src/render/dom/view/view_factory';\nimport {Inject, bind} from 'angular2/di';\n\nexport const BENCHMARK_TYPE = 'LargetableComponent.benchmarkType';\nexport const LARGETABLE_ROWS = 'LargetableComponent.rows';\nexport const LARGETABLE_COLS = 'LargetableComponent.cols';\nfunction _createBindings() {\n  return [\n    bind(BENCHMARK_TYPE).toValue(getStringParameter('benchmarkType')),\n    bind(LARGETABLE_ROWS).toValue(getIntParameter('rows')),\n    bind(LARGETABLE_COLS).toValue(getIntParameter('columns'))\n  ];\n}\n\nvar BASELINE_LARGETABLE_TEMPLATE;\n\nfunction setupReflector() {\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n\n  // TODO(kegluneq): Generate these.\n  reflector.registerGetters({\n    'benchmarktype': (o) => o.benchmarktype,\n    'switch': (o) => null,\n    'switchWhen': (o) => o.switchWhen\n  });\n  reflector.registerSetters({\n    'benchmarktype': (o, v) => o.benchmarktype = v,\n    'switch': (o, v) => null,\n    'switchWhen': (o, v) => o.switchWhen = v\n  });\n}\n\nexport function main() {\n  BrowserDomAdapter.makeCurrent();\n  var totalRows = getIntParameter('rows');\n  var totalColumns = getIntParameter('columns');\n  BASELINE_LARGETABLE_TEMPLATE = DOM.createTemplate(\n      '<table></table>');\n\n  setupReflector();\n\n  var app;\n  var lifecycle;\n  var baselineRootLargetableComponent;\n  var count = 0;\n\n  function ng2DestroyDom() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    app.data = null;\n    app.benchmarkType = 'none';\n    lifecycle.tick();\n  }\n\n  function profile(create, destroy, name) {\n    return function() {\n      window.console.profile(name + ' w GC');\n      var duration = 0;\n      var count = 0;\n      while(count++ < 150) {\n        gc();\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n\n      window.console.profile(name + ' w/o GC');\n      duration = 0;\n      count = 0;\n      while(count++ < 150) {\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w/o GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n    };\n  }\n\n  function ng2CreateDom() {\n    var data = ListWrapper.createFixedSize(totalRows);\n\n    for (var i=0; i<totalRows; i++) {\n      data[i] = ListWrapper.createFixedSize(totalColumns);\n      for (var j=0; j<totalColumns; j++) {\n        data[i][j] = new CellData(i,j);\n      }\n    }\n    app.data = data;\n    app.benchmarkType = getStringParameter('benchmarkType');\n    lifecycle.tick();\n  }\n\n  function noop() {}\n\n  function initNg2() {\n    bootstrap(AppComponent, _createBindings()).then((ref) => {\n      var injector = ref.injector;\n      app = injector.get(AppComponent);\n      lifecycle = injector.get(LifeCycle);\n      bindAction('#ng2DestroyDom', ng2DestroyDom);\n      bindAction('#ng2CreateDom', ng2CreateDom);\n      bindAction('#ng2UpdateDomProfile', profile(ng2CreateDom, noop, 'ng2-update'));\n      bindAction('#ng2CreateDomProfile', profile(ng2CreateDom, ng2DestroyDom, 'ng2-create'));\n    });\n  }\n\n  function baselineDestroyDom() {\n    baselineRootLargetableComponent.update(buildTable(0, 0));\n  }\n\n  function baselineCreateDom() {\n    baselineRootLargetableComponent.update(buildTable(totalRows, totalColumns));\n  }\n\n  function initBaseline() {\n\n    baselineRootLargetableComponent = new BaseLineLargetableComponent(\n        DOM.querySelector(document, 'baseline'), getStringParameter('benchmarkType'),\n        getIntParameter('rows'), getIntParameter('columns'));\n\n    bindAction('#baselineDestroyDom', baselineDestroyDom);\n    bindAction('#baselineCreateDom', baselineCreateDom);\n\n    bindAction('#baselineUpdateDomProfile', profile(baselineCreateDom, noop, 'baseline-update'));\n    bindAction('#baselineCreateDomProfile', profile(baselineCreateDom, baselineDestroyDom, 'baseline-create'));\n  }\n\n  initNg2();\n  initBaseline();\n}\n\nfunction buildTable(rows, columns) {\n  var tbody = DOM.createElement('tbody');\n  var template = DOM.createElement('span');\n  var i,j,row,cell;\n  DOM.appendChild(template, DOM.createElement('span'));\n  DOM.appendChild(template, DOM.createTextNode(':'));\n  DOM.appendChild(template, DOM.createElement('span'));\n  DOM.appendChild(template, DOM.createTextNode('|'));\n\n  for (i = 0; i < rows; i++) {\n    row = DOM.createElement('div');\n    DOM.appendChild(tbody, row);\n    for (j = 0; j < columns; j++) {\n      cell = DOM.clone(template);\n      DOM.appendChild(row, cell);\n      DOM.setText(cell.childNodes[0], i.toString());\n      DOM.setText(cell.childNodes[2], j.toString());\n    }\n  }\n\n  return tbody;\n}\n\nclass BaseLineLargetableComponent {\n  element;\n  table;\n  benchmarkType:string;\n  rows:number;\n  columns:number;\n  constructor(element,benchmarkType,rows:number,columns:number) {\n    this.element = element;\n    this.benchmarkType = benchmarkType;\n    this.rows = rows;\n    this.columns = columns;\n    this.table = DOM.clone(BASELINE_LARGETABLE_TEMPLATE.content.firstChild);\n    var shadowRoot = DOM.createShadowRoot(this.element)\n    DOM.appendChild(shadowRoot, this.table);\n  }\n  update(tbody) {\n    var oldBody = DOM.querySelector(this.table, 'tbody');\n    if (oldBody != null) {\n      DOM.replaceChild(this.table, tbody, oldBody);\n    } else {\n      DOM.appendChild(this.table, tbody);\n    }\n  }\n}\n\nclass CellData {\n  i:number;\n  j:number;\n  constructor(i,j) {\n    this.i = i;\n    this.j = j;\n  }\n\n  jFn () {\n    return this.j;\n  }\n\n  iFn () {\n    return this.i;\n  }\n}\n\n@Component({\n  selector: 'app'\n})\n@View({\n  directives: [LargetableComponent],\n  template: `<largetable [data]='data' [benchmarkType]='benchmarkType'></largetable>`\n})\nclass AppComponent {\n  data;\n  benchmarkType:string;\n}\n\n@Component({\n  selector: 'largetable',\n  properties: {\n      'data': 'data',\n      'benchmarkType': 'benchmarktype'\n  }\n})\n@View({\n  directives: [For, Switch, SwitchWhen, SwitchDefault],\n  template: `\n      <table [switch]=\"benchmarkType\">\n        <tbody template=\"switch-when 'interpolation'\">\n          <tr template=\"for #row of data\">\n            <td template=\"for #column of row\">\n              {{column.i}}:{{column.j}}|\n            </td>\n          </tr>\n        </tbody>\n        <tbody template=\"switch-when 'interpolationAttr'\">\n          <tr template=\"for #row of data\">\n            <td template=\"for #column of row\" i=\"{{column.i}}\" j=\"{{column.j}}\">\n              i,j attrs\n            </td>\n          </tr>\n        </tbody>\n        <tbody template=\"switch-when 'interpolationFn'\">\n          <tr template=\"for #row of data\">\n            <td template=\"for #column of row\">\n              {{column.iFn()}}:{{column.jFn()}}|\n            </td>\n          </tr>\n        </tbody>\n        <tbody template=\"switch-default\">\n          <tr>\n            <td>\n              <em>{{benchmarkType}} not yet implemented</em>\n            </td>\n          </tr>\n        </tbody>\n      </table>`\n})\nclass LargetableComponent {\n  data;\n  benchmarkType:string;\n  rows:number;\n  columns:number;\n  constructor(\n      @Inject(BENCHMARK_TYPE) benchmarkType,\n      @Inject(LARGETABLE_ROWS) rows,\n      @Inject(LARGETABLE_COLS) columns) {\n    this.benchmarkType = benchmarkType;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n\n"]}