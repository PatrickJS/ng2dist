{"version":3,"sources":["cells.js"],"names":[],"mappings":"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","file":"benchmarks/src/naive_infinite_scroll/cells.es6","sourcesContent":["import {int} from 'angular2/src/facade/lang';\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {getIntParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\nimport {bootstrap, Component, Viewport, View, ViewContainer, Compiler}\n    from 'angular2/angular2';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\nimport {Company, Opportunity, Offering, Account, CustomDate, STATUS_LIST}\n    from './common';\nimport {For} from 'angular2/directives';\n\nexport class HasStyle {\n  style:Map;\n\n  constructor() {\n    this.style = MapWrapper.create();\n  }\n\n  set width(w) {\n    MapWrapper.set(this.style, 'width', w);\n  }\n}\n\n@Component({\n  selector: 'company-name',\n  properties: {\n    'width': 'cell-width',\n    'company': 'company'\n  }\n})\n@View({\n    directives: [],\n    template: `<div [style]=\"style\">{{company.name}}</div>`\n})\nexport class CompanyNameComponent extends HasStyle {\n  company:Company;\n}\n\n@Component({\n  selector: 'opportunity-name',\n  properties: {\n    'width': 'cell-width',\n    'opportunity': 'opportunity'\n  }\n})\n@View({\n    directives: [],\n    template: `<div [style]=\"style\">{{opportunity.name}}</div>`\n})\nexport class OpportunityNameComponent extends HasStyle {\n  opportunity:Opportunity;\n}\n\n@Component({\n  selector: 'offering-name',\n  properties: {\n    'width': 'cell-width',\n    'offering': 'offering'\n  }\n})\n@View({\n    directives: [],\n    template: `<div [style]=\"style\">{{offering.name}}</div>`\n})\nexport class OfferingNameComponent extends HasStyle {\n  offering:Offering;\n}\n\nexport class Stage {\n  name:string;\n  isDisabled:boolean;\n  style:Map;\n  apply:Function;\n}\n\n@Component({\n  selector: 'stage-buttons',\n  properties: {\n    'width': 'cell-width',\n    'offering': 'offering'\n  }\n})\n@View({\n    directives: [For],\n    template: `\n      <div [style]=\"style\">\n          <button template=\"for #stage of stages\"\n                  [disabled]=\"stage.isDisabled\"\n                  [style]=\"stage.style\"\n                  on-click=\"setStage(stage)\">\n            {{stage.name}}\n          </button>\n      </div>`\n})\nexport class StageButtonsComponent extends HasStyle {\n  _offering:Offering;\n  stages:List<Stage>;\n\n  get offering():Offering { return this._offering; }\n\n  set offering(offering:Offering) {\n    this._offering = offering;\n    this._computeStageButtons();\n  }\n\n  setStage(stage:Stage) {\n    this._offering.status = stage.name;\n    this._computeStageButtons();\n  }\n\n  _computeStageButtons() {\n    var disabled = true;\n    this.stages = ListWrapper.clone(STATUS_LIST\n      .map((status) => {\n        var isCurrent = this._offering.status == status;\n        var stage = new Stage();\n        stage.name = status;\n        stage.isDisabled = disabled;\n        var stageStyle = MapWrapper.create();\n        MapWrapper.set(stageStyle, 'background-color',\n          disabled\n            ? '#DDD'\n            : isCurrent\n              ? '#DDF'\n              : '#FDD');\n        stage.style = stageStyle;\n        if (isCurrent) {\n          disabled = false;\n        }\n        return stage;\n      }));\n  }\n}\n\n@Component({\n  selector: 'account-cell',\n  properties: {\n    'width': 'cell-width',\n    'account': 'account'\n  }\n})\n@View({\n    directives: [],\n    template: `\n      <div [style]=\"style\">\n        <a href=\"/account/{{account.accountId}}\">\n          {{account.accountId}}\n        </a>\n      </div>`\n})\nexport class AccountCellComponent extends HasStyle {\n  account:Account;\n}\n\n@Component({\n  selector: 'formatted-cell',\n  properties: {\n    'width': 'cell-width',\n    'value': 'value'\n  }\n})\n@View({\n    directives: [],\n    template: `<div [style]=\"style\">{{formattedValue}}</div>`\n})\nexport class FormattedCellComponent extends HasStyle {\n  formattedValue:string;\n\n  set value(value) {\n    if (value instanceof CustomDate) {\n      this.formattedValue = `${value.month}/${value.day}/${value.year}`;\n    } else {\n      this.formattedValue = value.toString();\n    }\n  }\n}\n"]}