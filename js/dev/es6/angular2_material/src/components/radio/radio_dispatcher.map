{"version":3,"sources":["radio_dispatcher.js"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,WAAU,CAAC,KAAO,iCAA+B,CAAC;AAM1D,KAAO,MAAM,kBAAgB;AAI3B,YAAU,CAAE,AAAD,CAAG;AACZ,OAAG,WAAW,EAAI,GAAC,CAAC;EACtB;AAAA,AAGA,OAAK,CAAE,IAAG,AAAQ,CAAG;AACnB,cAAU,QAAQ,AAAC,CAAC,IAAG,WAAW,CAAG,EAAC,CAAA,IAAM,CAAA,CAAA,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;EACtD;AAAA,AAGA,OAAK,CAAE,QAAO,CAAG;AACf,cAAU,KAAK,AAAC,CAAC,IAAG,WAAW,CAAG,SAAO,CAAC,CAAC;EAC7C;AAAA,AACF;AAAA,AAvBA,KAAK,eAAe,AAAC,kDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AAuBrD","file":"angular2_material/src/components/radio/radio_dispatcher.es6","sourcesContent":["import {ListWrapper} from 'angular2/src/facade/collection';\n\n/**\n * Class for radio buttons to coordinate unique selection based on name.\n * Indended to be consumed as an Angular service.\n */\nexport class MdRadioDispatcher {\n  // TODO(jelbourn): Change this to TypeScript syntax when supported.\n  listeners_: Array<Function>;\n\n  constructor() {\n    this.listeners_ = [];\n  }\n\n  /** Notify other nadio buttons that selection for the given name has been set. */\n  notify(name: string) {\n    ListWrapper.forEach(this.listeners_, (f) => f(name));\n  }\n\n  /** Listen for future changes to radio button selection. */\n  listen(listener) {\n    ListWrapper.push(this.listeners_, listener);\n  }\n}\n"]}