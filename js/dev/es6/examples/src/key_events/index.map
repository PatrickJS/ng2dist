{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ;AAAG,UAAQ;AAAG,KAAG,CAAC,KAAO,oBAAkB,CAAC;AAC5D,KAAO,EAAC,eAAc,CAAC,KAAO,4CAA0C,CAAC;AAGzE,KAAO,EAAC,SAAQ,CAAC,KAAO,qCAAmC,CAAC;AAC5D,KAAO,EAAC,sBAAqB,CAAC,KAAO,kDAAgD,CAAC;AAgBtF,IAAM,aAAW;AAIf,YAAU,CAAE,AAAD,CAAG;AACZ,OAAG,QAAQ,EAAI,SAAO,CAAC;AACvB,OAAG,WAAW,EAAI,MAAI,CAAC;EACzB;AAAA,AAEA,UAAQ,CAAE,KAAI,CAAG;AACf,OAAG,QAAQ,EAAI,CAAA,eAAc,gBAAgB,AAAC,CAAC,KAAI,CAAC,CAAC;AACrD,QAAI,eAAe,AAAC,EAAC,CAAC;EACxB;AAAA,AAEA,aAAW,CAAE,KAAI,CAAG;AAClB,OAAG,WAAW,EAAI,KAAG,CAAC;AACtB,QAAI,eAAe,AAAC,EAAC,CAAC;EACxB;AAAA,AAEA,gBAAc,CAAE,AAAD,CAAG;AAChB,OAAG,WAAW,EAAI,MAAI,CAAC;EACzB;AAAA,AAEF;AA5CA,KAAK,eAAe,AAAC,6BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAMzB,UAAQ,AAAC,CAAC,CACT,QAAO,CAAG,iBAAe,CAC3B,CAAC,KACA,KAAG,AAAC,CAAC,CACJ,QAAO,CAAG,uZAQ6C,CACzD,CAAC,EAnBgD;EAAC,CAAC,CAAC,CAAC;AA6CrD,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,UAAQ,uBAAuB,EAAI,IAAI,uBAAqB,AAAC,EAAC,CAAC;AAC/D,UAAQ,AAAC,CAAC,YAAW,CAAC,CAAC;AACzB;AAAA","file":"examples/src/key_events/index.es6","sourcesContent":["import {bootstrap, Component, View} from 'angular2/angular2';\nimport {KeyEventsPlugin} from 'angular2/src/render/dom/events/key_events';\n\n// 2 imports for the Dart version:\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {ReflectionCapabilities} from 'angular2/src/reflection/reflection_capabilities';\n\n@Component({\n  selector: 'key-events-app'\n})\n@View({\n  template: `Click in the following area and press a key to display its name:<br>\n  <div (keydown)=\"onKeyDown($event)\" class=\"sample-area\" tabindex=\"0\">{{lastKey}}</div><br>\n  Click in the following area and press shift.enter:<br>\n  <div\n    (keydown.shift.enter)=\"onShiftEnter($event)\"\n    (click)=\"resetShiftEnter()\"\n    class=\"sample-area\"\n    tabindex=\"0\"\n  >{{shiftEnter ? 'You pressed shift.enter!' : ''}}</div>`\n})\nclass KeyEventsApp {\n  lastKey: string;\n  shiftEnter: boolean;\n\n  constructor() {\n    this.lastKey = '(none)';\n    this.shiftEnter = false;\n  }\n\n  onKeyDown(event) {\n    this.lastKey = KeyEventsPlugin.getEventFullKey(event);\n    event.preventDefault();\n  }\n\n  onShiftEnter(event) {\n    this.shiftEnter = true;\n    event.preventDefault();\n  }\n\n  resetShiftEnter() {\n    this.shiftEnter = false;\n  }\n\n}\n\nexport function main() {\n  reflector.reflectionCapabilities = new ReflectionCapabilities(); // for the Dart version\n  bootstrap(KeyEventsApp);\n}\n"]}