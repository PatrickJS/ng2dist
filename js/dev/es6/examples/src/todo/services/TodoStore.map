{"version":3,"sources":["TodoStore.js"],"names":[],"mappings":"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","file":"examples/src/todo/services/TodoStore.es6","sourcesContent":["import {ListWrapper} from 'angular2/src/facade/collection';\n\n// base model for RecordStore\nexport class KeyModel {\n  _key: number;\n  constructor(key: number) {\n    this._key = key;\n  }\n}\n\nexport class Todo extends KeyModel {\n  title: string;\n  completed: boolean;\n\n  constructor(key: number, theTitle: string, isCompleted: boolean) {\n    super(key);\n    this.title = theTitle;\n    this.completed = isCompleted;\n  }\n}\n\nexport class TodoFactory {\n  _uid: number;\n\n  constructor() {\n    this._uid = 0;\n  }\n\n  nextUid() {\n    this._uid = this._uid + 1;\n    return this._uid;\n  }\n\n  create(title: string, isCompleted: boolean) {\n    return new Todo(this.nextUid(), title, isCompleted);\n  }\n}\n\n// Store manages any generic item that inherits from KeyModel\nexport class Store {\n  list: List<KeyModel>;\n\n  constructor() {\n    this.list = [];\n  }\n\n  add(record: KeyModel) {\n    this.list.push(record);\n  }\n\n  remove(record: KeyModel) {\n    this.spliceOut(record);\n  }\n\n  removeBy(callback: Function) {\n    var records = ListWrapper.filter(this.list, callback);\n    ListWrapper.removeAll(this.list, records);\n  }\n\n  spliceOut(record: KeyModel) {\n    var i = this.indexFor(record);\n    if( i > -1 ) {\n      return this.list.splice(i, 1)[0];\n    }\n    return null;\n  }\n\n  indexFor(record: KeyModel) {\n    return this.list.indexOf(record);\n  }\n\n}\n"]}