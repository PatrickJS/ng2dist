{"version":3,"sources":["dynamic_component_loader_spec.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ;AAAG,SAAO;AAAG,GAAC;AAAG,IAAE;AAAG,OAAK;AAAG,WAAS,CAAC,KAAO,oBAAkB,CAAC;AAClF,KAAO,EAAC,uBAAsB,CAAC,KAAO,uDAAqD,CAAC;AAC5F,KAAO,EAAC,sBAAqB,CAAC,KAAO,sDAAoD,CAAC;AAC1F,KAAO,EAAC,SAAQ;AAAG,SAAO,CAAC,KAAO,4CAA0C,CAAC;AAG7E,IAAM,cAAY,GAAG;AANrB,KAAK,eAAe,AAAC,8BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAIzB,UAAQ,AAAC,CAAC,CAAC,QAAO,CAAG,gBAAc,CAAC,CAAC,EAJW;EAAC,CAAC,CAAC,CAAC;AAQrD,IAAM,aAAW,GAAG;AATpB,KAAK,eAAe,AAAC,6BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAOzB,SAAO,AAAC,CAAC,CAAC,QAAO,CAAG,eAAa,CAAC,CAAC,EAPa;EAAC,CAAC,CAAC,CAAC;AAUrD,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,SAAO,AAAC,CAAC,wBAAuB,CAAG,EAAC,AAAD,IAAM;AACvC,AAAI,MAAA,CAAA,MAAK,CAAC;AAEV,aAAS,AAAC,CAAC,CAAC,AAAD,IAAM;AACf,WAAK,EAAI,IAAI,uBAAqB,AAAC,CAAC,IAAG,CAAG,IAAI,wBAAsB,AAAC,EAAC,CAAG,KAAG,CAAG,KAAG,CAAC,CAAC;IACtF,CAAC,CAAC;AAEF,WAAO,AAAC,CAAC,0BAAyB,CAAG,EAAC,AAAD,IAAM;AACzC,aAAO,AAAC,CAAC,aAAY,CAAG,EAAC,AAAD,IAAM;AAC5B,SAAC,AAAC,CAAC,8CAA6C,CAAG,EAAC,AAAD,IAAM;AACvD,eAAK,AAAC,CAAC,CAAC,AAAD,IAAM,CAAA,MAAK,yBAAyB,AAAC,CAAC,aAAY,CAAG,KAAG,CAAC,CAAC,aACnD,AAAC,CAAC,+DAA8D,CAAC,CAAC;QAClF,CAAC,CAAC;AAEF,SAAC,AAAC,CAAC,6CAA4C,CAAG,EAAC,AAAD,IAAM;AACtD,eAAK,AAAC,CAAC,CAAC,AAAD,IAAM,CAAA,MAAK,yBAAyB,AAAC,CAAC,YAAW,CAAG,KAAG,CAAC,CAAC,aAClD,AAAC,CAAC,8DAA6D,CAAC,CAAC;QACjF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ,CAAC,CAAC;AACJ;AAAA","file":"angular2/test/core/compiler/dynamic_component_loader_spec.es6","sourcesContent":["import {ddescribe, describe, it, iit, expect, beforeEach} from 'angular2/test_lib';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {Decorator, Viewport} from 'angular2/src/core/annotations/annotations';\n\n@Decorator({selector: 'someDecorator'})\nclass SomeDecorator {}\n\n@Viewport({selector: 'someViewport'})\nclass SomeViewport {}\n\nexport function main() {\n  describe(\"DynamicComponentLoader\", () => {\n    var loader;\n\n    beforeEach(() => {\n      loader = new DynamicComponentLoader(null, new DirectiveMetadataReader(), null, null);\n    });\n\n    describe(\"loadIntoExistingLocation\", () => {\n      describe('Load errors', () => {\n        it('should throw when trying to load a decorator', () => {\n          expect(() => loader.loadIntoExistingLocation(SomeDecorator, null))\n            .toThrowError(\"Could not load 'SomeDecorator' because it is not a component.\");\n        });\n\n        it('should throw when trying to load a viewport', () => {\n          expect(() => loader.loadIntoExistingLocation(SomeViewport, null))\n            .toThrowError(\"Could not load 'SomeViewport' because it is not a component.\");\n        });\n      });\n    });\n\n  });\n}\n"]}