{"version":3,"sources":["switch_spec.js"],"names":[],"mappings":"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","file":"angular2/test/directives/switch_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {View} from 'angular2/src/core/annotations/view';\n\nimport {Switch, SwitchWhen, SwitchDefault} from 'angular2/src/directives/switch';\n\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\n\nexport function main() {\n  describe('switch', () => {\n    describe('switch value changes', () => {\n      it('should switch amongst when values', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<template [switch-when]=\"\\'a\\'\"><li>when a</li></template>' +\n            '<template [switch-when]=\"\\'b\\'\"><li>when b</li></template>' +\n          '</ul></div>';\n\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('');\n\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when a');\n\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when b');\n\n          async.done();\n        });\n      }));\n\n      it('should switch amongst when values with fallback to default',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<li template=\"switch-when \\'a\\'\">when a</li>' +\n            '<li template=\"switch-default\">when default</li>' +\n          '</ul></div>';\n\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default');\n\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when a');\n\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default');\n\n          async.done();\n        });\n      }));\n\n      it('should support multiple whens with the same value',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<template [switch-when]=\"\\'a\\'\"><li>when a1;</li></template>' +\n            '<template [switch-when]=\"\\'b\\'\"><li>when b1;</li></template>' +\n            '<template [switch-when]=\"\\'a\\'\"><li>when a2;</li></template>' +\n            '<template [switch-when]=\"\\'b\\'\"><li>when b2;</li></template>' +\n            '<template [switch-default]><li>when default1;</li></template>' +\n            '<template [switch-default]><li>when default2;</li></template>' +\n          '</ul></div>';\n\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default1;when default2;');\n\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when a1;when a2;');\n\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when b1;when b2;');\n\n          async.done();\n        });\n      }));\n    });\n\n    describe('when values changes', () => {\n      it('should switch amongst when values',\n        inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' +\n          '<ul [switch]=\"switchValue\">' +\n            '<template [switch-when]=\"when1\"><li>when 1;</li></template>' +\n            '<template [switch-when]=\"when2\"><li>when 2;</li></template>' +\n            '<template [switch-default]><li>when default;</li></template>' +\n          '</ul></div>';\n\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.context.when1 = 'a';\n          view.context.when2 = 'b';\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when 1;');\n\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when 2;');\n\n          view.context.switchValue = 'c';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default;');\n\n          view.context.when1 = 'c';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when 1;');\n\n          view.context.when1 = 'd';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default;');\n\n          async.done();\n        });\n      }));\n    });\n  });\n}\n\n@Component({selector: 'test-cmp'})\n@View({directives: [Switch, SwitchWhen, SwitchDefault]})\nclass TestComponent {\n  switchValue: any;\n  when1: any;\n  when2: any;\n\n  constructor() {\n    this.switchValue = null;\n    this.when1 = null;\n    this.when2 = null;\n  }\n}\n"]}