{"version":3,"sources":["integration_testbed.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/integration_testbed.es6","sourcesContent":["import {isBlank, isPresent, BaseException} from 'angular2/src/facade/lang';\nimport {MapWrapper, ListWrapper, List, Map} from 'angular2/src/facade/collection';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Parser, Lexer} from 'angular2/change_detection';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport {Compiler} from 'angular2/src/render/dom/compiler/compiler';\nimport {ProtoViewRef, ProtoViewDto, ViewDefinition, ViewContainerRef, EventDispatcher, DirectiveMetadata} from 'angular2/src/render/api';\nimport {DefaultStepFactory} from 'angular2/src/render/dom/compiler/compile_step_factory';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {EventManager, EventManagerPlugin} from 'angular2/src/render/dom/events/event_manager';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {ViewFactory} from 'angular2/src/render/dom/view/view_factory';\n\nexport class IntegrationTestbed {\n  renderer;\n  parser;\n  eventPlugin;\n  _templates:Map<string, ViewDefinition>;\n\n  constructor({urlData, viewCacheCapacity, shadowDomStrategy, templates}) {\n    this._templates = MapWrapper.create();\n    if (isPresent(templates)) {\n      ListWrapper.forEach(templates, (template) => {\n        MapWrapper.set(this._templates, template.componentId, template);\n      });\n    }\n    var parser = new Parser(new Lexer());\n    var urlResolver = new UrlResolver();\n    if (isBlank(shadowDomStrategy)) {\n      shadowDomStrategy = new EmulatedUnscopedShadowDomStrategy(new StyleUrlResolver(urlResolver), null);\n    }\n    var compiler = new Compiler(new DefaultStepFactory(parser, shadowDomStrategy), new FakeTemplateLoader(urlResolver, urlData));\n\n    if (isBlank(viewCacheCapacity)) {\n      viewCacheCapacity = 1;\n    }\n    if (isBlank(urlData)) {\n      urlData = MapWrapper.create();\n    }\n    this.eventPlugin = new FakeEventManagerPlugin();\n    var eventManager = new EventManager([this.eventPlugin], new FakeVmTurnZone());\n    var viewFactory = new ViewFactory(viewCacheCapacity, eventManager, shadowDomStrategy);\n    this.renderer = new DirectDomRenderer(compiler, viewFactory, shadowDomStrategy);\n  }\n\n  compileRoot(rootEl, componentId):Promise<ProtoViewDto> {\n    return this.renderer.createRootProtoView(rootEl, componentId).then( (rootProtoView) => {\n      return this._compileNestedProtoViews(rootProtoView, [\n        new DirectiveMetadata({\n          type: DirectiveMetadata.COMPONENT_TYPE,\n          id: componentId\n        })\n      ]);\n    });\n  }\n\n  compile(componentId):Promise<ProtoViewDto> {\n    var childTemplate = MapWrapper.get(this._templates, componentId);\n    if (isBlank(childTemplate)) {\n      throw new BaseException(`No template for component ${componentId}`);\n    }\n    return this.renderer.compile(childTemplate).then( (protoView) => {\n      return this._compileNestedProtoViews(protoView, childTemplate.directives);\n    });\n  }\n\n  _compileNestedProtoViews(protoView, directives):Promise<ProtoViewDto> {\n    var childComponentRenderPvRefs = [];\n    var nestedPVPromises = [];\n    ListWrapper.forEach(protoView.elementBinders, (elementBinder) => {\n      var nestedComponentId = null;\n      ListWrapper.forEach(elementBinder.directives, (db) => {\n        var directiveMeta = directives[db.directiveIndex];\n        if (directiveMeta.type === DirectiveMetadata.COMPONENT_TYPE) {\n          nestedComponentId = directiveMeta.id;\n        }\n      });\n      var nestedCall;\n      if (isPresent(nestedComponentId)) {\n        var childTemplate = MapWrapper.get(this._templates, nestedComponentId);\n        if (isBlank(childTemplate)) {\n          // dynamic component\n          ListWrapper.push(childComponentRenderPvRefs, null);\n        } else {\n          nestedCall = this.compile(nestedComponentId);\n        }\n      } else if (isPresent(elementBinder.nestedProtoView)) {\n        nestedCall = this._compileNestedProtoViews(elementBinder.nestedProtoView, directives);\n      }\n      if (isPresent(nestedCall)) {\n        ListWrapper.push(\n          nestedPVPromises,\n          nestedCall.then( (nestedPv) => {\n            elementBinder.nestedProtoView = nestedPv;\n            if (isPresent(nestedComponentId)) {\n              ListWrapper.push(childComponentRenderPvRefs, nestedPv.render);\n            }\n          })\n        );\n      }\n    });\n    if (nestedPVPromises.length > 0) {\n      return PromiseWrapper.all(nestedPVPromises).then((_) => {\n        this.renderer.mergeChildComponentProtoViews(protoView.render, childComponentRenderPvRefs);\n        return protoView;\n      });\n    } else {\n      return PromiseWrapper.resolve(protoView);\n    }\n  }\n\n}\n\n\nclass FakeTemplateLoader extends TemplateLoader {\n  _urlData: Map<string, string>;\n\n  constructor(urlResolver, urlData) {\n    super(null, urlResolver);\n    this._urlData = urlData;\n  }\n\n  load(template: ViewDefinition) {\n    if (isPresent(template.template)) {\n      return PromiseWrapper.resolve(DOM.createTemplate(template.template));\n    }\n\n    if (isPresent(template.absUrl)) {\n      var content = this._urlData[template.absUrl];\n      if (isPresent(content)) {\n        return PromiseWrapper.resolve(DOM.createTemplate(content));\n      }\n    }\n\n    return PromiseWrapper.reject('Load failed');\n  }\n}\n\nexport class FakeVmTurnZone extends VmTurnZone {\n  constructor() {\n    super({enableLongStackTrace: false});\n  }\n\n  run(fn) {\n    fn();\n  }\n\n  runOutsideAngular(fn) {\n    fn();\n  }\n}\n\nexport class FakeEventManagerPlugin extends EventManagerPlugin {\n  _eventHandlers: Map;\n\n  constructor() {\n    super();\n    this._eventHandlers = MapWrapper.create();\n  }\n\n  dispatchEvent(eventName, event) {\n    MapWrapper.get(this._eventHandlers, eventName)(event);\n  }\n\n  supports(eventName: string): boolean {\n    return true;\n  }\n\n  addEventListener(element, eventName: string, handler: Function, shouldSupportBubble: boolean) {\n    MapWrapper.set(this._eventHandlers, eventName, handler);\n    return () => {MapWrapper.delete(this._eventHandlers, eventName);}\n  }\n}\n\nexport class LoggingEventDispatcher extends EventDispatcher {\n  log:List;\n  constructor() {\n    super();\n    this.log = [];\n  }\n  dispatchEvent(\n    elementIndex:number, eventName:string, locals:Map<string, any>\n  ) {\n    ListWrapper.push(this.log, [elementIndex, eventName, locals]);\n  }\n}\n\nexport class FakeEvent {\n  target;\n  constructor(target) {\n    this.target = target;\n  }\n}\n"]}