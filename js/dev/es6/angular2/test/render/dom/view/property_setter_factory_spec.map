{"version":3,"sources":["property_setter_factory_spec.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,QAAO;AAAG,UAAQ;AAAG,GAAC;AAAG,IAAE;AAAG,IAAE;AAAG,UAAQ;AAAG,OAAK;AAAG,WAAS;AAAG,GAAC,CAAC,KAAO,oBAAkB,CAAC;AACtG,KAAO,EAAC,aAAY,CAAC,KAAO,uDAAqD,CAAC;AAClF,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,AAAI,IAAA,CAAA,GAAE,CAAC;AACP,WAAS,AAAC,CAAE,CAAC,AAAD,IAAM;AACjB,MAAE,EAAI,CAAA,EAAC,AAAC,CAAC,aAAY,CAAC,CAAC;EACxB,CAAC,CAAC;AACF,SAAO,AAAC,CAAC,yBAAwB,CAAG,EAAC,AAAD,IAAM;AAExC,KAAC,AAAC,CAAC,uCAAsC,CAAG,EAAC,AAAD,IAAM;AAChD,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,OAAM,CAAC,CAAC;AACrC,aAAO,AAAC,CAAC,GAAE,CAAG,QAAM,CAAC,CAAC;AACtB,WAAK,AAAC,CAAC,GAAE,MAAM,CAAC,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAElC,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,aAAY,AAAC,CAAC,OAAM,CAAC,CAAC;AAC1C,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,aAAY,CAAC,CAAC;IACtC,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,yCAAwC,CAAG,EAAC,AAAD,IAAM;AAClD,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,WAAU,CAAC,CAAC;AACzC,aAAO,AAAC,CAAC,GAAE,CAAG,SAAO,CAAC,CAAC;AACvB,WAAK,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,GAAE,CAAG,OAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,QAAO,CAAC,CAAC;AACvD,aAAO,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAC;AACnB,WAAK,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,GAAE,CAAG,OAAK,CAAC,CAAC,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;AACnD,WAAK,AAAC,CAAC,CAAC,AAAD,IAAM;AACX,eAAO,AAAC,CAAC,GAAE,CAAG,EAAA,CAAC,CAAC;MAClB,CAAC,aAAa,AAAC,CAAC,iEAAgE,CAAC,CAAC;AAElF,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,aAAY,AAAC,CAAC,WAAU,CAAC,CAAC;AAC9C,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,aAAY,CAAC,CAAC;IACtC,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,oCAAmC,CAAG,EAAC,AAAD,IAAM;AAC7C,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,cAAa,CAAC,CAAC;AAC5C,aAAO,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAC;AACnB,WAAK,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,GAAE,CAAG,SAAO,CAAC,CAAC,QAAQ,AAAC,CAAC,IAAG,CAAC,CAAC;AACjD,aAAO,AAAC,CAAC,GAAE,CAAG,MAAI,CAAC,CAAC;AACpB,WAAK,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,GAAE,CAAG,SAAO,CAAC,CAAC,QAAQ,AAAC,CAAC,KAAI,CAAC,CAAC;AAElD,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,aAAY,AAAC,CAAC,cAAa,CAAC,CAAC;AACjD,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,aAAY,CAAC,CAAC;IACtC,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,oCAAmC,CAAG,EAAC,AAAD,IAAM;AAC7C,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,aAAY,CAAC,CAAC;AAC3C,aAAO,AAAC,CAAC,GAAE,CAAG,OAAK,CAAC,CAAC;AACrB,WAAK,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,GAAE,CAAG,QAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;AAClD,aAAO,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAC;AACnB,WAAK,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,GAAE,CAAG,QAAM,CAAC,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAC;AAE9C,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,aAAY,AAAC,CAAC,aAAY,CAAC,CAAC;AAChD,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,aAAY,CAAC,CAAC;IACtC,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,gDAA+C,CAAG,EAAC,AAAD,IAAM;AACzD,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,iBAAgB,CAAC,CAAC;AAC/C,aAAO,AAAC,CAAC,GAAE,CAAG,GAAC,CAAC,CAAC;AACjB,WAAK,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,GAAE,CAAG,SAAO,CAAC,CAAC,QAAQ,AAAC,CAAC,MAAK,CAAC,CAAC;AACnD,aAAO,AAAC,CAAC,GAAE,CAAG,KAAG,CAAC,CAAC;AACnB,WAAK,AAAC,CAAC,GAAE,SAAS,AAAC,CAAC,GAAE,CAAG,SAAO,CAAC,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAC;AAE/C,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,aAAY,AAAC,CAAC,iBAAgB,CAAC,CAAC;AACpD,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,aAAY,CAAC,CAAC;IACtC,CAAC,CAAC;AAEF,KAAC,AAAC,CAAC,sCAAqC,CAAG,EAAC,AAAD,IAAM;AAC/C,AAAI,QAAA,CAAA,QAAO,EAAI,CAAA,aAAY,AAAC,CAAC,WAAU,CAAC,CAAC;AACzC,aAAO,AAAC,CAAC,GAAE,CAAG,gBAAc,CAAC,CAAC;AAC9B,WAAK,AAAC,CAAC,GAAE,aAAa,AAAC,CAAC,GAAE,CAAC,CAAC,QAAQ,AAAC,CAAC,eAAc,CAAC,CAAC;AAEtD,AAAI,QAAA,CAAA,aAAY,EAAI,CAAA,aAAY,AAAC,CAAC,WAAU,CAAC,CAAC;AAC9C,WAAK,AAAC,CAAC,QAAO,CAAC,KAAK,AAAC,CAAC,aAAY,CAAC,CAAC;IACtC,CAAC,CAAC;EAEJ,CAAC,CAAC;AACJ;AAAA","file":"angular2/test/render/dom/view/property_setter_factory_spec.es6","sourcesContent":["import {describe, ddescribe, it, iit, xit, xdescribe, expect, beforeEach, el} from 'angular2/test_lib';\nimport {setterFactory} from 'angular2/src/render/dom/view/property_setter_factory';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nexport function main() {\n  var div;\n  beforeEach( () => {\n  \tdiv = el('<div></div>');\n  });\n  describe('property setter factory', () => {\n\n    it('should return a setter for a property', () => {\n      var setterFn = setterFactory('title');\n      setterFn(div, 'Hello');\n      expect(div.title).toEqual('Hello');\n\n      var otherSetterFn = setterFactory('title');\n      expect(setterFn).toBe(otherSetterFn);\n    });\n\n    it('should return a setter for an attribute', () => {\n      var setterFn = setterFactory('attr.role');\n      setterFn(div, 'button');\n      expect(DOM.getAttribute(div, 'role')).toEqual('button');\n      setterFn(div, null);\n      expect(DOM.getAttribute(div, 'role')).toEqual(null);\n      expect(() => {\n        setterFn(div, 4);\n      }).toThrowError(\"Invalid role attribute, only string values are allowed, got '4'\");\n\n      var otherSetterFn = setterFactory('attr.role');\n      expect(setterFn).toBe(otherSetterFn);\n    });\n\n    it('should return a setter for a class', () => {\n      var setterFn = setterFactory('class.active');\n      setterFn(div, true);\n      expect(DOM.hasClass(div, 'active')).toEqual(true);\n      setterFn(div, false);\n      expect(DOM.hasClass(div, 'active')).toEqual(false);\n\n      var otherSetterFn = setterFactory('class.active');\n      expect(setterFn).toBe(otherSetterFn);\n    });\n\n    it('should return a setter for a style', () => {\n      var setterFn = setterFactory('style.width');\n      setterFn(div, '40px');\n      expect(DOM.getStyle(div, 'width')).toEqual('40px');\n      setterFn(div, null);\n      expect(DOM.getStyle(div, 'width')).toEqual('');\n\n      var otherSetterFn = setterFactory('style.width');\n      expect(setterFn).toBe(otherSetterFn);\n    });\n\n    it('should return a setter for a style with a unit', () => {\n      var setterFn = setterFactory('style.height.px');\n      setterFn(div, 40);\n      expect(DOM.getStyle(div, 'height')).toEqual('40px');\n      setterFn(div, null);\n      expect(DOM.getStyle(div, 'height')).toEqual('');\n\n      var otherSetterFn = setterFactory('style.height.px');\n      expect(setterFn).toBe(otherSetterFn);\n    });\n\n    it('should return a setter for innerHtml', () => {\n      var setterFn = setterFactory('innerHtml');\n      setterFn(div, '<span></span>');\n      expect(DOM.getInnerHTML(div)).toEqual('<span></span>');\n\n      var otherSetterFn = setterFactory('innerHtml');\n      expect(setterFn).toBe(otherSetterFn);\n    });\n\n  });\n}\n"]}