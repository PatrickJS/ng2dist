{"version":3,"sources":["lang_spec.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,QAAO;AAAG,GAAC;AAAG,OAAK;AAAG,WAAS;AAAG,UAAQ;AAAG,IAAE;AAAG,IAAE;AAAG,GAAC,CAAC,KAAO,oBAAkB,CAAC;AAE3F,KAAO,EAAC,WAAU,CAAC,KAAO,iCAA+B,CAAC;AAC1D,KAAO,EAAC,SAAQ;AAAG,cAAY;AAAG,qBAAmB,CAAC,KAAO,2BAAyB,CAAC;AAEvF,KAAO,SAAS,KAAG,CAAE,AAAD,CAAG;AACrB,SAAO,AAAC,CAAC,QAAO,CAAG,EAAC,AAAD,IAAM;AACvB,KAAC,AAAC,CAAC,wCAAuC,CAAG,EAAC,AAAD,IAAM;AACjD,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC;AACpC,AAAI,QAAA,CAAA,OAAM,EAAI,CAAA,aAAY,QAAQ,AAAC,CAAC,EAAC,CAAG,aAAW,CAAC,CAAC;AACrD,AAAI,QAAA,CAAA,OAAM,EAAI,GAAC,CAAC;AAChB,AAAI,QAAA,CAAA,CAAA,CAAC;AAEL,YAAO,SAAQ,AAAC,CAAC,CAAA,EAAI,CAAA,oBAAmB,KAAK,AAAC,CAAC,OAAM,CAAC,CAAC,CAAG;AACxD,kBAAU,KAAK,AAAC,CAAC,OAAM,CAAG,CAAA,CAAA,MAAM,CAAC,CAAC;AAClC,aAAK,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;AACzB,aAAK,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;AACzB,aAAK,AAAC,CAAC,CAAA,OAAO,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;MAC1B;AAAA,AAEA,WAAK,AAAC,CAAC,OAAM,CAAC,QAAQ,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CAAC,CAAC;IACvC,CAAC,CAAA;EACJ,CAAC,CAAC;AACH;AAAA","file":"angular2/test/facade/lang_spec.es6","sourcesContent":["import {describe, it, expect, beforeEach, ddescribe, iit, xit, el} from 'angular2/test_lib';\n\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {isPresent, RegExpWrapper, RegExpMatcherWrapper} from 'angular2/src/facade/lang';\n\nexport function main() {\n  describe('RegExp', () => {\n    it('should expose the index for each match', () => {\n      var re = RegExpWrapper.create('(!)');\n      var matcher = RegExpWrapper.matcher(re, '0!23!567!!');\n      var indexes = [];\n      var m;\n\n      while (isPresent(m = RegExpMatcherWrapper.next(matcher))) {\n        ListWrapper.push(indexes, m.index);\n        expect(m[0]).toEqual('!');\n        expect(m[1]).toEqual('!');\n        expect(m.length).toBe(2);\n      }\n\n      expect(indexes).toEqual([1, 4, 8, 9]);\n    })\n });\n}\n"]}