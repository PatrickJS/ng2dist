{"version":3,"sources":["text_interpolation_parser.js"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,aAAY;AAAG,cAAY;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AAChF,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,KAAO,EAAC,MAAK,CAAC,KAAO,4BAA0B,CAAC;AAEhD,KAAO,EAAC,WAAU,CAAC,KAAO,iBAAe,CAAC;AAC1C,KAAO,EAAC,cAAa,CAAC,KAAO,oBAAkB,CAAC;AAChD,KAAO,EAAC,cAAa,CAAC,KAAO,oBAAkB,CAAC;AAKhD,KAAO,MAAM,wBAAsB,QAAU,YAAU;AAGrD,YAAU,CAAE,MAAK,AAAO,CAAG;AAf7B,SAAK,cAAc,QAeE,OAAK,CAfY,CAAA;AAgBlC,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,QAAQ,EAAI,OAAK,CAAC;EACvB;AAAA,AAEA,QAAM,CAAE,MAAK,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG,CAAA,OAAM,AAAe,CAAG;AApBjF,SAAK,cAAc,QAoBF,eAAa,UAAW,eAAa,UAAW,eAAa,CApBxC,CAAA;AAqBlC,OAAI,CAAC,OAAM,gBAAgB,CAAG;AAC5B,aAAM;IACR;AAAA,AACI,MAAA,CAAA,OAAM,EAAI,CAAA,OAAM,QAAQ,CAAC;AAC7B,AAAI,MAAA,CAAA,UAAS,EAAI,CAAA,GAAE,WAAW,AAAC,CAAC,GAAE,kBAAkB,AAAC,CAAC,OAAM,CAAC,CAAC,CAAC;AAC/D,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,UAAS,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AACtC,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,UAAS,CAAE,CAAA,CAAC,CAAC;AACxB,SAAI,GAAE,WAAW,AAAC,CAAC,IAAG,CAAC,CAAG;AACxB,AAAI,UAAA,CAAA,IAAG,EAAI,CAAA,GAAE,UAAU,AAAC,CAAC,IAAG,CAAC,CAAC;AAC9B,AAAI,UAAA,CAAA,IAAG,EAAI,CAAA,IAAG,QAAQ,mBAAmB,AAAC,CAAC,IAAG,CAAG,CAAA,OAAM,mBAAmB,CAAC,CAAC;AAC5E,WAAI,SAAQ,AAAC,CAAC,IAAG,CAAC,CAAG;AACnB,YAAE,QAAQ,AAAC,CAAC,IAAG,CAAG,IAAE,CAAC,CAAC;AACtB,gBAAM,YAAY,AAAC,EAAC,SAAS,AAAC,CAAC,CAAA,CAAG,KAAG,CAAC,CAAC;QACzC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,AACF;AAAA,AAtCA,KAAK,eAAe,AAAC,uCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAcL,MAAK,GAduB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAmBT,cAAa,IAAW,cAAa,IAAW,cAAa,GAnB7B;EAAC,CAAC,CAAC,CAAC;AAsCrD","file":"angular2/src/render/dom/compiler/text_interpolation_parser.es6","sourcesContent":["import {RegExpWrapper, StringWrapper, isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Parser} from 'angular2/change_detection';\n\nimport {CompileStep} from './compile_step';\nimport {CompileElement} from './compile_element';\nimport {CompileControl} from './compile_control';\n\n/**\n * Parses interpolations in direct text child nodes of the current element.\n */\nexport class TextInterpolationParser extends CompileStep {\n  _parser:Parser;\n\n  constructor(parser:Parser) {\n    super();\n    this._parser = parser;\n  }\n\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    if (!current.compileChildren) {\n      return;\n    }\n    var element = current.element;\n    var childNodes = DOM.childNodes(DOM.templateAwareRoot(element));\n    for (var i=0; i<childNodes.length; i++) {\n      var node = childNodes[i];\n      if (DOM.isTextNode(node)) {\n        var text = DOM.nodeValue(node);\n        var expr = this._parser.parseInterpolation(text, current.elementDescription);\n        if (isPresent(expr)) {\n          DOM.setText(node, ' ');\n          current.bindElement().bindText(i, expr);\n        }\n      }\n    }\n  }\n}\n"]}