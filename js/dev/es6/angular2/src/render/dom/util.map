{"version":3,"sources":["util.js"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,aAAY;AAAG,cAAY;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AAEhF,KAAO,CAAM,KAAA,CAAA,yBAAwB,EAAI,cAAY,CAAC;AAAA,AACtD,KAAO,CAAM,KAAA,CAAA,gBAAe,EAAI,aAAW,CAAC;AAAA,AAE5C,KAAO,CAAM,KAAA,CAAA,sBAAqB,EAAI,IAAE,CAAC;AAAA,AAErC,EAAA,CAAA,iBAAgB,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,SAAQ,CAAC,CAAC;AACvD,AAAI,EAAA,CAAA,gBAAe,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,UAAS,CAAC,CAAC;AAEvD,KAAO,SAAS,oBAAkB,CAAE,KAAI,AAAO,CAAG;AAVlD,OAAK,cAAc,OAAnB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAWpC,OAAO,CAAA,aAAY,iBAAiB,AAAC,CAAC,KAAI,CAAG,kBAAgB,CAAG,EAAC,CAAA,IAAM;AACrE,SAAO,CAAA,GAAE,EAAI,CAAA,CAAA,CAAE,CAAA,CAAC,YAAY,AAAC,EAAC,CAAC;EACjC,CAAC,CAAC;AACJ;AAAA,AAdA,KAAK,eAAe,AAAC,mCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AAerD,KAAO,SAAS,oBAAkB,CAAE,KAAI,AAAO,CAAG;AAhBlD,OAAK,cAAc,OAAnB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAiBpC,OAAO,CAAA,aAAY,iBAAiB,AAAC,CAAC,KAAI,CAAG,iBAAe,CAAG,EAAC,CAAA,IAAM;AACpE,SAAO,CAAA,CAAA,CAAE,CAAA,CAAC,YAAY,AAAC,EAAC,CAAC;EAC3B,CAAC,CAAC;AACJ;AAAA,AApBA,KAAK,eAAe,AAAC,mCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AAoBrD","file":"angular2/src/render/dom/util.es6","sourcesContent":["import {StringWrapper, RegExpWrapper, isPresent} from 'angular2/src/facade/lang';\n\nexport const NG_BINDING_CLASS_SELECTOR = '.ng-binding';\nexport const NG_BINDING_CLASS = 'ng-binding';\n\nexport const EVENT_TARGET_SEPARATOR = ':';\n\nvar CAMEL_CASE_REGEXP = RegExpWrapper.create('([A-Z])');\nvar DASH_CASE_REGEXP = RegExpWrapper.create('-([a-z])');\n\nexport function camelCaseToDashCase(input:string) {\n  return StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, (m) => {\n    return '-' + m[1].toLowerCase();\n  });\n}\n\nexport function dashCaseToCamelCase(input:string) {\n  return StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, (m) => {\n    return m[1].toUpperCase();\n  });\n}\n"]}