{"version":3,"sources":["direct_dom_renderer.js"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,UAAS,CAAC,KAAO,cAAY,CAAC;AACtC,KAAO,EAAC,OAAM;AAAG,eAAa,CAAC,KAAO,4BAA0B,CAAC;AACjE,KAAO,EAAC,IAAG;AAAG,YAAU,CAAC,KAAO,iCAA+B,CAAC;AAChE,KAAO,EAAC,OAAM;AAAG,UAAQ,CAAC,KAAO,2BAAyB,CAAC;AAE3D,UAAY,IAAE,CAAA,IAAO,SAAO,CAAC;AAC7B,KAAO,EAAC,UAAS,CAAC,KAAO,cAAY,CAAC;AACtC,KAAO,EAAC,eAAc,CAAC,KAAO,oBAAkB,CAAC;AACjD,KAAO,EAAC,WAAU,CAAC,KAAO,sBAAoB,CAAC;AAC/C,KAAO,EAAC,QAAO,CAAC,KAAO,sBAAoB,CAAC;AAC5C,KAAO,EAAC,iBAAgB,CAAC,KAAO,mCAAiC,CAAC;AAClE,KAAO,EAAC,gBAAe,CAAC,KAAO,4BAA0B,CAAC;AAE1D,OAAS,sBAAoB,CAAE,EAAC,AAAqB,CAAG;AAbxD,OAAK,cAAc,IAae,CAAA,GAAE,iBAAiB,CAbf,CAAA;AAcpC,OAAO,CAAA,YAAW,AAAC,CAAC,EAAC,KAAK,CAAC,eAAe,CAAE,EAAC,aAAa,CAAC,CAAC;AAC9D;AAAA,AAfA,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAYQ,GAAE,iBAAiB,GAZJ;EAAC,CAAC,CAAC,CAAC;AAgBrD,OAAS,aAAW,CAAE,OAAM,AAAiB,CAAG;AAjBhD,OAAK,cAAc,SAiBW,iBAAe,CAjBP,CAAA;AAkBpC,OAAO,CAAA,SAAQ,AAAC,CAAC,OAAM,CAAC,CAAA,CAAI,CAAA,OAAM,SAAS,EAAI,KAAG,CAAC;AACrD;AAAA,AAnBA,KAAK,eAAe,AAAC,4BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgBI,gBAAe,GAhBI;EAAC,CAAC,CAAC,CAAC;AAoBrD,OAAS,kBAAgB,CAAE,YAAW,AAAsB,CAAG;AArB/D,OAAK,cAAc,cAqBqB,sBAAoB,CArBtB,CAAA;AAsBpC,OAAO,CAAA,SAAQ,AAAC,CAAC,YAAW,CAAC,CAAA,CAAI,CAAA,YAAW,SAAS,EAAI,KAAG,CAAC;AAC/D;AAAA,AAvBA,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoBc,qBAAoB,GApBX;EAAC,CAAC,CAAC,CAAC;AAwBrD,OAAS,UAAQ,CAAE,IAAG,AAAW,CAAG;AAzBpC,OAAK,cAAc,MAyBK,WAAS,CAzBK,CAAA;AA0BpC,OAAO,IAAI,iBAAe,AAAC,CAAC,IAAG,CAAC,CAAC;AACnC;AAAA,AA3BA,KAAK,eAAe,AAAC,yBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAwBF,UAAS,GAxBgB;EAAC,CAAC,CAAC,CAAC;AA4BrD,OAAS,+BAA6B,CAAE,IAAG,CAAG,CAAA,MAAK,EAAI,KAAG,CAAG;AAC3D,KAAI,OAAM,AAAC,CAAC,MAAK,CAAC,CAAG;AACnB,SAAK,EAAI,GAAC,CAAC;EACb;AAAA,AACA,YAAU,KAAK,AAAC,CAAC,MAAK,CAAG,CAAA,SAAQ,AAAC,CAAC,IAAG,CAAC,CAAC,CAAC;AACzC,YAAU,QAAQ,AAAC,CAAC,IAAG,oBAAoB,CAAG,EAAC,IAAG,IAAM;AACtD,OAAI,SAAQ,AAAC,CAAC,IAAG,CAAC,CAAG;AACnB,mCAA6B,AAAC,CAAC,IAAG,CAAG,OAAK,CAAC,CAAC;IAC9C;AAAA,EACF,CAAC,CAAC;AACF,OAAO,OAAK,CAAC;AACf;AAAA,AAKA,KAAO,MAAM,sBAAoB,QAAU,CAAA,GAAE,aAAa;AAGxD,YAAU,CAAE,QAAO,AAAgB,CAAG;AAhDxC,SAAK,cAAc,UAgDI,gBAAc,CAhDC,CAAA;AAiDlC,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,SAAS,EAAI,SAAO,CAAC;EAC1B;AAAA,AACF;AAAA,AApDA,KAAK,eAAe,AAAC,qCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA+CH,eAAc,GA/CY;EAAC,CAAC,CAAC,CAAC;AAqDrD,KAAO,MAAM,iBAAe,QAAU,CAAA,GAAE,QAAQ;AAG9C,YAAU,CAAE,QAAO,AAAW,CAAG;AAzDnC,SAAK,cAAc,UAyDI,WAAS,CAzDM,CAAA;AA0DlC,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,SAAS,EAAI,SAAO,CAAC;EAC1B;AAAA,AACF;AAAA,AA7DA,KAAK,eAAe,AAAC,gCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAwDH,UAAS,GAxDiB;EAAC,CAAC,CAAC,CAAC;AA+DrD,KAAO,MAAM,kBAAgB,QAAU,CAAA,GAAE,SAAS;AAKhD,YAAU,CACN,QAAO,AAAU,CAAG,CAAA,WAAU,AAAa,CAAG,CAAA,iBAAgB,AAAmB,CAAG;AAtE1F,SAAK,cAAc,UAsEH,SAAO,cAAgB,YAAU,oBAAsB,kBAAgB,CAtEjD,CAAA;AAuElC,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,UAAU,EAAI,SAAO,CAAC;AACzB,OAAG,aAAa,EAAI,YAAU,CAAC;AAC/B,OAAG,mBAAmB,EAAI,kBAAgB,CAAC;EAC7C;AAAA,AAEA,QAAM,CAAE,QAAO,AAAmB;AA7EpC,SAAK,cAAc,UA6EA,CAAA,GAAE,eAAe,CA7EE,CAAA;AAAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAgFd,IAAG,UAAU,QAAQ,AAAC,CAAC,QAAO,CAAC,CAhFC,CAA3C,CAAA,MAAK,YAAuB,AA6EW,CAAA,OAAM,CAAE,CAAA,GAAE,aAAa,CAAC,AA7EhB,CAAgB,CAAA;EAiF7D;AAEA,8BAA4B,CAAE,YAAW,AAAiB,CAAG,CAAA,aAAY,AAAuB,CAAG;AAnFrG,SAAK,cAAc,cAmF0B,CAAA,GAAE,aAAa,gBAnF5D,CAAA,MAAK,YAAuB,AAmFiD,CAAA,IAAG,CAAE,CAAA,GAAE,aAAa,CAAC,AAnFnD,CAAT,CAAA;AAoFlC,oBAAgB,AAAC,CAAC,YAAW,CAAC,8BAA8B,AAAC,CAC3D,WAAU,IAAI,AAAC,CAAC,aAAY,CAAG,kBAAgB,CAAC,CAClD,CAAC;EACH;AAAA,AAEA,oBAAkB,CAAE,iBAAgB,CAAG,CAAA,WAAU;AAC/C,AAAI,MAAA,CAAA,OAAM,EAAI,kBAAgB,CAAC;AAC/B,AAAI,MAAA,CAAA,oBAAmB,EAAI,IAAI,iBAAe,AAAC,CAAC,OAAM,CAAC,CAAC;AACxD,uBAAmB,cAAc,AAAC,CAAC,IAAG,CAAC,CAAC;AACxC,AAAI,MAAA,CAAA,QAAO,EAAI,CAAA,oBAAmB,YAAY,AAAC,CAAC,OAAM,CAAG,eAAa,CAAC,CAAC;AACxE,WAAO,eAAe,AAAC,CAAC,WAAU,CAAC,CAAC;AACpC,WAAO,cAAc,AAAC,CAAC,CAAA,CAAC,CAAC;AAEzB,OAAG,mBAAmB,eAAe,AAAC,CAAC,IAAG,CAAG,YAAU,CAAG,QAAM,CAAC,CAAC;AAjGtE,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAkGd,cAAa,QAAQ,AAAC,CAAC,oBAAmB,MAAM,AAAC,EAAC,CAAC,CAlGnB,CAA3C,CAAA,MAAK,YAAuB,AAyF0B,CAAA,OAAM,CAAE,CAAA,GAAE,aAAa,CAAC,AAzF/B,CAAgB,CAAA;EAmG7D;AAEA,WAAS,CAAE,YAAW,AAAiB;AArGzC,SAAK,cAAc,cAqGO,CAAA,GAAE,aAAa,CArGH,CAAA;AAAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAsGd,8BAA6B,AAAC,CACnC,IAAG,aAAa,QAAQ,AAAC,CAAC,iBAAgB,AAAC,CAAC,YAAW,CAAC,CAAC,CAC3D,CAxGuC,CAA3C,CAAA,MAAK,YAAuB,AAqGgB,CAAA,IAAG,CAAE,CAAA,GAAE,QAAQ,CAAC,AArGb,CAAgB,CAAA;EAyG7D;AAEA,YAAU,CAAE,OAAM,AAAY,CAAG;AA3GnC,SAAK,cAAc,SA2GG,CAAA,GAAE,QAAQ,CA3GM,CAAA;AA4GlC,OAAG,aAAa,WAAW,AAAC,CAAC,YAAW,AAAC,CAAC,OAAM,CAAC,CAAC,CAAC;EACrD;AAAA,AAEA,wBAAsB,CAAE,KAAI,AAAqB,CAAG,CAAA,OAAM,AAAY,CAAG,CAAA,OAAM,EAAE,EAAC,CAAA,CAAQ;AA/G5F,SAAK,cAAc,OA+Ga,CAAA,GAAE,iBAAiB,UAAW,CAAA,GAAE,QAAQ,UA/GxE,CAAA,MAAK,KAAK,IAAI,CAAwB,CAAA;AAgHlC,wBAAoB,AAAC,CAAC,KAAI,CAAC,OAAO,AAAC,CAAC,YAAW,AAAC,CAAC,OAAM,CAAC,CAAG,QAAM,CAAC,CAAC;EACrE;AAAA,AAEA,wBAAsB,CAAE,KAAI,AAAqB,CAAG,CAAA,OAAM,AAAO,CAAQ;AAnH3E,SAAK,cAAc,OAmHa,CAAA,GAAE,iBAAiB,UAnHnD,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAoHlC,wBAAoB,AAAC,CAAC,KAAI,CAAC,OAAO,AAAC,CAAC,OAAM,CAAC,CAAC;EAC9C;AAAA,AAEA,mBAAiB,CAAE,OAAM,AAAY,CAAG,CAAA,YAAW,AAAO,CAAG,CAAA,YAAW,AAAO,CAAG,CAAA,aAAY,AAAI,CAAQ;AAvH5G,SAAK,cAAc,SAuHU,CAAA,GAAE,QAAQ,eAvHvC,CAAA,MAAK,KAAgB,sBAArB,CAAA,MAAK,KAAgB,uBAArB,CAAA,MAAK,KAAgB,KAAiB,CAAA;AAwHlC,eAAW,AAAC,CAAC,OAAM,CAAC,mBAAmB,AAAC,CAAC,YAAW,CAAG,aAAW,CAAG,cAAY,CAAC,CAAC;EACrF;AAAA,AAEA,wBAAsB,CAAE,OAAM,AAAY,CAAG,CAAA,YAAW,AAAO,CAAG,CAAA,aAAY,AAAY,CAAQ;AA3HpG,SAAK,cAAc,SA2He,CAAA,GAAE,QAAQ,eA3H5C,CAAA,MAAK,KAAgB,uBA2H6D,CAAA,GAAE,QAAQ,CA3HtD,CAAA;AA4HlC,eAAW,AAAC,CAAC,OAAM,CAAC,iBAAiB,AAAC,CACpC,IAAG,mBAAmB,CACtB,aAAW,CACX,CAAA,YAAW,AAAC,CAAC,aAAY,CAAC,CAC5B,CAAC;EACH;AAAA,AAEA,QAAM,CAAE,OAAM,AAAY,CAAG,CAAA,aAAY,AAAO,CAAG,CAAA,IAAG,AAAO,CAAQ;AAnIvE,SAAK,cAAc,SAmID,CAAA,GAAE,QAAQ,gBAnI5B,CAAA,MAAK,KAAgB,cAArB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAoIlC,eAAW,AAAC,CAAC,OAAM,CAAC,QAAQ,AAAC,CAAC,aAAY,CAAG,KAAG,CAAC,CAAC;EACpD;AAAA,AAEA,mBAAiB,CAAE,OAAM,AAAY,CAAG,CAAA,UAAS,AAAI,CAA+B;AAvItF,SAAK,cAAc,SAuIU,CAAA,GAAE,QAAQ,aAvIvC,CAAA,MAAK,KAAgB,KAAiB,CAAA;AAwIlC,eAAW,AAAC,CAAC,OAAM,CAAC,mBAAmB,AAAC,CAAC,UAAS,CAAC,CAAC;EACtD;AAAA,AACF;AAAA,AA1IA,KAAK,eAAe,AAAC,kCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cA8DzB,WAAS,AAAC,EAAC,EA9DqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAqEV,QAAO,IAAgB,WAAU,IAAsB,iBAAgB,GArEtC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA4EP,GAAE,eAAe,GA5Ea;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkFmB,GAAE,aAAa,IAnF5D,MAAK,YAAuB,AAmFiD,CAAA,IAAG,CAAE,CAAA,GAAE,aAAa,CAAC,AAnFnD,GACE;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoGA,GAAE,aAAa,GApGQ;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,uDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA0GJ,GAAE,QAAQ,GA1GiB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA8GM,GAAE,iBAAiB,IAAW,GAAE,QAAQ,OA9GvB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkHM,GAAE,iBAAiB,IAnHnD,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,8DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsHG,GAAE,QAAQ,IAvHvC,MAAK,KAAgB,WAArB,MAAK,KAAgB,WAArB,MAAK,KAAgB,OAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA0HQ,GAAE,QAAQ,IA3H5C,MAAK,KAAgB,WA2H6D,GAAE,QAAQ,GA1H3C;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkIR,GAAE,QAAQ,IAnI5B,MAAK,KAAgB,WAArB,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,8DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsIG,GAAE,QAAQ,IAvIvC,MAAK,KAAgB,OAC4B;EAAC,CAAC,CAAC,CAAC;AA0IrD","file":"angular2/src/render/dom/direct_dom_renderer.es6","sourcesContent":["import {Injectable} from 'angular2/di';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent} from 'angular2/src/facade/lang';\n\nimport * as api from '../api';\nimport {RenderView} from './view/view';\nimport {RenderProtoView} from './view/proto_view';\nimport {ViewFactory} from './view/view_factory';\nimport {Compiler} from './compiler/compiler';\nimport {ShadowDomStrategy} from './shadow_dom/shadow_dom_strategy';\nimport {ProtoViewBuilder} from './view/proto_view_builder';\n\nfunction _resolveViewContainer(vc:api.ViewContainerRef) {\n  return _resolveView(vc.view).viewContainers[vc.elementIndex];\n}\n\nfunction _resolveView(viewRef:DirectDomViewRef) {\n  return isPresent(viewRef) ? viewRef.delegate : null;\n}\n\nfunction _resolveProtoView(protoViewRef:DirectDomProtoViewRef) {\n  return isPresent(protoViewRef) ? protoViewRef.delegate : null;\n}\n\nfunction _wrapView(view:RenderView) {\n  return new DirectDomViewRef(view);\n}\n\nfunction _collectComponentChildViewRefs(view, target = null) {\n  if (isBlank(target)) {\n    target = [];\n  }\n  ListWrapper.push(target, _wrapView(view));\n  ListWrapper.forEach(view.componentChildViews, (view) => {\n    if (isPresent(view)) {\n      _collectComponentChildViewRefs(view, target);\n    }\n  });\n  return target;\n}\n\n\n\n// public so that the compiler can use it.\nexport class DirectDomProtoViewRef extends api.ProtoViewRef {\n  delegate:RenderProtoView;\n\n  constructor(delegate:RenderProtoView) {\n    super();\n    this.delegate = delegate;\n  }\n}\n\nexport class DirectDomViewRef extends api.ViewRef {\n  delegate:RenderView;\n\n  constructor(delegate:RenderView) {\n    super();\n    this.delegate = delegate;\n  }\n}\n\n@Injectable()\nexport class DirectDomRenderer extends api.Renderer {\n  _compiler: Compiler;\n  _viewFactory: ViewFactory;\n  _shadowDomStrategy: ShadowDomStrategy;\n\n  constructor(\n      compiler: Compiler, viewFactory: ViewFactory, shadowDomStrategy: ShadowDomStrategy) {\n    super();\n    this._compiler = compiler;\n    this._viewFactory = viewFactory;\n    this._shadowDomStrategy = shadowDomStrategy;\n  }\n\n  compile(template:api.ViewDefinition):Promise<api.ProtoViewDto> {\n    // Note: compiler already uses a DirectDomProtoViewRef, so we don't\n    // need to do anything here\n    return this._compiler.compile(template);\n  }\n\n  mergeChildComponentProtoViews(protoViewRef:api.ProtoViewRef, protoViewRefs:List<api.ProtoViewRef>) {\n    _resolveProtoView(protoViewRef).mergeChildComponentProtoViews(\n      ListWrapper.map(protoViewRefs, _resolveProtoView)\n    );\n  }\n\n  createRootProtoView(selectorOrElement, componentId):Promise<api.ProtoViewDto> {\n    var element = selectorOrElement; // TODO: select the element if it is not a real element...\n    var rootProtoViewBuilder = new ProtoViewBuilder(element);\n    rootProtoViewBuilder.setIsRootView(true);\n    var elBinder = rootProtoViewBuilder.bindElement(element, 'root element');\n    elBinder.setComponentId(componentId);\n    elBinder.bindDirective(0);\n\n    this._shadowDomStrategy.processElement(null, componentId, element);\n    return PromiseWrapper.resolve(rootProtoViewBuilder.build());\n  }\n\n  createView(protoViewRef:api.ProtoViewRef):List<api.ViewRef> {\n    return _collectComponentChildViewRefs(\n      this._viewFactory.getView(_resolveProtoView(protoViewRef))\n    );\n  }\n\n  destroyView(viewRef:api.ViewRef) {\n    this._viewFactory.returnView(_resolveView(viewRef));\n  }\n\n  insertViewIntoContainer(vcRef:api.ViewContainerRef, viewRef:api.ViewRef, atIndex=-1):void {\n    _resolveViewContainer(vcRef).insert(_resolveView(viewRef), atIndex);\n  }\n\n  detachViewFromContainer(vcRef:api.ViewContainerRef, atIndex:number):void {\n    _resolveViewContainer(vcRef).detach(atIndex);\n  }\n\n  setElementProperty(viewRef:api.ViewRef, elementIndex:number, propertyName:string, propertyValue:any):void {\n    _resolveView(viewRef).setElementProperty(elementIndex, propertyName, propertyValue);\n  }\n\n  setDynamicComponentView(viewRef:api.ViewRef, elementIndex:number, nestedViewRef:api.ViewRef):void {\n    _resolveView(viewRef).setComponentView(\n      this._shadowDomStrategy,\n      elementIndex,\n      _resolveView(nestedViewRef)\n    );\n  }\n\n  setText(viewRef:api.ViewRef, textNodeIndex:number, text:string):void {\n    _resolveView(viewRef).setText(textNodeIndex, text);\n  }\n\n  setEventDispatcher(viewRef:api.ViewRef, dispatcher:any/*api.EventDispatcher*/):void {\n    _resolveView(viewRef).setEventDispatcher(dispatcher);\n  }\n}\n"]}