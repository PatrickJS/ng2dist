{"version":3,"sources":["change_detection.js"],"names":[],"mappings":"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","file":"angular2/src/change_detection/change_detection.es6","sourcesContent":["import {DynamicProtoChangeDetector, JitProtoChangeDetector} from './proto_change_detector';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {IterableChangesFactory} from './pipes/iterable_changes';\nimport {KeyValueChangesFactory} from './pipes/keyvalue_changes';\nimport {NullPipeFactory} from './pipes/null_pipe';\nimport {DEFAULT} from './constants';\nimport {ChangeDetection, ProtoChangeDetector} from './interfaces';\nimport {Pipe, NO_CHANGE} from './pipes/pipe';\n\nclass AsyncPipe extends Pipe {\n  observable;\n  subscription;\n  latestValue;\n  latestReturnedValue;\n\n  constructor() {\n    super();\n    this.observable = null;\n    this.latestValue = null;\n  }\n\n  supports(obj) {\n    return this.observable === obj;\n  }\n\n  onDestroy() {\n    if (this.subscription && this.subscription.dispose) {\n      this.subscription.dispose();\n    } else if (this.dispose) {\n      this.dispose();\n    }\n  }\n\n  transform(value) {\n    // we need to change the API to move it into the constructor\n    if (! this.subscription) {\n      this.observable = value;\n      this.subscription = value.subscribe(\n        (x) => {this.latestValue = x;},\n        (e) => {throw e;} // zones will create a long stack trace\n      );\n    }\n\n    if (this.latestReturnedValue !== this.latestValue) {\n      this.latestReturnedValue = this.latestValue;\n      return this.latestValue;\n\n    } else {\n      return NO_CHANGE;\n    }\n  }\n}\n\nexport var defaultPipes = {\n  \"iterableDiff\" : [\n    new IterableChangesFactory(),\n    new NullPipeFactory()\n  ],\n  \"keyValDiff\" : [\n    new KeyValueChangesFactory(),\n    new NullPipeFactory()\n  ],\n  \"async\":  [\n    {\n      supports: (obj) => obj && obj.subscribe !== undefined,\n      create: () => new AsyncPipe()\n    }\n  ]\n};\n\nexport class DynamicChangeDetection extends ChangeDetection {\n  registry:PipeRegistry;\n\n  constructor(registry:PipeRegistry) {\n    super();\n    this.registry = registry;\n  }\n\n  createProtoChangeDetector(name:string, changeControlStrategy:string = DEFAULT):ProtoChangeDetector{\n    return new DynamicProtoChangeDetector(this.registry, changeControlStrategy);\n  }\n}\n\nexport class JitChangeDetection extends ChangeDetection {\n  registry:PipeRegistry;\n\n  constructor(registry:PipeRegistry) {\n    super();\n    this.registry = registry;\n  }\n\n  createProtoChangeDetector(name:string, changeControlStrategy:string = DEFAULT):ProtoChangeDetector{\n    return new JitProtoChangeDetector(this.registry, changeControlStrategy);\n  }\n}\n\nvar _registry = new PipeRegistry(defaultPipes);\n\n/**\n * Implements dynamic change detection. See: [ChangeDetection] for more details.\n *\n * @exportedAs angular2/change_detection\n */\nexport var dynamicChangeDetection = new DynamicChangeDetection(_registry);\n\n/**\n * Implements just-in-time change detection. See: [ChangeDetection] for more details.\n *\n * @exportedAs angular2/change_detection\n */\nexport var jitChangeDetection = new JitChangeDetection(_registry);\n"]}