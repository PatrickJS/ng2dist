{"version":3,"sources":["interfaces.js"],"names":[],"mappings":"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","file":"angular2/src/change_detection/interfaces.es6","sourcesContent":["import {List} from 'angular2/src/facade/collection';\nimport {Locals} from './parser/locals';\nimport {DEFAULT} from './constants';\nimport {BindingRecord} from './binding_record';\n\nexport class ProtoChangeDetector  {\n  instantiate(dispatcher:any, bindingRecords:List, variableBindings:List, directiveRecords:List):ChangeDetector{\n    return null;\n  }\n}\n\n/**\n * Interface used by Angular to control the change detection strategy for an application.\n *\n * Angular implements the following change detection strategies by default:\n *\n * - [dynamicChangeDetection]: slower, but does not require `eval()`.\n * - [jitChangeDetection]: faster, but requires `eval()`.\n *\n * In JavaScript, you should always use `jitChangeDetection`, unless you are in an environment that has\n * [CSP](https://developer.mozilla.org/en-US/docs/Web/Security/CSP), such as a Chrome Extension.\n *\n * In Dart, use `dynamicChangeDetection` during development. The Angular transformer generates an analog to the\n * `jitChangeDetection` strategy at compile time.\n *\n *\n * See: [dynamicChangeDetection], [jitChangeDetection]\n *\n * # Example\n * ```javascript\n * bootstrap(MyApp, [bind(ChangeDetection).toValue(dynamicChangeDetection)]);\n * ```\n * @exportedAs angular2/change_detection\n */\nexport class ChangeDetection {\n  createProtoChangeDetector(name:string, changeControlStrategy:string=DEFAULT):ProtoChangeDetector{\n    return null;\n  }\n}\n\nexport class ChangeDispatcher {\n  notifyOnBinding(bindingRecord:BindingRecord, value:any) {}\n}\n\nexport class ChangeDetector {\n  parent:ChangeDetector;\n  mode:string;\n\n  addChild(cd:ChangeDetector) {}\n  addShadowDomChild(cd:ChangeDetector) {}\n  removeChild(cd:ChangeDetector) {}\n  remove() {}\n  hydrate(context:any, locals:Locals, directives:any) {}\n  dehydrate() {}\n  markPathToRootAsCheckOnce() {}\n\n  detectChanges() {}\n  checkNoChanges() {}\n}\n"]}