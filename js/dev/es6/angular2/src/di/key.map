{"version":3,"sources":["key.js"],"names":[],"mappings":"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","file":"angular2/src/di/key.es6","sourcesContent":["import {KeyMetadataError} from './exceptions';\nimport {MapWrapper, Map} from 'angular2/src/facade/collection';\nimport {int, isPresent} from 'angular2/src/facade/lang';\n\nexport class Key {\n  token;\n  id:int;\n  metadata:any;\n  constructor(token, id:int) {\n    this.token = token;\n    this.id = id;\n    this.metadata = null;\n  }\n\n  static setMetadata(key:Key, metadata):Key {\n    if (isPresent(key.metadata) && key.metadata !== metadata) {\n      throw new KeyMetadataError();\n    }\n    key.metadata = metadata;\n    return key;\n  }\n\n  static get(token):Key {\n    return _globalKeyRegistry.get(token);\n  }\n\n  static get numberOfKeys():int {\n    return _globalKeyRegistry.numberOfKeys;\n  }\n}\n\nexport class KeyRegistry {\n  _allKeys:Map;\n  constructor() {\n    this._allKeys = MapWrapper.create();\n  }\n\n  get(token):Key {\n    if (token instanceof Key) return token;\n\n    if (MapWrapper.contains(this._allKeys, token)) {\n      return MapWrapper.get(this._allKeys, token);\n    }\n\n    var newKey = new Key(token, Key.numberOfKeys);\n    MapWrapper.set(this._allKeys, token, newKey);\n    return newKey;\n  }\n\n  get numberOfKeys():int {\n    return MapWrapper.size(this._allKeys);\n  }\n}\n\nvar _globalKeyRegistry = new KeyRegistry();\n"]}