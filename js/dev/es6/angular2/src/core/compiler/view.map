{"version":3,"sources":["view.js"],"names":[],"mappings":"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","file":"angular2/src/core/compiler/view.es6","sourcesContent":["import {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport {AST, Locals, ChangeDispatcher, ProtoChangeDetector, ChangeDetector,\n  ChangeRecord, BindingRecord, DirectiveRecord, BindingPropagationConfig} from 'angular2/change_detection';\n\nimport {ProtoElementInjector, ElementInjector, PreBuiltObjects, DirectiveBinding} from './element_injector';\nimport {ElementBinder} from './element_binder';\nimport {SetterFn} from 'angular2/src/reflection/types';\nimport {IMPLEMENTS, int, isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport {ViewContainer} from './view_container';\nimport * as renderApi from 'angular2/src/render/api';\n\n/**\n * Const of making objects: http://jsperf.com/instantiate-size-of-object\n *\n */\n@IMPLEMENTS(ChangeDispatcher)\n// TODO(tbosch): this is not supported in dart2js (no '.' is allowed)\n// @IMPLEMENTS(renderApi.EventDispatcher)\nexport class AppView {\n  render:renderApi.ViewRef;\n  /// This list matches the _nodes list. It is sparse, since only Elements have ElementInjector\n  rootElementInjectors:List<ElementInjector>;\n  elementInjectors:List<ElementInjector>;\n  changeDetector:ChangeDetector;\n  componentChildViews: List<AppView>;\n  viewContainers: List<ViewContainer>;\n  preBuiltObjects: List<PreBuiltObjects>;\n  proto: AppProtoView;\n\n  /**\n   * The context against which data-binding expressions in this view are evaluated against.\n   * This is always a component instance.\n   */\n\n  context: any;\n\n  /**\n   * Variables, local to this view, that can be used in binding expressions (in addition to the\n   * context). This is used for thing like `<video #player>` or\n   * `<li template=\"for #item of items\">`, where \"player\" and \"item\" are locals, respectively.\n   */\n  locals:Locals;\n\n  constructor(proto:AppProtoView, protoLocals:Map) {\n    this.render = null;\n    this.proto = proto;\n    this.changeDetector = null;\n    this.elementInjectors = null;\n    this.rootElementInjectors = null;\n    this.componentChildViews = null;\n    this.viewContainers = null;\n    this.preBuiltObjects = null;\n    this.context = null;\n    this.locals = new Locals(null, MapWrapper.clone(protoLocals)); //TODO optimize this\n  }\n\n  init(changeDetector:ChangeDetector, elementInjectors:List, rootElementInjectors:List,\n      viewContainers:List, preBuiltObjects:List, componentChildViews:List) {\n    this.changeDetector = changeDetector;\n    this.elementInjectors = elementInjectors;\n    this.rootElementInjectors = rootElementInjectors;\n    this.viewContainers = viewContainers;\n    this.preBuiltObjects = preBuiltObjects;\n    this.componentChildViews = componentChildViews;\n  }\n\n  setLocal(contextName: string, value) {\n    if (!this.hydrated()) throw new BaseException('Cannot set locals on dehydrated view.');\n    if (!MapWrapper.contains(this.proto.variableBindings, contextName)) {\n      return;\n    }\n    var templateName = MapWrapper.get(this.proto.variableBindings, contextName);\n    this.locals.set(templateName, value);\n  }\n\n  hydrated() {\n    return isPresent(this.context);\n  }\n\n  _setContextAndLocals(newContext, locals) {\n    this.context = newContext;\n    this.locals.parent = locals;\n  }\n\n  _hydrateChangeDetector() {\n    this.changeDetector.hydrate(this.context, this.locals, this);\n  }\n\n  _dehydrateContext() {\n    if (isPresent(this.locals)) {\n      this.locals.clearValues();\n    }\n    this.context = null;\n    this.changeDetector.dehydrate();\n  }\n\n  /**\n   * A dehydrated view is a state of the view that allows it to be moved around\n   * the view tree, without incurring the cost of recreating the underlying\n   * injectors and watch records.\n   *\n   * A dehydrated view has the following properties:\n   *\n   * - all element injectors are empty.\n   * - all appInjectors are released.\n   * - all viewcontainers are empty.\n   * - all context locals are set to null.\n   * - the view context is null.\n   *\n   * A call to hydrate/dehydrate does not attach/detach the view from the view\n   * tree.\n   */\n  hydrate(appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object, locals:Locals) {\n    var renderComponentViewRefs = this.proto.renderer.createView(this.proto.render);\n    this.internalHydrateRecurse(renderComponentViewRefs, 0, appInjector, hostElementInjector, context, locals);\n  }\n\n  dehydrate() {\n    var render = this.render;\n    this.internalDehydrateRecurse();\n    this.proto.renderer.destroyView(render);\n  }\n\n  internalHydrateRecurse(\n      renderComponentViewRefs:List<renderApi.ViewRef>,\n      renderComponentIndex:number,\n      appInjector: Injector, hostElementInjector: ElementInjector,\n      context: Object, locals:Locals):number {\n    if (this.hydrated()) throw new BaseException('The view is already hydrated.');\n\n    this.render = renderComponentViewRefs[renderComponentIndex++];\n\n    this._setContextAndLocals(context, locals);\n\n    // viewContainers\n    for (var i = 0; i < this.viewContainers.length; i++) {\n      var vc = this.viewContainers[i];\n      if (isPresent(vc)) {\n        vc.internalHydrateRecurse(new renderApi.ViewContainerRef(this.render, i), appInjector, hostElementInjector);\n      }\n    }\n\n    var binders = this.proto.elementBinders;\n    var componentChildViewIndex = 0;\n    for (var i = 0; i < binders.length; ++i) {\n      var componentDirective = binders[i].componentDirective;\n      var shadowDomAppInjector = null;\n\n      // shadowDomAppInjector\n      if (isPresent(componentDirective)) {\n        var injectables = componentDirective.resolvedInjectables;\n        if (isPresent(injectables))\n          shadowDomAppInjector = appInjector.createChildFromResolved(injectables);\n        else {\n          shadowDomAppInjector = appInjector;\n        }\n      } else {\n        shadowDomAppInjector = null;\n      }\n\n      // elementInjectors\n      var elementInjector = this.elementInjectors[i];\n      if (isPresent(elementInjector)) {\n        elementInjector.instantiateDirectives(appInjector, hostElementInjector, shadowDomAppInjector, this.preBuiltObjects[i]);\n\n        // The exporting of $implicit is a special case. Since multiple elements will all export\n        // the different values as $implicit, directly assign $implicit bindings to the variable\n        // name.\n        var exportImplicitName = elementInjector.getExportImplicitName();\n        if (elementInjector.isExportingComponent()) {\n          this.locals.set(exportImplicitName, elementInjector.getComponent());\n        } else if (elementInjector.isExportingElement()) {\n          this.locals.set(exportImplicitName, elementInjector.getNgElement());\n        }\n      }\n\n      if (isPresent(binders[i].nestedProtoView) && isPresent(componentDirective)) {\n        renderComponentIndex = this.componentChildViews[componentChildViewIndex].internalHydrateRecurse(\n          renderComponentViewRefs,\n          renderComponentIndex,\n          shadowDomAppInjector,\n          elementInjector,\n          elementInjector.getComponent(),\n          null\n        );\n        componentChildViewIndex++;\n      }\n    }\n    this._hydrateChangeDetector();\n    this.proto.renderer.setEventDispatcher(this.render, this);\n    return renderComponentIndex;\n  }\n\n  internalDehydrateRecurse() {\n    // Note: preserve the opposite order of the hydration process.\n\n    // componentChildViews\n    for (var i = 0; i < this.componentChildViews.length; i++) {\n      this.componentChildViews[i].internalDehydrateRecurse();\n    }\n\n    // elementInjectors\n    for (var i = 0; i < this.elementInjectors.length; i++) {\n      if (isPresent(this.elementInjectors[i])) {\n        this.elementInjectors[i].clearDirectives();\n      }\n    }\n\n    // viewContainers\n    if (isPresent(this.viewContainers)) {\n      for (var i = 0; i < this.viewContainers.length; i++) {\n        var vc = this.viewContainers[i];\n        if (isPresent(vc)) {\n          vc.internalDehydrateRecurse();\n        }\n      }\n    }\n\n    this.render = null;\n\n    this._dehydrateContext();\n  }\n\n  /**\n   * Triggers the event handlers for the element and the directives.\n   *\n   * This method is intended to be called from directive EventEmitters.\n   *\n   * @param {string} eventName\n   * @param {*} eventObj\n   * @param {int} binderIndex\n   */\n  triggerEventHandlers(eventName: string, eventObj, binderIndex: int) {\n    var locals = MapWrapper.create();\n    MapWrapper.set(locals, '$event', eventObj);\n    this.dispatchEvent(binderIndex, eventName, locals);\n  }\n\n  // dispatch to element injector or text nodes based on context\n  notifyOnBinding(b:BindingRecord, currentValue:any) {\n    if (b.isElement()) {\n      this.proto.renderer.setElementProperty(\n        this.render, b.elementIndex, b.propertyName, currentValue\n      );\n    } else {\n      // we know it refers to _textNodes.\n      this.proto.renderer.setText(this.render, b.elementIndex, currentValue);\n    }\n  }\n\n  directive(directive:DirectiveRecord) {\n    var elementInjector:ElementInjector = this.elementInjectors[directive.elementIndex];\n    return elementInjector.getDirectiveAtIndex(directive.directiveIndex);\n  }\n\n  addComponentChildView(view:AppView) {\n    ListWrapper.push(this.componentChildViews, view);\n    this.changeDetector.addShadowDomChild(view.changeDetector);\n  }\n\n  // implementation of EventDispatcher#dispatchEvent\n  dispatchEvent(\n    elementIndex:number, eventName:string, locals:Map<string, any>\n  ):void {\n    // Most of the time the event will be fired only when the view is in the live document.\n    // However, in a rare circumstance the view might get dehydrated, in between the event\n    // queuing up and firing.\n    if (this.hydrated()) {\n      var elBinder = this.proto.elementBinders[elementIndex];\n      if (isBlank(elBinder.hostListeners)) return;\n      var eventMap = elBinder.hostListeners[eventName];\n      if (isBlank(eventMap)) return;\n      MapWrapper.forEach(eventMap, (expr, directiveIndex) => {\n        var context;\n        if (directiveIndex === -1) {\n          context = this.context;\n        } else {\n          context = this.elementInjectors[elementIndex].getDirectiveAtIndex(directiveIndex);\n        }\n        expr.eval(context, new Locals(this.locals, locals));\n      });\n    }\n  }\n}\n\n/**\n *\n */\nexport class AppProtoView {\n  elementBinders:List<ElementBinder>;\n  protoChangeDetector:ProtoChangeDetector;\n  variableBindings: Map;\n  protoLocals:Map;\n  textNodesWithBindingCount:int;\n  bindings:List;\n  parentProtoView:AppProtoView;\n  _variableBindings:List;\n\n  _directiveRecordsMap:Map;\n  _directiveRecords:List;\n  render:renderApi.ProtoViewRef;\n  renderer:renderApi.Renderer;\n\n  constructor(\n      renderer:renderApi.Renderer,\n      render:renderApi.ProtoViewRef,\n      protoChangeDetector:ProtoChangeDetector) {\n    this.renderer = renderer;\n    this.render = render;\n    this.elementBinders = [];\n    this.variableBindings = MapWrapper.create();\n    this.protoLocals = MapWrapper.create();\n    this.protoChangeDetector = protoChangeDetector;\n    this.parentProtoView = null;\n    this.textNodesWithBindingCount = 0;\n    this.bindings = [];\n    this._directiveRecordsMap = MapWrapper.create();\n    this._variableBindings = null;\n    this._directiveRecords = null;\n  }\n\n  //TODO: Tobias or Victor. Moving it into the constructor.\n  // this work should be done the constructor of AppProtoView once we separate\n  // AppProtoView and ProtoViewBuilder\n  getVariableBindings() {\n    if (isPresent(this._variableBindings)) {\n      return this._variableBindings;\n    }\n\n    this._variableBindings = isPresent(this.parentProtoView) ?\n      ListWrapper.clone(this.parentProtoView.getVariableBindings()) : [];\n\n    MapWrapper.forEach(this.protoLocals, (v, local) => {\n      ListWrapper.push(this._variableBindings, local);\n    });\n\n    return this._variableBindings;\n  }\n\n  //TODO: Tobias or Victor. Moving it into the constructor.\n  // this work should be done the constructor of ProtoView once we separate\n  // AppProtoView and ProtoViewBuilder\n  getdirectiveRecords() {\n    if (isPresent(this._directiveRecords)) {\n      return this._directiveRecords;\n    }\n\n    this._directiveRecords = [];\n\n    for (var injectorIndex = 0; injectorIndex < this.elementBinders.length; ++injectorIndex) {\n      var pei = this.elementBinders[injectorIndex].protoElementInjector;\n      if (isPresent(pei)) {\n        for (var directiveIndex = 0; directiveIndex < pei.numberOfDirectives; ++directiveIndex) {\n          ListWrapper.push(this._directiveRecords, this._getDirectiveRecord(injectorIndex, directiveIndex));\n        }\n      }\n    }\n\n    return this._directiveRecords;\n  }\n\n  bindVariable(contextName:string, templateName:string) {\n    MapWrapper.set(this.variableBindings, contextName, templateName);\n    MapWrapper.set(this.protoLocals, templateName, null);\n  }\n\n  bindElement(parent:ElementBinder, distanceToParent:int, protoElementInjector:ProtoElementInjector,\n      componentDirective:DirectiveBinding = null, viewportDirective:DirectiveBinding = null):ElementBinder {\n    var elBinder = new ElementBinder(this.elementBinders.length, parent, distanceToParent,\n        protoElementInjector, componentDirective, viewportDirective);\n    ListWrapper.push(this.elementBinders, elBinder);\n    return elBinder;\n  }\n\n  /**\n   * Adds a text node binding for the last created ElementBinder via bindElement\n   */\n  bindTextNode(expression:AST) {\n    var textNodeIndex = this.textNodesWithBindingCount++;\n    var b = BindingRecord.createForTextNode(expression, textNodeIndex);\n    ListWrapper.push(this.bindings, b);\n  }\n\n  /**\n   * Adds an element property binding for the last created ElementBinder via bindElement\n   */\n  bindElementProperty(expression:AST, setterName:string) {\n    var elementIndex = this.elementBinders.length-1;\n    var b = BindingRecord.createForElement(expression, elementIndex, setterName);\n    ListWrapper.push(this.bindings, b);\n  }\n\n  /**\n   * Adds an event binding for the last created ElementBinder via bindElement.\n   *\n   * If the directive index is a positive integer, the event is evaluated in the context of\n   * the given directive.\n   *\n   * If the directive index is -1, the event is evaluated in the context of the enclosing view.\n   *\n   * @param {string} eventName\n   * @param {AST} expression\n   * @param {int} directiveIndex The directive index in the binder or -1 when the event is not bound\n   *                             to a directive\n   */\n  bindEvent(eventBindings: List<renderApi.EventBinding>, directiveIndex: int = -1) {\n    var elBinder = this.elementBinders[this.elementBinders.length - 1];\n    var events = elBinder.hostListeners;\n    if (isBlank(events)) {\n      events = StringMapWrapper.create();\n      elBinder.hostListeners = events;\n    }\n    for (var i = 0; i < eventBindings.length; i++) {\n      var eventBinding = eventBindings[i];\n      var eventName = eventBinding.fullName;\n      var event = StringMapWrapper.get(events, eventName);\n      if (isBlank(event)) {\n        event = MapWrapper.create();\n        StringMapWrapper.set(events, eventName, event);\n      }\n      MapWrapper.set(event, directiveIndex, eventBinding.source);\n    }\n  }\n\n  /**\n   * Adds a directive property binding for the last created ElementBinder via bindElement\n   */\n  bindDirectiveProperty(\n    directiveIndex:number,\n    expression:AST,\n    setterName:string,\n    setter:SetterFn) {\n\n    var elementIndex = this.elementBinders.length-1;\n    var directiveRecord = this._getDirectiveRecord(elementIndex, directiveIndex);\n    var b = BindingRecord.createForDirective(expression, setterName, setter, directiveRecord);\n    ListWrapper.push(this.bindings, b);\n  }\n\n  _getDirectiveRecord(elementInjectorIndex:number, directiveIndex:number) {\n    var id = elementInjectorIndex * 100 + directiveIndex;\n    var protoElementInjector = this.elementBinders[elementInjectorIndex].protoElementInjector;\n\n    if (!MapWrapper.contains(this._directiveRecordsMap, id)) {\n      var binding = protoElementInjector.getDirectiveBindingAtIndex(directiveIndex);\n      MapWrapper.set(this._directiveRecordsMap, id,\n        new DirectiveRecord(elementInjectorIndex, directiveIndex,\n          binding.callOnAllChangesDone, binding.callOnChange));\n    }\n\n    return MapWrapper.get(this._directiveRecordsMap, id);\n  }\n}\n"]}