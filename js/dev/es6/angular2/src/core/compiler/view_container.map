{"version":3,"sources":["view_container.js"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,WAAU;AAAG,WAAS;AAAG,KAAG,CAAC,KAAO,iCAA+B,CAAC;AAC5E,KAAO,EAAC,aAAY,CAAC,KAAO,2BAAyB,CAAC;AACtD,KAAO,EAAC,QAAO,CAAC,KAAO,cAAY,CAAC;AACpC,UAAY,SAAO,CAAA,IAAO,8CAA4C,CAAC;AACvE,KAAO,EAAC,SAAQ;AAAG,QAAM,CAAC,KAAO,2BAAyB,CAAC;AAE3D,UAAY,UAAQ,CAAA,IAAO,0BAAwB,CAAC;AACpD,UAAY,WAAS,CAAA,IAAO,SAAO,CAAC;AACpC,UAAY,SAAO,CAAA,IAAO,iBAAe,CAAC;AAK1C,KAAO,MAAM,cAAY;AAUvB,YAAU,CAAE,WAAU,AAAqB,CAC/B,CAAA,UAAS,AAAoB,CAC7B,CAAA,gBAAe,AAAyB,CACxC,CAAA,eAAc,AAA0B,CAAG;AA1BzD,SAAK,cAAc,aAuBO,CAAA,QAAO,YAAY,aACnB,CAAA,UAAS,QAAQ,mBACX,CAAA,UAAS,aAAa,kBACvB,CAAA,QAAO,gBAAgB,CA1BhB,CAAA;AA2BlC,OAAG,YAAY,EAAI,YAAU,CAAC;AAC9B,OAAG,OAAO,EAAI,KAAG,CAAC;AAClB,OAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,OAAG,iBAAiB,EAAI,iBAAe,CAAC;AACxC,OAAG,gBAAgB,EAAI,gBAAc,CAAC;AAGtC,OAAG,OAAO,EAAI,GAAC,CAAC;AAChB,OAAG,YAAY,EAAI,KAAG,CAAC;AACvB,OAAG,oBAAoB,EAAI,KAAG,CAAC;EACjC;AAAA,AAEA,uBAAqB,CAAE,MAAK,AAA2B,CAAG,CAAA,WAAU,AAAU,CAAG,CAAA,mBAAkB,AAA0B,CAAG;AAvClI,SAAK,cAAc,QAuCa,CAAA,SAAQ,iBAAiB,cAAgB,SAAO,sBAAwB,CAAA,QAAO,gBAAgB,CAvCzF,CAAA;AAwClC,OAAG,OAAO,EAAI,OAAK,CAAC;AACpB,OAAG,YAAY,EAAI,YAAU,CAAC;AAC9B,OAAG,oBAAoB,EAAI,oBAAkB,CAAC;EAChD;AAAA,AAEA,yBAAuB,CAAE,AAAD,CAAG;AACzB,OAAG,YAAY,EAAI,KAAG,CAAC;AACvB,OAAG,oBAAoB,EAAI,KAAG,CAAC;AAC/B,OAAG,OAAO,EAAI,KAAG,CAAC;AAKlB,QAAS,GAAA,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,OAAO,EAAI,EAAA,CAAG,CAAA,CAAA,GAAK,EAAA,CAAG,CAAA,CAAA,EAAE,CAAG;AAChD,AAAI,QAAA,CAAA,IAAG,EAAI,CAAA,IAAG,OAAO,CAAE,CAAA,CAAC,CAAC;AACzB,SAAG,eAAe,OAAO,AAAC,EAAC,CAAC;AAC5B,SAAG,wBAAwB,AAAC,CAAC,IAAG,CAAC,CAAC;AAClC,SAAG,yBAAyB,AAAC,EAAC,CAAC;AAC/B,SAAG,YAAY,WAAW,AAAC,CAAC,IAAG,CAAC,CAAC;IACnC;AAAA,AACA,OAAG,OAAO,EAAI,GAAC,CAAC;EAClB;AAAA,AAEA,MAAI,CAAE,AAAD,CAAG;AACN,QAAS,GAAA,CAAA,CAAA,EAAI,CAAA,IAAG,OAAO,OAAO,EAAI,EAAA,CAAG,CAAA,CAAA,GAAK,EAAA,CAAG,CAAA,CAAA,EAAE,CAAG;AAChD,SAAG,OAAO,AAAC,CAAC,CAAA,CAAC,CAAC;IAChB;AAAA,EACF;AAAA,AAEA,IAAE,CAAE,KAAI,AAAQ;AArElB,SAAK,cAAc,OAAnB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AAAtC,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAsEd,IAAG,OAAO,CAAE,KAAI,CAAC,CAtEe,CAqErB,CAAA,UAAS,QAAQ,CArEwB,CAAA;EAuE7D;AAEA,IAAI,OAAK,EAAI;AACX,SAAO,CAAA,IAAG,OAAO,OAAO,CAAC;EAC3B;AAAA,AAEA,4BAA0B,CAAE,KAAI,AAAQ,CAAG;AA7E7C,SAAK,cAAc,OAAnB,CAAA,MAAK,KAAgB,QAAiB,CAAA;AA8ElC,OAAI,KAAI,GAAK,EAAA;AAAG,WAAO,KAAG,CAAC;AAAA,AAC3B,SAAO,CAAA,WAAU,KAAK,AAAC,CAAC,IAAG,OAAO,CAAE,KAAI,EAAI,EAAA,CAAC,qBAAqB,CAAC,CAAA;EACrE;AAAA,AAEA,SAAO,CAAE,AAAD,CAAG;AACT,SAAO,CAAA,SAAQ,AAAC,CAAC,IAAG,YAAY,CAAC,CAAC;EACpC;AAAA,AAIA,OAAK,CAAE,OAAM,EAAE,EAAC,CAAA;AACd,OAAI,CAAC,IAAG,SAAS,AAAC,EAAC;AAAG,UAAM,IAAI,cAAY,AAAC,CACzC,mDAAkD,CAAC,CAAC;AAAA,AACpD,MAAA,CAAA,OAAM,EAAI,CAAA,IAAG,YAAY,QAAQ,AAAC,CAAC,IAAG,iBAAiB,CAAC,CAAC;AAE7D,OAAG,qBAAqB,AAAC,CAAC,OAAM,CAAG,QAAM,CAAC,CAAC;AAG3C,UAAM,QAAQ,AAAC,CAAC,IAAG,YAAY,CAAG,CAAA,IAAG,oBAAoB,CACvD,CAAA,IAAG,WAAW,QAAQ,CAAG,CAAA,IAAG,WAAW,OAAO,CAAC,CAAC;AAClD,OAAG,iBAAiB,SAAS,wBAAwB,AAAC,CAAC,IAAG,OAAO,CAAG,CAAA,OAAM,OAAO,CAAG,QAAM,CAAC,CAAC;AAlGhG,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAoGd,OAAM,CApG0B,CAwFrB,CAAA,UAAS,QAAQ,CAxFwB,CAAA;EAqG7D;AAEA,OAAK,CAAE,IAAG,CAAG,CAAA,OAAM,EAAE,EAAC,CAAA;AACpB,OAAG,qBAAqB,AAAC,CAAC,IAAG,CAAG,QAAM,CAAC,CAAC;AACxC,OAAG,iBAAiB,SAAS,wBAAwB,AAAC,CAAC,IAAG,OAAO,CAAG,CAAA,IAAG,OAAO,CAAG,QAAM,CAAC,CAAC;AAzG7F,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CA0Gd,IAAG,CA1G6B,CAuGf,CAAA,UAAS,QAAQ,CAvGkB,CAAA;EA2G7D;AAEA,qBAAmB,CAAE,IAAG,CAAG,CAAA,OAAM,EAAE,EAAC,CAAA;AAClC,OAAI,OAAM,GAAK,EAAC,CAAA;AAAG,YAAM,EAAI,CAAA,IAAG,OAAO,OAAO,CAAC;AAAA,AAC/C,cAAU,OAAO,AAAC,CAAC,IAAG,OAAO,CAAG,QAAM,CAAG,KAAG,CAAC,CAAC;AAC9C,OAAG,WAAW,eAAe,SAAS,AAAC,CAAC,IAAG,eAAe,CAAC,CAAC;AAC5D,OAAG,sBAAsB,AAAC,CAAC,IAAG,4BAA4B,AAAC,CAAC,OAAM,CAAC,CAAG,KAAG,CAAC,CAAC;AAjH/E,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAmHd,IAAG,CAnH6B,CA6GD,CAAA,UAAS,QAAQ,CA7GI,CAAA;EAoH7D;AAEA,OAAK,CAAE,OAAM,EAAE,EAAC,CAAA,CAAG;AACjB,OAAI,OAAM,GAAK,EAAC,CAAA;AAAG,YAAM,EAAI,CAAA,IAAG,OAAO,OAAO,EAAI,EAAA,CAAC;AAAA,AAC/C,MAAA,CAAA,IAAG,EAAI,CAAA,IAAG,OAAO,AAAC,CAAC,OAAM,CAAC,CAAC;AAC/B,OAAG,UAAU,AAAC,EAAC,CAAC;AAChB,OAAG,YAAY,WAAW,AAAC,CAAC,IAAG,CAAC,CAAC;EAEnC;AAAA,AAMA,OAAK,CAAE,OAAM,EAAE,EAAC,CAAA;AACd,OAAI,OAAM,GAAK,EAAC,CAAA;AAAG,YAAM,EAAI,CAAA,IAAG,OAAO,OAAO,EAAI,EAAA,CAAC;AAAA,AAC/C,MAAA,CAAA,YAAW,EAAI,CAAA,IAAG,IAAI,AAAC,CAAC,OAAM,CAAC,CAAC;AACpC,cAAU,SAAS,AAAC,CAAC,IAAG,OAAO,CAAG,QAAM,CAAC,CAAC;AAC1C,OAAG,iBAAiB,SAAS,wBAAwB,AAAC,CAAC,IAAG,OAAO,CAAG,QAAM,CAAC,CAAC;AAC5E,eAAW,eAAe,OAAO,AAAC,EAAC,CAAC;AACpC,OAAG,wBAAwB,AAAC,CAAC,YAAW,CAAC,CAAC;AAxI9C,SAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CAyId,YAAW,CAzIqB,CAkIrB,CAAA,UAAS,QAAQ,CAlIwB,CAAA;EA0I7D;AAEA,qBAAmB,CAAE,AAAD,CAAG;AACrB,SAAO,CAAA,IAAG,OAAO,CAAC;EACpB;AAAA,AAEA,sBAAoB,CAAE,OAAM,CAAG,CAAA,IAAG,CAAG;AACnC,QAAS,GAAA,CAAA,CAAA,EAAI,CAAA,IAAG,qBAAqB,OAAO,EAAI,EAAA,CAAG,CAAA,CAAA,GAAK,EAAA,CAAG,CAAA,CAAA,EAAE,CAAG;AAC9D,SAAG,qBAAqB,CAAE,CAAA,CAAC,UAAU,AAAC,CAAC,IAAG,gBAAgB,CAAG,QAAM,CAAC,CAAC;IACvE;AAAA,EACF;AAAA,AAEA,wBAAsB,CAAE,IAAG,CAAG;AAC5B,QAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,IAAG,qBAAqB,OAAO,CAAG,GAAE,CAAA,CAAG;AACzD,SAAG,qBAAqB,CAAE,CAAA,CAAC,OAAO,AAAC,EAAC,CAAC;IACvC;AAAA,EACF;AAAA,AACF;AAAA,AA3JA,KAAK,eAAe,AAAC,6BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsBA,QAAO,YAAY,IACnB,UAAS,QAAQ,IACX,UAAS,aAAa,IACvB,QAAO,gBAAgB,GAzBL;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,8DACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsCM,SAAQ,iBAAiB,IAAgB,QAAO,IAAwB,QAAO,gBAAgB,GAtC9E;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,mEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AA2JrD","file":"angular2/src/core/compiler/view_container.es6","sourcesContent":["import {ListWrapper, MapWrapper, List} from 'angular2/src/facade/collection';\nimport {BaseException} from 'angular2/src/facade/lang';\nimport {Injector} from 'angular2/di';\nimport * as eiModule from 'angular2/src/core/compiler/element_injector';\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\n\nimport * as renderApi from 'angular2/src/render/api';\nimport * as viewModule from './view';\nimport * as vfModule from './view_factory';\n\n/**\n * @exportedAs angular2/template\n */\nexport class ViewContainer {\n  render:renderApi.ViewContainerRef;\n  viewFactory: vfModule.ViewFactory;\n  parentView: viewModule.AppView;\n  defaultProtoView: viewModule.AppProtoView;\n  _views: List<viewModule.AppView>;\n  elementInjector: eiModule.ElementInjector;\n  appInjector: Injector;\n  hostElementInjector: eiModule.ElementInjector;\n\n  constructor(viewFactory:vfModule.ViewFactory,\n              parentView: viewModule.AppView,\n              defaultProtoView: viewModule.AppProtoView,\n              elementInjector: eiModule.ElementInjector) {\n    this.viewFactory = viewFactory;\n    this.render = null;\n    this.parentView = parentView;\n    this.defaultProtoView = defaultProtoView;\n    this.elementInjector = elementInjector;\n\n    // The order in this list matches the DOM order.\n    this._views = [];\n    this.appInjector = null;\n    this.hostElementInjector = null;\n  }\n\n  internalHydrateRecurse(render:renderApi.ViewContainerRef, appInjector: Injector, hostElementInjector: eiModule.ElementInjector) {\n    this.render = render;\n    this.appInjector = appInjector;\n    this.hostElementInjector = hostElementInjector;\n  }\n\n  internalDehydrateRecurse() {\n    this.appInjector = null;\n    this.hostElementInjector = null;\n    this.render = null;\n    // Note: We don't call clear here,\n    // as we don't want to change the render side\n    // (i.e. don't deattach views on the render side),\n    // as the render side does its own recursion.\n    for (var i = this._views.length - 1; i >= 0; i--) {\n      var view = this._views[i];\n      view.changeDetector.remove();\n      this._unlinkElementInjectors(view);\n      view.internalDehydrateRecurse();\n      this.viewFactory.returnView(view);\n    }\n    this._views = [];\n  }\n\n  clear() {\n    for (var i = this._views.length - 1; i >= 0; i--) {\n      this.remove(i);\n    }\n  }\n\n  get(index: number): viewModule.AppView {\n    return this._views[index];\n  }\n\n  get length() {\n    return this._views.length;\n  }\n\n  _siblingInjectorToLinkAfter(index: number) {\n    if (index == 0) return null;\n    return ListWrapper.last(this._views[index - 1].rootElementInjectors)\n  }\n\n  hydrated() {\n    return isPresent(this.appInjector);\n  }\n\n  // TODO(rado): profile and decide whether bounds checks should be added\n  // to the methods below.\n  create(atIndex=-1): viewModule.AppView {\n    if (!this.hydrated()) throw new BaseException(\n        'Cannot create views on a dehydrated ViewContainer');\n    var newView = this.viewFactory.getView(this.defaultProtoView);\n    // insertion must come before hydration so that element injector trees are attached.\n    this._insertWithoutRender(newView, atIndex);\n    // hydration must come before changing the render side,\n    // as it acquires the render views.\n    newView.hydrate(this.appInjector, this.hostElementInjector,\n      this.parentView.context, this.parentView.locals);\n    this.defaultProtoView.renderer.insertViewIntoContainer(this.render, newView.render, atIndex);\n\n    return newView;\n  }\n\n  insert(view, atIndex=-1): viewModule.AppView {\n    this._insertWithoutRender(view, atIndex);\n    this.defaultProtoView.renderer.insertViewIntoContainer(this.render, view.render, atIndex);\n    return view;\n  }\n\n  _insertWithoutRender(view, atIndex=-1): viewModule.AppView {\n    if (atIndex == -1) atIndex = this._views.length;\n    ListWrapper.insert(this._views, atIndex, view);\n    this.parentView.changeDetector.addChild(view.changeDetector);\n    this._linkElementInjectors(this._siblingInjectorToLinkAfter(atIndex), view);\n\n    return view;\n  }\n\n  remove(atIndex=-1) {\n    if (atIndex == -1) atIndex = this._views.length - 1;\n    var view = this.detach(atIndex);\n    view.dehydrate();\n    this.viewFactory.returnView(view);\n    // view is intentionally not returned to the client.\n  }\n\n  /**\n   * The method can be used together with insert to implement a view move, i.e.\n   * moving the dom nodes while the directives in the view stay intact.\n   */\n  detach(atIndex=-1): viewModule.AppView {\n    if (atIndex == -1) atIndex = this._views.length - 1;\n    var detachedView = this.get(atIndex);\n    ListWrapper.removeAt(this._views, atIndex);\n    this.defaultProtoView.renderer.detachViewFromContainer(this.render, atIndex);\n    detachedView.changeDetector.remove();\n    this._unlinkElementInjectors(detachedView);\n    return detachedView;\n  }\n\n  contentTagContainers() {\n    return this._views;\n  }\n\n  _linkElementInjectors(sibling, view) {\n    for (var i = view.rootElementInjectors.length - 1; i >= 0; i--) {\n      view.rootElementInjectors[i].linkAfter(this.elementInjector, sibling);\n    }\n  }\n\n  _unlinkElementInjectors(view) {\n    for (var i = 0; i < view.rootElementInjectors.length; ++i) {\n      view.rootElementInjectors[i].unlink();\n    }\n  }\n}\n"]}