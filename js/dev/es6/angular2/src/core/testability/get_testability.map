{"version":3,"sources":["get_testability.es6"],"names":[],"mappings":"AAAA;AAAA,KAAO,EAAC,mBAAkB;AAAG,YAAU,CAAC,KAAO,4CAA0C,CAAC;AAE1F,IAAM,kBAAgB;AAGpB,YAAU,CAAE,WAAU,AAAa,CAAG;AALxC,SAAK,cAAc,aAKQ,YAAU,CALC,CAAA;AAMlC,OAAG,aAAa,EAAI,YAAU,CAAC;EACjC;AAAA,AAEA,WAAS,CAAE,QAAO,AAAU,CAAG;AATjC,SAAK,cAAc,UASI,SAAO,CATQ,CAAA;AAUlC,OAAG,aAAa,WAAW,AAAC,CAAC,QAAO,CAAC,CAAC;EACxC;AAAA,AAEA,aAAW,CAAE,KAAI,CAAG,CAAA,OAAM,AAAQ,CAAG,CAAA,UAAS,AAAS,CAAG;AAb5D,SAAK,cAAc,OAAnB,CAAA,MAAK,KAAK,IAAI,UAAd,CAAA,MAAK,KAAgB,oBAArB,CAAA,MAAK,KAAgB,SAAiB,CAAA;AAclC,SAAO,CAAA,IAAG,aAAa,aAAa,AAAC,CAAC,KAAI,CAAG,QAAM,CAAG,WAAS,CAAC,CAAC;EACnE;AAAA,AACF;AAhBA,KAAK,eAAe,AAAC,iCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAIC,WAAU,GAJY;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,sDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAQH,QAAO,GARmB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,wDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAD1B,MAAK,KAAgB,WAArB,MAAK,KAAgB,WAC4B;EAAC,CAAC,CAAC,CAAC;AAiBrD,KAAO,MAAM,eAAa;AACxB,OAAO,YAAU,CAAE,QAAO,AAAqB;AAnBjD,SAAK,cAAc,UAmBY,oBAAkB,CAnBX,CAAA;AAoBlC,OAAI,CAAC,MAAK,SAAS,CAAG;AACpB,WAAK,SAAS,EAAI,GAAC,CAAC;IACtB;AAAA,AACA,SAAK,SAAS,eAAe,EAAI,UAAS,IAAG;AAC3C,AAAI,QAAA,CAAA,WAAU,EAAI,CAAA,QAAO,sBAAsB,AAAC,CAAC,IAAG,CAAC,CAAC;AAEtD,SAAI,WAAU,GAAK,KAAG,CAAG;AACvB,YAAM,IAAI,MAAI,AAAC,CAAC,yCAAwC,CAAC,CAAC;MAC5D;AAAA,AA5BN,WAAO,CAAA,MAAK,WAAW,AAAC,CAAC,CA6BZ,GAAI,kBAAgB,AAAC,CAAC,WAAU,CAAC,CA7BH,CAuBU,kBAAgB,CAvBN,CAAA;IA8B3D,CAAC;AACD,SAAK,SAAS,gBAAgB,EAAI,UAAS,AAAD,CAAG,GAG7C,CAAC;EACH;AACF;AAAA,AApCA,KAAK,eAAe,AAAC,0CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkBK,mBAAkB,GAlBA;EAAC,CAAC,CAAC,CAAC;AAoCrD","file":"angular2/src/core/testability/get_testability.es6","sourcesContent":["import {TestabilityRegistry, Testability} from 'angular2/src/core/testability/testability';\n\nclass PublicTestability {\n  _testabililty: Testability;\n\n  constructor(testability: Testability) {\n    this._testability = testability;\n  }\n\n  whenStable(callback: Function) {\n    this._testability.whenStable(callback);\n  }\n\n  findBindings(using, binding: string, exactMatch: boolean) {\n    return this._testability.findBindings(using, binding, exactMatch);\n  }\n}\n\nexport class GetTestability {\n  static addToWindow(registry: TestabilityRegistry) {\n    if (!window.angular2) {\n      window.angular2 = {};\n    }\n    window.angular2.getTestability = function(elem): PublicTestability {\n      var testability = registry.findTestabilityInTree(elem);\n\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n      return new PublicTestability(testability);\n    };\n    window.angular2.resumeBootstrap = function() {\n      // Intentionally left blank. This will allow Protractor to run\n      // against angular2 without turning off Angular synchronization.\n    };\n  }\n}\n"]}