{"version":3,"sources":["emulated_unscoped_shadow_dom_strategy_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  SpyObject} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map,\n  MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {resetShadowDomCache} from 'angular2/src/render/dom/shadow_dom/util';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\nexport function main() {\n  var strategy;\n  describe('EmulatedUnscoped', () => {\n    var styleHost;\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var view = new RenderView(null, [nodes], [], [], [], [], null);\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n    it('should rewrite style urls', () => {\n      var styleElement = el('<style>.foo {background-image: url(\"img.jpg\");}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\".foo {\" + \"background-image: url('http://base/img.jpg');\" + \"}\");\n    });\n    it('should not inline import rules', () => {\n      var styleElement = el('<style>@import \"other.css\";</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\"@import 'http://base/other.css';\");\n    });\n    it('should move the style element to the style host', () => {\n      var compileElement = el('<div><style>.one {}</style></div>');\n      var styleElement = DOM.firstChild(compileElement);\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(compileElement).toHaveText('');\n      expect(styleHost).toHaveText('.one {}');\n    });\n    it('should insert the same style only once in the style host', () => {\n      var styleEls = [el('<style>/*css1*/</style>'), el('<style>/*css2*/</style>'), el('<style>/*css1*/</style>')];\n      ListWrapper.forEach(styleEls, (styleEl) => {\n        strategy.processStyleElement('someComponent', 'http://base', styleEl);\n      });\n      expect(styleHost).toHaveText(\"/*css1*//*css2*/\");\n    });\n  });\n}\n//# sourceMappingURL=emulated_unscoped_shadow_dom_strategy_spec.js.map\n\n//# sourceMappingURL=./emulated_unscoped_shadow_dom_strategy_spec.map"]}