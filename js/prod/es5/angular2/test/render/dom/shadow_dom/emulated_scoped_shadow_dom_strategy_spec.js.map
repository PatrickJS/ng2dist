{"version":3,"sources":["emulated_scoped_shadow_dom_strategy_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  SpyObject} from 'angular2/test_lib';\nimport {isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map,\n  MapWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {XHR} from 'angular2/src/services/xhr';\nimport {EmulatedScopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy';\nimport {resetShadowDomCache} from 'angular2/src/render/dom/shadow_dom/util';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\nexport function main() {\n  describe('EmulatedScoped', () => {\n    var xhr,\n        styleHost,\n        strategy;\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      xhr = new FakeXHR();\n      var styleInliner = new StyleInliner(xhr, styleUrlResolver, urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var view = new RenderView(null, [nodes], [], [], [], [], null);\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n    it('should rewrite style urls', () => {\n      var styleElement = el('<style>.foo {background-image: url(\"img.jpg\");}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\" + \"background-image: url(http://base/img.jpg);\\n\" + \"}\");\n    });\n    it('should scope styles', () => {\n      var styleElement = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n    });\n    it('should inline @import rules', inject([AsyncTestCompleter], (async) => {\n      xhr.reply('http://base/one.css', '.one {}');\n      var styleElement = el('<style>@import \"one.css\";</style>');\n      var stylePromise = strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(stylePromise).toBePromise();\n      expect(styleElement).toHaveText('');\n      stylePromise.then((_) => {\n        expect(styleElement).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n        async.done();\n      });\n    }));\n    it('should return the same style given the same component', () => {\n      var styleElement = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      var styleElement2 = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement2);\n      expect(DOM.getText(styleElement)).toEqual(DOM.getText(styleElement2));\n    });\n    it('should return different styles given different components', () => {\n      var styleElement = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent1', 'http://base', styleElement);\n      var styleElement2 = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent2', 'http://base', styleElement2);\n      expect(DOM.getText(styleElement)).not.toEqual(DOM.getText(styleElement2));\n    });\n    it('should move the style element to the style host', () => {\n      var compileElement = el('<div><style>.one {}</style></div>');\n      var styleElement = DOM.firstChild(compileElement);\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(compileElement).toHaveText('');\n      expect(styleHost).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n    });\n    it('should add an attribute to component elements', () => {\n      var element = el('<div></div>');\n      strategy.processElement(null, 'elComponent', element);\n      expect(DOM.getAttribute(element, '_nghost-0')).toEqual('');\n    });\n    it('should add an attribute to the content elements', () => {\n      var element = el('<div></div>');\n      strategy.processElement('hostComponent', null, element);\n      expect(DOM.getAttribute(element, '_ngcontent-0')).toEqual('');\n    });\n  });\n}\nclass FakeXHR extends XHR {\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n  get(url) {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n    return PromiseWrapper.resolve(response);\n  }\n  reply(url, response) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\nObject.defineProperty(FakeXHR.prototype.get, \"parameters\", {get: function() {\n    return [[assert.type.string]];\n  }});\nObject.defineProperty(FakeXHR.prototype.reply, \"parameters\", {get: function() {\n    return [[assert.type.string], [assert.type.string]];\n  }});\n//# sourceMappingURL=emulated_scoped_shadow_dom_strategy_spec.js.map\n\n//# sourceMappingURL=./emulated_scoped_shadow_dom_strategy_spec.map"]}