{"version":3,"sources":["view_splitter_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/render/dom/compiler/view_splitter_spec.js","sourcesContent":["import {describe,\n  beforeEach,\n  it,\n  expect,\n  iit,\n  ddescribe,\n  el} from 'angular2/test_lib';\nimport {MapWrapper} from 'angular2/src/facade/collection';\nimport {ViewSplitter} from 'angular2/src/render/dom/compiler/view_splitter';\nimport {CompilePipeline} from 'angular2/src/render/dom/compiler/compile_pipeline';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Lexer,\n  Parser} from 'angular2/change_detection';\nexport function main() {\n  describe('ViewSplitter', () => {\n    function createPipeline() {\n      return new CompilePipeline([new ViewSplitter(new Parser(new Lexer()))]);\n    }\n    describe('<template> elements', () => {\n      it('should move the content into a new <template> element and mark that as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(DOM.getOuterHTML(results[1].element)).toEqual('<template if=\"true\" class=\"ng-binding\"></template>');\n        expect(results[1].isViewRoot).toBe(false);\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<template>a</template>');\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should mark the new <template> element as viewRoot', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should not wrap the root element', () => {\n        var rootElement = el('<div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toBe(1);\n        expect(DOM.getOuterHTML(rootElement)).toEqual('<div></div>');\n      });\n      it('should copy over the elementDescription', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].elementDescription).toBe(results[1].elementDescription);\n      });\n      it('should clean out the inheritedElementBinder', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedElementBinder).toBe(null);\n      });\n      it('should create a nestedProtoView', () => {\n        var rootElement = el('<div><template if=\"true\">a</template></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView).not.toBe(null);\n        expect(results[2].inheritedProtoView).toBe(results[1].inheritedElementBinder.nestedProtoView);\n        expect(DOM.getOuterHTML(results[2].inheritedProtoView.rootElement)).toEqual('<template>a</template>');\n      });\n    });\n    describe('elements with template attribute', () => {\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template class=\"ng-binding\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span template=\"\"></span>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should work with top-level template node', () => {\n        var rootElement = el('<template><div template>x</div></template>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template class=\"ng-binding\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div template></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div template=\"some-prop:expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].inheritedElementBinder.propertyBindings, 'someProp').source).toEqual('expr');\n        expect(MapWrapper.get(results[1].attrs(), 'some-prop')).toEqual('expr');\n      });\n      it('should add variable mappings from the template attribute to the nestedProtoView', () => {\n        var rootElement = el('<div><div template=\"var var-name=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView.variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n      it('should add entries without value as attributes to the element', () => {\n        var rootElement = el('<div><div template=\"varname\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].attrs(), 'varname')).toEqual('');\n        expect(results[1].inheritedElementBinder.propertyBindings).toEqual(MapWrapper.create());\n        expect(results[1].inheritedElementBinder.variableBindings).toEqual(MapWrapper.create());\n      });\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div template></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toEqual(4);\n      });\n      it('should copy over the elementDescription', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].elementDescription).toBe(results[1].elementDescription);\n      });\n      it('should clean out the inheritedElementBinder', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedElementBinder).toBe(null);\n      });\n      it('should create a nestedProtoView', () => {\n        var rootElement = el('<div><span template=\"\"></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView).not.toBe(null);\n        expect(results[2].inheritedProtoView).toBe(results[1].inheritedElementBinder.nestedProtoView);\n        expect(DOM.getOuterHTML(results[2].inheritedProtoView.rootElement)).toEqual('<span template=\"\"></span>');\n      });\n    });\n    describe('elements with *directive_name attribute', () => {\n      it('should replace the element with an empty <template> element', () => {\n        var rootElement = el('<div><span *if></span></div>');\n        var originalChild = rootElement.childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<div><template class=\"ng-binding\" if=\"\"></template></div>');\n        expect(DOM.getOuterHTML(results[2].element)).toEqual('<span *if=\"\"></span>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should mark the element as viewRoot', () => {\n        var rootElement = el('<div><div *foo=\"bar\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].isViewRoot).toBe(true);\n      });\n      it('should work with top-level template node', () => {\n        var rootElement = el('<template><div *foo>x</div></template>');\n        var originalChild = DOM.content(rootElement).childNodes[0];\n        var results = createPipeline().process(rootElement);\n        expect(results[0].element).toBe(rootElement);\n        expect(results[0].isViewRoot).toBe(true);\n        expect(results[2].isViewRoot).toBe(true);\n        expect(DOM.getOuterHTML(results[0].element)).toEqual('<template><template class=\"ng-binding\" foo=\"\"></template></template>');\n        expect(results[2].element).toBe(originalChild);\n      });\n      it('should add property bindings from the template attribute', () => {\n        var rootElement = el('<div><div *prop=\"expr\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].inheritedElementBinder.propertyBindings, 'prop').source).toEqual('expr');\n        expect(MapWrapper.get(results[1].attrs(), 'prop')).toEqual('expr');\n      });\n      it('should add variable mappings from the template attribute to the nestedProtoView', () => {\n        var rootElement = el('<div><div *foreach=\"var varName=mapName\"></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView.variableBindings).toEqual(MapWrapper.createFromStringMap({'mapName': 'varName'}));\n      });\n      it('should add entries without value as attribute to the element', () => {\n        var rootElement = el('<div><div *varname></div></div>');\n        var results = createPipeline().process(rootElement);\n        expect(MapWrapper.get(results[1].attrs(), 'varname')).toEqual('');\n        expect(results[1].inheritedElementBinder.propertyBindings).toEqual(MapWrapper.create());\n        expect(results[1].inheritedElementBinder.variableBindings).toEqual(MapWrapper.create());\n      });\n      it('should iterate properly after a template dom modification', () => {\n        var rootElement = el('<div><div *foo></div><after></after></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results.length).toEqual(4);\n      });\n      it('should copy over the elementDescription', () => {\n        var rootElement = el('<div><span *foo></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].elementDescription).toBe(results[1].elementDescription);\n      });\n      it('should clean out the inheritedElementBinder', () => {\n        var rootElement = el('<div><span *foo></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedElementBinder).toBe(null);\n      });\n      it('should create a nestedProtoView', () => {\n        var rootElement = el('<div><span *foo></span></div>');\n        var results = createPipeline().process(rootElement);\n        expect(results[2].inheritedProtoView).not.toBe(null);\n        expect(results[2].inheritedProtoView).toBe(results[1].inheritedElementBinder.nestedProtoView);\n        expect(DOM.getOuterHTML(results[2].inheritedProtoView.rootElement)).toEqual('<span *foo=\"\"></span>');\n      });\n    });\n  });\n}\n//# sourceMappingURL=view_splitter_spec.js.map\n\n//# sourceMappingURL=./view_splitter_spec.map"]}