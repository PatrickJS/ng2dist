{"version":3,"sources":["switch_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/directives/switch_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {Switch,\n  SwitchWhen,\n  SwitchDefault} from 'angular2/src/directives/switch';\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\nexport function main() {\n  describe('switch', () => {\n    describe('switch value changes', () => {\n      it('should switch amongst when values', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' + '<ul [switch]=\"switchValue\">' + '<template [switch-when]=\"\\'a\\'\"><li>when a</li></template>' + '<template [switch-when]=\"\\'b\\'\"><li>when b</li></template>' + '</ul></div>';\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('');\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when a');\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when b');\n          async.done();\n        });\n      }));\n      it('should switch amongst when values with fallback to default', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' + '<ul [switch]=\"switchValue\">' + '<li template=\"switch-when \\'a\\'\">when a</li>' + '<li template=\"switch-default\">when default</li>' + '</ul></div>';\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default');\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when a');\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default');\n          async.done();\n        });\n      }));\n      it('should support multiple whens with the same value', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' + '<ul [switch]=\"switchValue\">' + '<template [switch-when]=\"\\'a\\'\"><li>when a1;</li></template>' + '<template [switch-when]=\"\\'b\\'\"><li>when b1;</li></template>' + '<template [switch-when]=\"\\'a\\'\"><li>when a2;</li></template>' + '<template [switch-when]=\"\\'b\\'\"><li>when b2;</li></template>' + '<template [switch-default]><li>when default1;</li></template>' + '<template [switch-default]><li>when default2;</li></template>' + '</ul></div>';\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default1;when default2;');\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when a1;when a2;');\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when b1;when b2;');\n          async.done();\n        });\n      }));\n    });\n    describe('when values changes', () => {\n      it('should switch amongst when values', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n        var template = '<div>' + '<ul [switch]=\"switchValue\">' + '<template [switch-when]=\"when1\"><li>when 1;</li></template>' + '<template [switch-when]=\"when2\"><li>when 2;</li></template>' + '<template [switch-default]><li>when default;</li></template>' + '</ul></div>';\n        tb.createView(TestComponent, {html: template}).then((view) => {\n          view.context.when1 = 'a';\n          view.context.when2 = 'b';\n          view.context.switchValue = 'a';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when 1;');\n          view.context.switchValue = 'b';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when 2;');\n          view.context.switchValue = 'c';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default;');\n          view.context.when1 = 'c';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when 1;');\n          view.context.when1 = 'd';\n          view.detectChanges();\n          expect(DOM.getText(view.rootNodes[0])).toEqual('when default;');\n          async.done();\n        });\n      }));\n    });\n  });\n}\nclass TestComponent {\n  constructor() {\n    this.switchValue = null;\n    this.when1 = null;\n    this.when2 = null;\n  }\n}\nObject.defineProperty(TestComponent, \"annotations\", {get: function() {\n    return [new Component({selector: 'test-cmp'}), new View({directives: [Switch, SwitchWhen, SwitchDefault]})];\n  }});\n//# sourceMappingURL=switch_spec.js.map\n\n//# sourceMappingURL=./switch_spec.map"]}