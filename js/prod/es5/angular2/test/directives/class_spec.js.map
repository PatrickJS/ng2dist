{"version":3,"sources":["class_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/directives/class_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  beforeEachBindings,\n  ddescribe,\n  xdescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {StringMapWrapper} from 'angular2/src/facade/collection';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {Component} from 'angular2/src/core/annotations/annotations';\nimport {TestBed} from 'angular2/src/test_lib/test_bed';\nimport {CSSClass} from 'angular2/src/directives/class';\nexport function main() {\n  describe('binding to CSS class list', () => {\n    it('should add classes specified in an object literal', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"{foo: true, bar: false}\"></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n        async.done();\n      });\n    }));\n    it('should add and remove classes based on changes in object literal values', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"{foo: condition, bar: !condition}\"></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n        view.context.condition = false;\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding bar');\n        async.done();\n      });\n    }));\n    it('should add and remove classes based on changes to the expression object', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"expr\"></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n        StringMapWrapper.set(view.context.expr, 'bar', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo bar');\n        StringMapWrapper.set(view.context.expr, 'baz', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo bar baz');\n        StringMapWrapper.delete(view.context.expr, 'bar');\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo baz');\n        async.done();\n      });\n    }));\n    it('should retain existing classes when expression evaluates to null', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"expr\"></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n        view.context.expr = null;\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding foo');\n        view.context.expr = {\n          'foo': false,\n          'bar': true\n        };\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('ng-binding bar');\n        async.done();\n      });\n    }));\n    it('should co-operate with the class attribute', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div [class]=\"expr\" class=\"init foo\"></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        StringMapWrapper.set(view.context.expr, 'bar', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init foo ng-binding bar');\n        StringMapWrapper.set(view.context.expr, 'foo', false);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init ng-binding bar');\n        async.done();\n      });\n    }));\n    it('should co-operate with the class attribute and class.name binding', inject([TestBed, AsyncTestCompleter], (tb, async) => {\n      var template = '<div class=\"init foo\" [class]=\"expr\" [class.baz]=\"condition\"></div>';\n      tb.createView(TestComponent, {html: template}).then((view) => {\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init foo ng-binding baz');\n        StringMapWrapper.set(view.context.expr, 'bar', true);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init foo ng-binding baz bar');\n        StringMapWrapper.set(view.context.expr, 'foo', false);\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init ng-binding baz bar');\n        view.context.condition = false;\n        view.detectChanges();\n        expect(view.rootNodes[0].className).toEqual('init ng-binding bar');\n        async.done();\n      });\n    }));\n  });\n}\nclass TestComponent {\n  constructor() {\n    this.condition = true;\n    this.expr = {\n      'foo': true,\n      'bar': false\n    };\n  }\n}\nObject.defineProperty(TestComponent, \"annotations\", {get: function() {\n    return [new Component({selector: 'test-cmp'}), new View({directives: [CSSClass]})];\n  }});\n//# sourceMappingURL=class_spec.js.map\n\n//# sourceMappingURL=./class_spec.map"]}