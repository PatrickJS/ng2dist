{"version":3,"sources":["vm_turn_zone_spec.es6"],"names":[],"mappings":"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","file":"angular2/test/core/zone/vm_turn_zone_spec.js","sourcesContent":["import {AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xdescribe,\n  xit} from 'angular2/test_lib';\nimport {Log,\n  once} from 'angular2/test_lib';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {BaseException} from 'angular2/src/facade/lang';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nexport function main() {\n  describe(\"VmTurnZone\", () => {\n    var log,\n        zone;\n    beforeEach(() => {\n      log = new Log();\n      zone = new VmTurnZone({enableLongStackTrace: true});\n      zone.initCallbacks({\n        onTurnStart: log.fn('onTurnStart'),\n        onTurnDone: log.fn('onTurnDone')\n      });\n    });\n    describe(\"run\", () => {\n      it('should call onTurnStart and onTurnDone', () => {\n        zone.run(log.fn('run'));\n        expect(log.result()).toEqual('onTurnStart; run; onTurnDone');\n      });\n      it('should return the body return value from run', () => {\n        expect(zone.run(() => 6)).toEqual(6);\n      });\n      it('should not run onTurnStart and onTurnDone for nested Zone.run', () => {\n        zone.run(() => {\n          zone.run(log.fn('run'));\n        });\n        expect(log.result()).toEqual('onTurnStart; run; onTurnDone');\n      });\n      it('should call onTurnStart and onTurnDone before and after each top-level run', () => {\n        zone.run(log.fn('run1'));\n        zone.run(log.fn('run2'));\n        expect(log.result()).toEqual('onTurnStart; run1; onTurnDone; onTurnStart; run2; onTurnDone');\n      });\n      it('should call onTurnStart and onTurnDone before and after each turn', inject([AsyncTestCompleter], (async) => {\n        var a = PromiseWrapper.completer();\n        var b = PromiseWrapper.completer();\n        zone.run(() => {\n          log.add('run start');\n          a.promise.then((_) => log.add('a then'));\n          b.promise.then((_) => log.add('b then'));\n        });\n        a.resolve(\"a\");\n        b.resolve(\"b\");\n        PromiseWrapper.all([a.promise, b.promise]).then((_) => {\n          expect(log.result()).toEqual('onTurnStart; run start; onTurnDone; onTurnStart; a then; onTurnDone; onTurnStart; b then; onTurnDone');\n          async.done();\n        });\n      }));\n    });\n    describe(\"runOutsideAngular\", () => {\n      it(\"should run a function outside of the angular zone\", () => {\n        zone.runOutsideAngular(log.fn('run'));\n        expect(log.result()).toEqual('run');\n      });\n    });\n    describe(\"exceptions\", () => {\n      var trace,\n          exception,\n          saveStackTrace;\n      beforeEach(() => {\n        trace = null;\n        exception = null;\n        saveStackTrace = (e, t) => {\n          exception = e;\n          trace = t;\n        };\n      });\n      it('should call the on error callback when it is defined', () => {\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n        zone.run(() => {\n          throw new BaseException('aaa');\n        });\n        expect(exception).toBeDefined();\n      });\n      it('should rethrow exceptions from the body when no callback defined', () => {\n        expect(() => {\n          zone.run(() => {\n            throw new BaseException('bbb');\n          });\n        }).toThrowError('bbb');\n      });\n      it('should produce long stack traces', inject([AsyncTestCompleter], (async) => {\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n        var c = PromiseWrapper.completer();\n        zone.run(function() {\n          PromiseWrapper.setTimeout(function() {\n            PromiseWrapper.setTimeout(function() {\n              c.resolve(null);\n              throw new BaseException('ccc');\n            }, 0);\n          }, 0);\n        });\n        c.promise.then((_) => {\n          expect(trace.length).toBeGreaterThan(1);\n          async.done();\n        });\n      }));\n      it('should produce long stack traces (when using promises)', inject([AsyncTestCompleter], (async) => {\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n        var c = PromiseWrapper.completer();\n        zone.run(function() {\n          PromiseWrapper.resolve(null).then((_) => {\n            return PromiseWrapper.resolve(null).then((__) => {\n              c.resolve(null);\n              throw new BaseException(\"ddd\");\n            });\n          });\n        });\n        c.promise.then((_) => {\n          expect(trace.length).toBeGreaterThan(1);\n          async.done();\n        });\n      }));\n      it('should disable long stack traces', inject([AsyncTestCompleter], (async) => {\n        var zone = new VmTurnZone({enableLongStackTrace: false});\n        zone.initCallbacks({onErrorHandler: saveStackTrace});\n        var c = PromiseWrapper.completer();\n        zone.run(function() {\n          PromiseWrapper.setTimeout(function() {\n            PromiseWrapper.setTimeout(function() {\n              c.resolve(null);\n              throw new BaseException('ccc');\n            }, 0);\n          }, 0);\n        });\n        c.promise.then((_) => {\n          expect(trace.length).toEqual(1);\n          async.done();\n        });\n      }));\n    });\n  });\n}\n//# sourceMappingURL=vm_turn_zone_spec.js.map\n\n//# sourceMappingURL=./vm_turn_zone_spec.map"]}