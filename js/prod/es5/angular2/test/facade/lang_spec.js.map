{"version":3,"sources":["lang_spec.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,qFAAoB,UAAS,SAAQ;;;;;;;;;;;;;;AAY7C,SAAS,KAAG,CAAE,AAAD;AAClB,WAAO,AAAC,CAAC,QAAO,GAAG,SAAC,AAAD;AACjB,OAAC,AAAC,CAAC,wCAAuC,GAAG,SAAC,AAAD,CAAM;AACjD,AAAI,UAAA,CAAA,EAAC,EAAI,CAAA,aAAY,OAAO,AAAC,CAAC,KAAI,CAAC,CAAC;AACpC,AAAI,UAAA,CAAA,OAAM,EAAI,CAAA,aAAY,QAAQ,AAAC,CAAC,EAAC,CAAG,aAAW,CAAC,CAAC;AACrD,AAAI,UAAA,CAAA,OAAM,EAAI,GAAC,CAAC;AAChB,AAAI,UAAA,CAAA,CAAA,CAAC;AACL,cAAO,SAAQ,AAAC,CAAC,CAAA,EAAI,CAAA,oBAAmB,KAAK,AAAC,CAAC,OAAM,CAAC,CAAC,CAAG;AACxD,oBAAU,KAAK,AAAC,CAAC,OAAM,CAAG,CAAA,CAAA,MAAM,CAAC,CAAC;AAClC,eAAK,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;AACzB,eAAK,AAAC,CAAC,CAAA,CAAE,CAAA,CAAC,CAAC,QAAQ,AAAC,CAAC,GAAE,CAAC,CAAC;AACzB,eAAK,AAAC,CAAC,CAAA,OAAO,CAAC,KAAK,AAAC,CAAC,CAAA,CAAC,CAAC;QAC1B;AAAA,AACA,aAAK,AAAC,CAAC,OAAM,CAAC,QAAQ,AAAC,CAAC,CAAC,CAAA,CAAG,EAAA,CAAG,EAAA,CAAG,EAAA,CAAC,CAAC,CAAC;MACvC,EAAC,CAAC;IACJ,EAAC,CAAC;EACJ;AA3BQ,UAAQ,AAAC,cAAqC,CAAA;AADtD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,eAAoB,KAAG,SAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;AAA1C,aAAoB,KAAG,OAAkB,CAAC;AAA1C,iBAAoB,KAAG,WAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,UAAoB,KAAG,IAAkB,CAAC;AAA1C,SAAoB,KAAG,GAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,gBAAoB,KAAG,UAAkB,CAAC;AAA1C,oBAAoB,KAAG,cAAkB,CAAC;AAA1C,2BAAoB,KAAG,qBAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;IAAmB;EAC3B,CAAA;AADI,CAAC,CAAC;AA6ByB","file":"angular2/test/facade/lang_spec.js","sourcesContent":["import {describe,\n  it,\n  expect,\n  beforeEach,\n  ddescribe,\n  iit,\n  xit,\n  el} from 'angular2/test_lib';\nimport {ListWrapper} from 'angular2/src/facade/collection';\nimport {isPresent,\n  RegExpWrapper,\n  RegExpMatcherWrapper} from 'angular2/src/facade/lang';\nexport function main() {\n  describe('RegExp', () => {\n    it('should expose the index for each match', () => {\n      var re = RegExpWrapper.create('(!)');\n      var matcher = RegExpWrapper.matcher(re, '0!23!567!!');\n      var indexes = [];\n      var m;\n      while (isPresent(m = RegExpMatcherWrapper.next(matcher))) {\n        ListWrapper.push(indexes, m.index);\n        expect(m[0]).toEqual('!');\n        expect(m[1]).toEqual('!');\n        expect(m.length).toBe(2);\n      }\n      expect(indexes).toEqual([1, 4, 8, 9]);\n    });\n  });\n}\n//# sourceMappingURL=lang_spec.js.map\n\n//# sourceMappingURL=./lang_spec.map"]}