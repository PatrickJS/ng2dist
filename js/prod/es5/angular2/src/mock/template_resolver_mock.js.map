{"version":3,"sources":["template_resolver_mock.es6"],"names":[],"mappings":"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","file":"angular2/src/mock/template_resolver_mock.js","sourcesContent":["import {Map,\n  MapWrapper,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {Type,\n  isPresent,\n  BaseException,\n  stringify,\n  isBlank} from 'angular2/src/facade/lang';\nimport {View} from 'angular2/src/core/annotations/view';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nexport class MockTemplateResolver extends TemplateResolver {\n  constructor() {\n    super();\n    this._templates = MapWrapper.create();\n    this._inlineTemplates = MapWrapper.create();\n    this._templateCache = MapWrapper.create();\n    this._directiveOverrides = MapWrapper.create();\n  }\n  setView(component, view) {\n    this._checkOverrideable(component);\n    MapWrapper.set(this._templates, component, view);\n  }\n  setInlineTemplate(component, template) {\n    this._checkOverrideable(component);\n    MapWrapper.set(this._inlineTemplates, component, template);\n  }\n  overrideTemplateDirective(component, from, to) {\n    this._checkOverrideable(component);\n    var overrides = MapWrapper.get(this._directiveOverrides, component);\n    if (isBlank(overrides)) {\n      overrides = MapWrapper.create();\n      MapWrapper.set(this._directiveOverrides, component, overrides);\n    }\n    MapWrapper.set(overrides, from, to);\n  }\n  resolve(component) {\n    var view = MapWrapper.get(this._templateCache, component);\n    if (isPresent(view))\n      return view;\n    view = MapWrapper.get(this._templates, component);\n    if (isBlank(view)) {\n      view = super.resolve(component);\n    }\n    var directives = view.directives;\n    var overrides = MapWrapper.get(this._directiveOverrides, component);\n    if (isPresent(overrides) && isPresent(directives)) {\n      directives = ListWrapper.clone(view.directives);\n      MapWrapper.forEach(overrides, (to, from) => {\n        var srcIndex = directives.indexOf(from);\n        if (srcIndex == -1) {\n          throw new BaseException(`Overriden directive ${stringify(from)} not found in the template of ${stringify(component)}`);\n        }\n        directives[srcIndex] = to;\n      });\n      view = new View({\n        template: view.template,\n        templateUrl: view.templateUrl,\n        directives: directives,\n        formatters: view.formatters,\n        source: view.source,\n        locale: view.locale,\n        device: view.device\n      });\n    }\n    var inlineTemplate = MapWrapper.get(this._inlineTemplates, component);\n    if (isPresent(inlineTemplate)) {\n      view = new View({\n        template: inlineTemplate,\n        templateUrl: null,\n        directives: view.directives,\n        formatters: view.formatters,\n        source: view.source,\n        locale: view.locale,\n        device: view.device\n      });\n    }\n    MapWrapper.set(this._templateCache, component, view);\n    return view;\n  }\n  _checkOverrideable(component) {\n    var cached = MapWrapper.get(this._templateCache, component);\n    if (isPresent(cached)) {\n      throw new BaseException(`The component ${stringify(component)} has already been compiled, its configuration can not be changed`);\n    }\n  }\n}\nObject.defineProperty(MockTemplateResolver.prototype.setView, \"parameters\", {get: function() {\n    return [[Type], [View]];\n  }});\nObject.defineProperty(MockTemplateResolver.prototype.setInlineTemplate, \"parameters\", {get: function() {\n    return [[Type], [assert.type.string]];\n  }});\nObject.defineProperty(MockTemplateResolver.prototype.overrideTemplateDirective, \"parameters\", {get: function() {\n    return [[Type], [Type], [Type]];\n  }});\nObject.defineProperty(MockTemplateResolver.prototype.resolve, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\nObject.defineProperty(MockTemplateResolver.prototype._checkOverrideable, \"parameters\", {get: function() {\n    return [[Type]];\n  }});\n//# sourceMappingURL=template_resolver_mock.js.map\n\n//# sourceMappingURL=./template_resolver_mock.map"]}