{"version":3,"sources":["web_driver_extension_spec.es6"],"names":[],"mappings":"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","file":"benchpress/test/web_driver_extension_spec.js","sourcesContent":["import {afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {StringMap,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {isPresent,\n  StringWrapper} from 'angular2/src/facade/lang';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {WebDriverExtension,\n  bind,\n  Injector,\n  Options} from 'benchpress/common';\nexport function main() {\n  function createExtension(ids, caps) {\n    return Injector.resolveAndCreate([ListWrapper.map(ids, (id) => bind(id).toValue(new MockExtension(id))), bind(Options.CAPABILITIES).toValue(caps), WebDriverExtension.bindTo(ids)]).asyncGet(WebDriverExtension);\n  }\n  describe('WebDriverExtension.bindTo', () => {\n    it('should bind the extension that matches the capabilities', inject([AsyncTestCompleter], (async) => {\n      createExtension(['m1', 'm2', 'm3'], {'browser': 'm2'}).then((m) => {\n        expect(m.id).toEqual('m2');\n        async.done();\n      });\n    }));\n    it('should throw if there is no match', inject([AsyncTestCompleter], (async) => {\n      PromiseWrapper.catchError(createExtension(['m1'], {'browser': 'm2'}), (err) => {\n        expect(isPresent(err)).toBe(true);\n        async.done();\n      });\n    }));\n  });\n}\nclass MockExtension extends WebDriverExtension {\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n  supports(capabilities) {\n    return StringWrapper.equals(capabilities['browser'], this.id);\n  }\n}\nObject.defineProperty(MockExtension.prototype.supports, \"parameters\", {get: function() {\n    return [[StringMap]];\n  }});\n//# sourceMappingURL=web_driver_extension_spec.js.map\n\n//# sourceMappingURL=./web_driver_extension_spec.map"]}