{"version":3,"sources":["json_file_reporter_spec.es6"],"names":[],"mappings":"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","file":"benchpress/test/reporter/json_file_reporter_spec.js","sourcesContent":["import {afterEach,\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit} from 'angular2/test_lib';\nimport {DateWrapper,\n  Json,\n  RegExpWrapper,\n  isPresent} from 'angular2/src/facade/lang';\nimport {PromiseWrapper} from 'angular2/src/facade/async';\nimport {bind,\n  Injector,\n  SampleDescription,\n  MeasureValues,\n  Options} from 'benchpress/common';\nimport {JsonFileReporter} from 'benchpress/src/reporter/json_file_reporter';\nexport function main() {\n  describe('file reporter', () => {\n    var loggedFile;\n    function createReporter({sampleId,\n      descriptions,\n      metrics,\n      path}) {\n      var bindings = [JsonFileReporter.BINDINGS, bind(SampleDescription).toValue(new SampleDescription(sampleId, descriptions, metrics)), bind(JsonFileReporter.PATH).toValue(path), bind(Options.NOW).toValue(() => DateWrapper.fromMillis(1234)), bind(Options.WRITE_FILE).toValue((filename, content) => {\n        loggedFile = {\n          'filename': filename,\n          'content': content\n        };\n        return PromiseWrapper.resolve(null);\n      })];\n      return Injector.resolveAndCreate(bindings).get(JsonFileReporter);\n    }\n    it('should write all data into a file', inject([AsyncTestCompleter], (async) => {\n      createReporter({\n        sampleId: 'someId',\n        descriptions: [{'a': 2}],\n        path: 'somePath',\n        metrics: {'script': 'script time'}\n      }).reportSample([mv(0, 0, {\n        'a': 3,\n        'b': 6\n      })], [mv(0, 0, {\n        'a': 3,\n        'b': 6\n      }), mv(1, 1, {\n        'a': 5,\n        'b': 9\n      })]);\n      var regExp = RegExpWrapper.create('somePath/someId_\\\\d+\\\\.json');\n      expect(isPresent(RegExpWrapper.firstMatch(regExp, loggedFile['filename']))).toBe(true);\n      var parsedContent = Json.parse(loggedFile['content']);\n      expect(parsedContent).toEqual({\n        \"description\": {\n          \"id\": \"someId\",\n          \"description\": {\"a\": 2},\n          \"metrics\": {\"script\": \"script time\"}\n        },\n        \"completeSample\": [{\n          \"timeStamp\": \"1970-01-01T00:00:00.000Z\",\n          \"runIndex\": 0,\n          \"values\": {\n            \"a\": 3,\n            \"b\": 6\n          }\n        }],\n        \"validSample\": [{\n          \"timeStamp\": \"1970-01-01T00:00:00.000Z\",\n          \"runIndex\": 0,\n          \"values\": {\n            \"a\": 3,\n            \"b\": 6\n          }\n        }, {\n          \"timeStamp\": \"1970-01-01T00:00:00.001Z\",\n          \"runIndex\": 1,\n          \"values\": {\n            \"a\": 5,\n            \"b\": 9\n          }\n        }]\n      });\n      async.done();\n    }));\n  });\n}\nfunction mv(runIndex, time, values) {\n  return new MeasureValues(runIndex, DateWrapper.fromMillis(time), values);\n}\n//# sourceMappingURL=json_file_reporter_spec.js.map\n\n//# sourceMappingURL=./json_file_reporter_spec.map"]}