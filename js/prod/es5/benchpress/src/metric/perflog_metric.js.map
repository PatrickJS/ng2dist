{"version":3,"sources":["perflog_metric.es6"],"names":[],"mappings":"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","file":"benchpress/src/metric/perflog_metric.js","sourcesContent":["import {PromiseWrapper,\n  Promise} from 'angular2/src/facade/async';\nimport {isPresent,\n  isBlank,\n  int,\n  BaseException,\n  StringWrapper,\n  Math,\n  RegExpWrapper,\n  NumberWrapper} from 'angular2/src/facade/lang';\nimport {ListWrapper,\n  StringMap,\n  StringMapWrapper} from 'angular2/src/facade/collection';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {WebDriverExtension,\n  PerfLogFeatures} from '../web_driver_extension';\nimport {Metric} from '../metric';\nimport {Options} from '../common_options';\nexport class PerflogMetric extends Metric {\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  static get SET_TIMEOUT() {\n    return _SET_TIMEOUT;\n  }\n  constructor(driverExtension, setTimeout, microMetrics) {\n    super();\n    this._driverExtension = driverExtension;\n    this._remainingEvents = [];\n    this._measureCount = 0;\n    this._setTimeout = setTimeout;\n    this._microMetrics = microMetrics;\n    this._perfLogFeatures = driverExtension.perfLogFeatures();\n  }\n  describe() {\n    var res = {\n      'scriptTime': 'script execution time in ms, including gc and render',\n      'pureScriptTime': 'script execution time in ms, without gc nor render'\n    };\n    if (this._perfLogFeatures.render) {\n      res['renderTime'] = 'render time in and ouside of script in ms';\n    }\n    if (this._perfLogFeatures.gc) {\n      res['gcTime'] = 'gc time in and ouside of script in ms';\n      res['gcAmount'] = 'gc amount in kbytes';\n      res['majorGcTime'] = 'time of major gcs in ms';\n    }\n    StringMapWrapper.forEach(this._microMetrics, (desc, name) => {\n      StringMapWrapper.set(res, name, desc);\n    });\n    return res;\n  }\n  beginMeasure() {\n    return this._driverExtension.timeBegin(this._markName(this._measureCount++));\n  }\n  endMeasure(restart) {\n    var markName = this._markName(this._measureCount - 1);\n    var nextMarkName = restart ? this._markName(this._measureCount++) : null;\n    return this._driverExtension.timeEnd(markName, nextMarkName).then((_) => this._readUntilEndMark(markName));\n  }\n  _readUntilEndMark(markName, loopCount = 0, startEvent = null) {\n    if (loopCount > _MAX_RETRY_COUNT) {\n      throw new BaseException(`Tried too often to get the ending mark: ${loopCount}`);\n    }\n    return this._driverExtension.readPerfLog().then((events) => {\n      this._addEvents(events);\n      var result = this._aggregateEvents(this._remainingEvents, markName);\n      if (isPresent(result)) {\n        this._remainingEvents = events;\n        return result;\n      }\n      var completer = PromiseWrapper.completer();\n      this._setTimeout(() => completer.resolve(this._readUntilEndMark(markName, loopCount + 1)), 100);\n      return completer.promise;\n    });\n  }\n  _addEvents(events) {\n    var needSort = false;\n    ListWrapper.forEach(events, (event) => {\n      if (StringWrapper.equals(event['ph'], 'X')) {\n        needSort = true;\n        var startEvent = {};\n        var endEvent = {};\n        StringMapWrapper.forEach(event, (value, prop) => {\n          startEvent[prop] = value;\n          endEvent[prop] = value;\n        });\n        startEvent['ph'] = 'B';\n        endEvent['ph'] = 'E';\n        endEvent['ts'] = startEvent['ts'] + startEvent['dur'];\n        ListWrapper.push(this._remainingEvents, startEvent);\n        ListWrapper.push(this._remainingEvents, endEvent);\n      } else {\n        ListWrapper.push(this._remainingEvents, event);\n      }\n    });\n    if (needSort) {\n      ListWrapper.sort(this._remainingEvents, (a, b) => {\n        var diff = a['ts'] - b['ts'];\n        return diff > 0 ? 1 : diff < 0 ? -1 : 0;\n      });\n    }\n  }\n  _aggregateEvents(events, markName) {\n    var result = {\n      'scriptTime': 0,\n      'pureScriptTime': 0\n    };\n    if (this._perfLogFeatures.gc) {\n      result['gcTime'] = 0;\n      result['majorGcTime'] = 0;\n      result['gcAmount'] = 0;\n    }\n    if (this._perfLogFeatures.render) {\n      result['renderTime'] = 0;\n    }\n    StringMapWrapper.forEach(this._microMetrics, (desc, name) => {\n      result[name] = 0;\n    });\n    var markStartEvent = null;\n    var markEndEvent = null;\n    var gcTimeInScript = 0;\n    var renderTimeInScript = 0;\n    var intervalStarts = {};\n    events.forEach((event) => {\n      var ph = event['ph'];\n      var name = event['name'];\n      var microIterations = 1;\n      var microIterationsMatch = RegExpWrapper.firstMatch(_MICRO_ITERATIONS_REGEX, name);\n      if (isPresent(microIterationsMatch)) {\n        name = microIterationsMatch[1];\n        microIterations = NumberWrapper.parseInt(microIterationsMatch[2], 10);\n      }\n      if (StringWrapper.equals(ph, 'b') && StringWrapper.equals(name, markName)) {\n        markStartEvent = event;\n      } else if (StringWrapper.equals(ph, 'e') && StringWrapper.equals(name, markName)) {\n        markEndEvent = event;\n      }\n      if (isPresent(markStartEvent) && isBlank(markEndEvent) && event['pid'] === markStartEvent['pid']) {\n        if (StringWrapper.equals(ph, 'B') || StringWrapper.equals(ph, 'b')) {\n          intervalStarts[name] = event;\n        } else if ((StringWrapper.equals(ph, 'E') || StringWrapper.equals(ph, 'e')) && isPresent(intervalStarts[name])) {\n          var startEvent = intervalStarts[name];\n          var duration = (event['ts'] - startEvent['ts']);\n          intervalStarts[name] = null;\n          if (StringWrapper.equals(name, 'gc')) {\n            result['gcTime'] += duration;\n            var amount = (startEvent['args']['usedHeapSize'] - event['args']['usedHeapSize']) / 1000;\n            result['gcAmount'] += amount;\n            var majorGc = event['args']['majorGc'];\n            if (isPresent(majorGc) && majorGc) {\n              result['majorGcTime'] += duration;\n            }\n            if (isPresent(intervalStarts['script'])) {\n              gcTimeInScript += duration;\n            }\n          } else if (StringWrapper.equals(name, 'render')) {\n            result['renderTime'] += duration;\n            if (isPresent(intervalStarts['script'])) {\n              renderTimeInScript += duration;\n            }\n          } else if (StringWrapper.equals(name, 'script')) {\n            result['scriptTime'] += duration;\n          } else if (isPresent(this._microMetrics[name])) {\n            result[name] += duration / microIterations;\n          }\n        }\n      }\n    });\n    result['pureScriptTime'] = result['scriptTime'] - gcTimeInScript - renderTimeInScript;\n    return isPresent(markStartEvent) && isPresent(markEndEvent) ? result : null;\n  }\n  _markName(index) {\n    return `${_MARK_NAME_PREFIX}${index}`;\n  }\n}\nObject.defineProperty(PerflogMetric, \"parameters\", {get: function() {\n    return [[WebDriverExtension], [Function], [assert.genericType(StringMap, assert.type.string, assert.type.string)]];\n  }});\nObject.defineProperty(PerflogMetric.prototype.endMeasure, \"parameters\", {get: function() {\n    return [[assert.type.boolean]];\n  }});\nObject.defineProperty(PerflogMetric.prototype._readUntilEndMark, \"parameters\", {get: function() {\n    return [[assert.type.string], [int], []];\n  }});\nvar _MICRO_ITERATIONS_REGEX = RegExpWrapper.create('(.+)\\\\*(\\\\d+)$');\nvar _MAX_RETRY_COUNT = 20;\nvar _MARK_NAME_PREFIX = 'benchpress';\nvar _SET_TIMEOUT = new OpaqueToken('PerflogMetric.setTimeout');\nvar _BINDINGS = [bind(PerflogMetric).toFactory((driverExtension, setTimeout, microMetrics) => new PerflogMetric(driverExtension, setTimeout, microMetrics), [WebDriverExtension, _SET_TIMEOUT, Options.MICRO_METRICS]), bind(_SET_TIMEOUT).toValue((fn, millis) => PromiseWrapper.setTimeout(fn, millis))];\n//# sourceMappingURL=perflog_metric.js.map\n\n//# sourceMappingURL=./perflog_metric.map"]}