{"version":3,"sources":["regression_slope_validator.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,wGAAoB,UAAS,SAAQ;;;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;AAA1C,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,gBAAoB,KAAG,UAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;+BAFY,CAAA,SAAQ,AAAC,8BAAjC,SAAS,QAAO;AACN,AAAI,UAAA,2BAOP,SAAM,yBAAuB,CAUtB,UAAS,CAAG,CAAA,MAAK,CAAG;AAC9B,AAnBJ,wBAAc,iBAAiB,AAAC,0BAAkB,KAAK,MAAmB,CAmB/D;AACP,aAAG,YAAY,EAAI,WAAS,CAAC;AAC7B,aAAG,QAAQ,EAAI,OAAK,CAAC;QACvB,AArBgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAqB5C,iBAAO,CAAP,UAAS,AAAD,CAAG;AACT,iBAAO;AACL,yBAAW,CAAG,CAAA,IAAG,YAAY;AAC7B,oCAAsB,CAAG,CAAA,IAAG,QAAQ;AAAA,YACtC,CAAC;UACH;AACA,iBAAO,CAAP,UAAS,cAAa,CAAG;AACvB,eAAI,cAAa,OAAO,GAAK,CAAA,IAAG,YAAY,CAAG;AAC7C,AAAI,gBAAA,CAAA,YAAW,EAAI,CAAA,WAAU,MAAM,AAAC,CAAC,cAAa,CAAG,CAAA,cAAa,OAAO,EAAI,CAAA,IAAG,YAAY,CAAG,CAAA,cAAa,OAAO,CAAC,CAAC;AACrH,AAAI,gBAAA,CAAA,OAAM,EAAI,GAAC,CAAC;AAChB,AAAI,gBAAA,CAAA,OAAM,EAAI,GAAC,CAAC;AAChB,kBAAS,GAAA,CAAA,CAAA,EAAI,EAAA,CAAG,CAAA,CAAA,EAAI,CAAA,YAAW,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC5C,0BAAU,KAAK,AAAC,CAAC,OAAM,CAAG,EAAA,CAAC,CAAC;AAC5B,0BAAU,KAAK,AAAC,CAAC,OAAM,CAAG,CAAA,YAAW,CAAE,CAAA,CAAC,OAAO,CAAE,IAAG,QAAQ,CAAC,CAAC,CAAC;cACjE;AAAA,AACI,gBAAA,CAAA,eAAc,EAAI,CAAA,SAAQ,yBAAyB,AAAC,CAAC,OAAM,CAAG,CAAA,SAAQ,cAAc,AAAC,CAAC,OAAM,CAAC,CAAG,QAAM,CAAG,CAAA,SAAQ,cAAc,AAAC,CAAC,OAAM,CAAC,CAAC,CAAC;AAC9I,mBAAO,CAAA,eAAc,GAAK,EAAA,CAAA,CAAI,aAAW,EAAI,KAAG,CAAC;YACnD,KAAO;AACL,mBAAO,KAAG,CAAC;YACb;AAAA,UACF;AAAA;AAlCA,YAAW,YAAU,EAAI;AACvB,iBAAO,aAAW,CAAC;UACrB;AACA,YAAW,OAAK,EAAI;AAClB,iBAAO,QAAM,CAAC;UAChB;AACA,YAAW,SAAO,EAAI;AACpB,iBAAO,UAAQ,CAAC;UAClB;AAAA,SAdgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAIqC,SAAQ,CAJ3B,EAJ2C;AA6CtE,WAAK,eAAe,AAAC,CAAC,wBAAuB,UAAU,SAAS,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC9F,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;mBACc,IAAI,YAAU,AAAC,CAAC,qCAAoC,CAAC;cAC1D,IAAI,YAAU,AAAC,CAAC,iCAAgC,CAAC;gBAC/C,EAAC,IAAG,AAAC,CAAC,wBAAuB,CAAC,UAAU,AAAC,EAAC,SAAC,UAAS,CAAG,CAAA,MAAK;aAAM,IAAI,yBAAuB,AAAC,CAAC,UAAS,CAAG,OAAK,CAAC;MAAA,EAAG,EAAC,YAAW,CAAG,QAAM,CAAC,CAAC,CAAG,CAAA,IAAG,AAAC,CAAC,YAAW,CAAC,QAAQ,AAAC,CAAC,EAAC,CAAC,CAAG,CAAA,IAAG,AAAC,CAAC,OAAM,CAAC,QAAQ,AAAC,CAAC,YAAW,CAAC,CAAC;IAhDlM;EAC3B,CAAA;AADI,CAAC,CAAC;AAmD0C","file":"benchpress/src/validator/regression_slope_validator.js","sourcesContent":["import {List,\n  ListWrapper,\n  StringMap} from 'angular2/src/facade/collection';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {Validator} from '../validator';\nimport {Statistic} from '../statistic';\nimport {MeasureValues} from '../measure_values';\nexport class RegressionSlopeValidator extends Validator {\n  static get SAMPLE_SIZE() {\n    return _SAMPLE_SIZE;\n  }\n  static get METRIC() {\n    return _METRIC;\n  }\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  constructor(sampleSize, metric) {\n    super();\n    this._sampleSize = sampleSize;\n    this._metric = metric;\n  }\n  describe() {\n    return {\n      'sampleSize': this._sampleSize,\n      'regressionSlopeMetric': this._metric\n    };\n  }\n  validate(completeSample) {\n    if (completeSample.length >= this._sampleSize) {\n      var latestSample = ListWrapper.slice(completeSample, completeSample.length - this._sampleSize, completeSample.length);\n      var xValues = [];\n      var yValues = [];\n      for (var i = 0; i < latestSample.length; i++) {\n        ListWrapper.push(xValues, i);\n        ListWrapper.push(yValues, latestSample[i].values[this._metric]);\n      }\n      var regressionSlope = Statistic.calculateRegressionSlope(xValues, Statistic.calculateMean(xValues), yValues, Statistic.calculateMean(yValues));\n      return regressionSlope >= 0 ? latestSample : null;\n    } else {\n      return null;\n    }\n  }\n}\nObject.defineProperty(RegressionSlopeValidator.prototype.validate, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)]];\n  }});\nvar _SAMPLE_SIZE = new OpaqueToken('RegressionSlopeValidator.sampleSize');\nvar _METRIC = new OpaqueToken('RegressionSlopeValidator.metric');\nvar _BINDINGS = [bind(RegressionSlopeValidator).toFactory((sampleSize, metric) => new RegressionSlopeValidator(sampleSize, metric), [_SAMPLE_SIZE, _METRIC]), bind(_SAMPLE_SIZE).toValue(10), bind(_METRIC).toValue('scriptTime')];\n//# sourceMappingURL=regression_slope_validator.js.map\n\n//# sourceMappingURL=./regression_slope_validator.map"]}