{"version":3,"sources":["runner.es6"],"names":[],"mappings":"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","file":"benchpress/src/runner.js","sourcesContent":["import {Injector,\n  bind} from 'angular2/di';\nimport {isPresent,\n  isBlank} from 'angular2/src/facade/lang';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise} from 'angular2/src/facade/async';\nimport {Sampler,\n  SampleState} from './sampler';\nimport {ConsoleReporter} from './reporter/console_reporter';\nimport {MultiReporter} from './reporter/multi_reporter';\nimport {RegressionSlopeValidator} from './validator/regression_slope_validator';\nimport {SizeValidator} from './validator/size_validator';\nimport {Validator} from './validator';\nimport {PerflogMetric} from './metric/perflog_metric';\nimport {MultiMetric} from './metric/multi_metric';\nimport {ChromeDriverExtension} from './webdriver/chrome_driver_extension';\nimport {IOsDriverExtension} from './webdriver/ios_driver_extension';\nimport {WebDriverExtension} from './web_driver_extension';\nimport {SampleDescription} from './sample_description';\nimport {WebDriverAdapter} from './web_driver_adapter';\nimport {Reporter} from './reporter';\nimport {Metric} from './metric';\nimport {Options} from './common_options';\nexport class Runner {\n  constructor(defaultBindings = null) {\n    if (isBlank(defaultBindings)) {\n      defaultBindings = [];\n    }\n    this._defaultBindings = defaultBindings;\n  }\n  sample({id,\n    execute,\n    prepare,\n    microMetrics,\n    bindings}) {\n    var sampleBindings = [_DEFAULT_BINDINGS, this._defaultBindings, bind(Options.SAMPLE_ID).toValue(id), bind(Options.EXECUTE).toValue(execute)];\n    if (isPresent(prepare)) {\n      ListWrapper.push(sampleBindings, bind(Options.PREPARE).toValue(prepare));\n    }\n    if (isPresent(microMetrics)) {\n      ListWrapper.push(sampleBindings, bind(Options.MICRO_METRICS).toValue(microMetrics));\n    }\n    if (isPresent(bindings)) {\n      ListWrapper.push(sampleBindings, bindings);\n    }\n    return Injector.resolveAndCreate(sampleBindings).asyncGet(Sampler).then((sampler) => sampler.sample());\n  }\n}\nObject.defineProperty(Runner, \"parameters\", {get: function() {\n    return [[List]];\n  }});\nvar _DEFAULT_BINDINGS = [Options.DEFAULT_BINDINGS, Sampler.BINDINGS, ConsoleReporter.BINDINGS, RegressionSlopeValidator.BINDINGS, SizeValidator.BINDINGS, ChromeDriverExtension.BINDINGS, IOsDriverExtension.BINDINGS, PerflogMetric.BINDINGS, SampleDescription.BINDINGS, MultiReporter.createBindings([ConsoleReporter]), MultiMetric.createBindings([PerflogMetric]), Reporter.bindTo(MultiReporter), Validator.bindTo(RegressionSlopeValidator), WebDriverExtension.bindTo([ChromeDriverExtension, IOsDriverExtension]), Metric.bindTo(MultiMetric), bind(Options.CAPABILITIES).toAsyncFactory((adapter) => adapter.capabilities(), [WebDriverAdapter]), bind(Options.USER_AGENT).toAsyncFactory((adapter) => adapter.executeScript('return window.navigator.userAgent;'), [WebDriverAdapter])];\n//# sourceMappingURL=runner.js.map\n\n//# sourceMappingURL=./runner.map"]}