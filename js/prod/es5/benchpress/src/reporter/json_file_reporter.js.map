{"version":3,"sources":["json_file_reporter.es6"],"names":[],"mappings":"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","file":"benchpress/src/reporter/json_file_reporter.js","sourcesContent":["import {DateWrapper,\n  isPresent,\n  isBlank,\n  Json} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {bind,\n  OpaqueToken} from 'angular2/di';\nimport {Reporter} from '../reporter';\nimport {SampleDescription} from '../sample_description';\nimport {MeasureValues} from '../measure_values';\nimport {Options} from '../common_options';\nexport class JsonFileReporter extends Reporter {\n  static get PATH() {\n    return _PATH;\n  }\n  static get BINDINGS() {\n    return _BINDINGS;\n  }\n  constructor(sampleDescription, path, writeFile, now) {\n    super();\n    this._description = sampleDescription;\n    this._path = path;\n    this._writeFile = writeFile;\n    this._now = now;\n  }\n  reportMeasureValues(measureValues) {\n    return PromiseWrapper.resolve(null);\n  }\n  reportSample(completeSample, validSample) {\n    var content = Json.stringify({\n      'description': this._description,\n      'completeSample': completeSample,\n      'validSample': validSample\n    });\n    var filePath = `${this._path}/${this._description.id}_${DateWrapper.toMillis(this._now())}.json`;\n    return this._writeFile(filePath, content);\n  }\n}\nObject.defineProperty(JsonFileReporter.prototype.reportMeasureValues, \"parameters\", {get: function() {\n    return [[MeasureValues]];\n  }});\nObject.defineProperty(JsonFileReporter.prototype.reportSample, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)], [assert.genericType(List, MeasureValues)]];\n  }});\nvar _PATH = new OpaqueToken('JsonFileReporter.path');\nvar _BINDINGS = [bind(JsonFileReporter).toFactory((sampleDescription, path, writeFile, now) => new JsonFileReporter(sampleDescription, path, writeFile, now), [SampleDescription, _PATH, Options.WRITE_FILE, Options.NOW]), bind(_PATH).toValue('.')];\n//# sourceMappingURL=json_file_reporter.js.map\n\n//# sourceMappingURL=./json_file_reporter.map"]}