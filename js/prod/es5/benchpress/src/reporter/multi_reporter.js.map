{"version":3,"sources":["multi_reporter.es6"],"names":[],"mappings":"AAAA,KAAK,SAAS,AAAC,oHAAoB,UAAS,SAAQ;;;;;;;;;;;;;AAApD,OAAO;AACD,UAAM,GADZ,SAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,eAAoB,KAAG,SAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,WAAoB,KAAG,KAAkB,CAAC;AAA1C,kBAAoB,KAAG,YAAkB,CAAC;IAElC,CAFR,UAAS,IAAG;AAAZ,cAAoB,KAAG,QAAkB,CAAC;AAA1C,qBAAoB,KAAG,eAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,oBAAoB,KAAG,cAAkB,CAAC;IAElC,CAFR,UAAS,IAAG,CAAG;AAAf,eAAoB,KAAG,SAAkB,CAAC;IAElC,CADuB;AACzB,UAAM;oBAFY,CAAA,SAAQ,AAAC,mBAAjC,SAAS,QAAO;AACN,AAAI,UAAA,gBAQP,SAAM,cAAY,CAIX,SAAQ,CAAG;AACrB,AAdJ,wBAAc,iBAAiB,AAAC,eAAkB,KAAK,MAAmB,CAc/D;AACP,aAAG,WAAW,EAAI,UAAQ,CAAC;QAC7B,AAfgD,CAAC;AACzC,aAAO,CAAA,CAAC,eAAc,YAAY,CAAC,AAAC;AAe5C,4BAAkB,CAAlB,UAAoB,MAAK;AACvB,iBAAO,CAAA,cAAa,IAAI,AAAC,CAAC,WAAU,IAAI,AAAC,CAAC,IAAG,WAAW,GAAG,SAAC,QAAO;mBAAM,CAAA,QAAO,oBAAoB,AAAC,CAAC,MAAK,CAAC;YAAA,EAAC,CAAC,CAAC;UACjH;AACA,qBAAW,CAAX,UAAa,cAAa,CAAG,CAAA,WAAU;AACrC,iBAAO,CAAA,cAAa,IAAI,AAAC,CAAC,WAAU,IAAI,AAAC,CAAC,IAAG,WAAW,GAAG,SAAC,QAAO;mBAAM,CAAA,QAAO,aAAa,AAAC,CAAC,cAAa,CAAG,YAAU,CAAC;YAAA,EAAC,CAAC,CAAC;UAC/H;WAZO,cAAa,CAApB,UAAsB,WAAU;AAC9B,iBAAO,EAAC,IAAG,AAAC,CAAC,SAAQ,CAAC,eAAe,AAAC,EAAC,SAAC,QAAO;mBAAM,CAAA,cAAa,IAAI,AAAC,CAAC,WAAU,IAAI,AAAC,CAAC,WAAU,GAAG,SAAC,KAAI;qBAAM,CAAA,QAAO,SAAS,AAAC,CAAC,KAAI,CAAC;cAAA,EAAC,CAAC;YAAA,EAAG,EAAC,QAAO,CAAC,CAAC,CAAG,CAAA,IAAG,AAAC,CAAC,aAAY,CAAC,UAAU,AAAC,EAAC,SAAC,QAAO;mBAAM,IAAI,cAAY,AAAC,CAAC,QAAO,CAAC;YAAA,EAAG,EAAC,SAAQ,CAAC,CAAC,CAAC,CAAC;UACjP,EATgE,SAAO,CAAC,CAAC;MACnE,AAAC,CAK0B,QAAO,CALf,EAJ2C;AAwBtE,WAAK,eAAe,AAAC,CAAC,aAAY,UAAU,oBAAoB,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAC9F,eAAO,EAAC,CAAC,aAAY,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;AACL,WAAK,eAAe,AAAC,CAAC,aAAY,UAAU,aAAa,CAAG,aAAW,CAAG,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AACvF,eAAO,EAAC,CAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAG,EAAC,MAAK,YAAY,AAAC,CAAC,IAAG,CAAG,cAAY,CAAC,CAAC,CAAC,CAAC;QAC/F,CAAC,CAAC,CAAC;gBACW,IAAI,YAAU,AAAC,CAAC,wBAAuB,CAAC;IA5BzB;EAC3B,CAAA;AADI,CAAC,CAAC;AA+B8B","file":"benchpress/src/reporter/multi_reporter.js","sourcesContent":["import {bind,\n  Injector,\n  OpaqueToken} from 'angular2/di';\nimport {List,\n  ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise,\n  PromiseWrapper} from 'angular2/src/facade/async';\nimport {MeasureValues} from '../measure_values';\nimport {Reporter} from '../reporter';\nexport class MultiReporter extends Reporter {\n  static createBindings(childTokens) {\n    return [bind(_CHILDREN).toAsyncFactory((injector) => PromiseWrapper.all(ListWrapper.map(childTokens, (token) => injector.asyncGet(token))), [Injector]), bind(MultiReporter).toFactory((children) => new MultiReporter(children), [_CHILDREN])];\n  }\n  constructor(reporters) {\n    super();\n    this._reporters = reporters;\n  }\n  reportMeasureValues(values) {\n    return PromiseWrapper.all(ListWrapper.map(this._reporters, (reporter) => reporter.reportMeasureValues(values)));\n  }\n  reportSample(completeSample, validSample) {\n    return PromiseWrapper.all(ListWrapper.map(this._reporters, (reporter) => reporter.reportSample(completeSample, validSample)));\n  }\n}\nObject.defineProperty(MultiReporter.prototype.reportMeasureValues, \"parameters\", {get: function() {\n    return [[MeasureValues]];\n  }});\nObject.defineProperty(MultiReporter.prototype.reportSample, \"parameters\", {get: function() {\n    return [[assert.genericType(List, MeasureValues)], [assert.genericType(List, MeasureValues)]];\n  }});\nvar _CHILDREN = new OpaqueToken('MultiReporter.children');\n//# sourceMappingURL=multi_reporter.js.map\n\n//# sourceMappingURL=./multi_reporter.map"]}