{"version":3,"sources":["validator.js"],"names":[],"mappings":"AAAA,KAAO,EAAE,IAAG,CAAE,KAAO,cAAY,CAAC;AAClC,KAAO,EAAE,IAAG;AAAG,UAAQ,CAAE,KAAO,iCAA+B,CAAC;AAChE,KAAO,EACL,QAAO;AAAG,cAAY,CACxB,KAAO,2BAAyB,CAAC;AAEjC,KAAO,EAAE,aAAY,CAAE,KAAO,mBAAiB,CAAC;AAQhD,KAAO,MAAM,UAAQ;AACnB,OAAO,OAAK,CAAE,aAAY,CAAG;AAC3B,SAAO,EACL,IAAG,AAAC,CAAC,SAAQ,CAAC,UAAU,AAAC,CACvB,CAAC,QAAO,IAAM,SAAO,CAAG,EAAC,aAAY,CAAC,CACxC,CACF,CAAC;EACH;AAAA,AAKA,SAAO,CAAE,cAAa,AAAoB,CAAuB;AAC/D,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AAMA,SAAO,CAAE,AAAD,CAAa;AACnB,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AACF;AAAA,AArCA,KAAK,eAAe,AAAC,0BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAYzB,SAAO,AAAC,EAAC,EAZuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,4CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAuB,AA0BF,CAAA,IAAG,CAAE,cAAY,CAAC,AA1BG,GACE;EAAC,CAAC,CAAC,CAAC;AAoCrD","file":"benchpress/src/validator.es6","sourcesContent":["import { bind } from 'angular2/di';\nimport { List, StringMap } from 'angular2/src/facade/collection';\nimport {\n  ABSTRACT, BaseException\n} from 'angular2/src/facade/lang';\n\nimport { MeasureValues } from './measure_values';\n\n/**\n * A Validator calculates a valid sample out of the complete sample.\n * A valid sample is a sample that represents the population that should be observed\n * in the correct way.\n */\n@ABSTRACT()\nexport class Validator {\n  static bindTo(delegateToken) {\n    return [\n      bind(Validator).toFactory(\n        (delegate) => delegate, [delegateToken]\n      )\n    ];\n  }\n\n  /**\n   * Calculates a valid sample out of the complete sample\n   */\n  validate(completeSample:List<MeasureValues>):List<MeasureValues> {\n    throw new BaseException('NYI');\n  }\n\n  /**\n   * Returns a Map that describes the properties of the validator\n   * (e.g. sample size, ...)\n   */\n  describe():StringMap {\n    throw new BaseException('NYI');\n  }\n}"]}