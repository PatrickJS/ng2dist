{"version":3,"sources":["metric.js"],"names":[],"mappings":"AAAA,KAAO,EAAE,IAAG,CAAE,KAAO,cAAY,CAAC;AAClC,KAAO,EACL,OAAM;AAAG,eAAa,CACxB,KAAO,4BAA0B,CAAC;AAClC,KAAO,EACL,QAAO;AAAG,cAAY,CACxB,KAAO,2BAAyB,CAAC;AACjC,KAAO,EAAE,SAAQ,CAAE,KAAO,iCAA+B,CAAC;AAM1D,KAAO,MAAM,OAAK;AAChB,OAAO,OAAK,CAAE,aAAY,CAAG;AAC3B,SAAO,EACL,IAAG,AAAC,CAAC,MAAK,CAAC,UAAU,AAAC,CACpB,CAAC,QAAO,IAAM,SAAO,CAAG,EAAC,aAAY,CAAC,CACxC,CACF,CAAC;EACH;AAAA,AAKA,aAAW,CAAE,AAAD,CAAW;AACrB,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AAOA,WAAS,CAAE,OAAM,AAAQ,CAAsB;AAC7C,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AAMA,SAAO,CAAE,AAAD,CAAa;AACnB,QAAM,IAAI,cAAY,AAAC,CAAC,KAAI,CAAC,CAAC;EAChC;AAAA,AACF;AAAA,AA7CA,KAAK,eAAe,AAAC,uBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAWzB,SAAO,AAAC,EAAC,EAXuC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,WAC4B;EAAC,CAAC,CAAC,CAAC;AA6CrD","file":"benchpress/src/metric.es6","sourcesContent":["import { bind } from 'angular2/di';\nimport {\n  Promise, PromiseWrapper\n} from 'angular2/src/facade/async';\nimport {\n  ABSTRACT, BaseException\n} from 'angular2/src/facade/lang';\nimport { StringMap } from 'angular2/src/facade/collection';\n\n/**\n * A metric is measures values\n */\n@ABSTRACT()\nexport class Metric {\n  static bindTo(delegateToken) {\n    return [\n      bind(Metric).toFactory(\n        (delegate) => delegate, [delegateToken]\n      )\n    ];\n  }\n\n  /**\n   * Starts measuring\n   */\n  beginMeasure():Promise {\n    throw new BaseException('NYI');\n  }\n\n  /**\n   * Ends measuring and reports the data\n   * since the begin call.\n   * @param restart: Whether to restart right after this.\n   */\n  endMeasure(restart:boolean):Promise<StringMap> {\n    throw new BaseException('NYI');\n  }\n\n  /**\n   * Describes the metrics provided by this metric implementation.\n   * (e.g. units, ...)\n   */\n  describe():StringMap {\n    throw new BaseException('NYI');\n  }\n}\n"]}