{"version":3,"sources":["tree_benchmark.js"],"names":[],"mappings":"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","file":"benchmarks/src/tree/tree_benchmark.es6","sourcesContent":["import {Parser, Lexer, ChangeDetector, ChangeDetection, jitChangeDetection}\n  from 'angular2/change_detection';\nimport {ExceptionHandler} from 'angular2/src/core/exception_handler';\n\nimport {bootstrap, Component, Viewport, View, ViewContainer, Compiler, NgElement, Decorator} from 'angular2/angular2';\n\nimport {CompilerCache} from 'angular2/src/core/compiler/compiler';\nimport {DirectiveMetadataReader} from 'angular2/src/core/compiler/directive_metadata_reader';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {TemplateResolver} from 'angular2/src/core/compiler/template_resolver';\nimport {ShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/shadow_dom_strategy';\nimport {NativeShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/native_shadow_dom_strategy';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {TestabilityRegistry, Testability} from 'angular2/src/core/testability/testability';\n\nimport {reflector} from 'angular2/src/reflection/reflection';\nimport {ReflectionCapabilities} from 'angular2/src/reflection/reflection_capabilities';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {window, document, gc} from 'angular2/src/facade/browser';\nimport {getIntParameter, getStringParameter, bindAction} from 'angular2/src/test_lib/benchmark_util';\n\nimport {XHR} from 'angular2/src/services/xhr';\nimport {XHRImpl} from 'angular2/src/services/xhr_impl';\n\nimport {If} from 'angular2/directives';\nimport {BrowserDomAdapter} from 'angular2/src/dom/browser_adapter';\n\nimport {EventManager} from 'angular2/src/render/dom/events/event_manager';\nimport {ViewFactory, VIEW_POOL_CAPACITY} from 'angular2/src/core/compiler/view_factory';\nimport {ProtoViewFactory} from 'angular2/src/core/compiler/proto_view_factory';\nimport {Renderer} from 'angular2/src/render/api';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport * as rc from 'angular2/src/render/dom/compiler/compiler';\nimport * as rvf from 'angular2/src/render/dom/view/view_factory';\nimport {Inject, bind} from 'angular2/di';\n\nfunction createBindings():List {\n  var viewCacheCapacity = getStringParameter('viewcache') == 'true' ? 10000 : 1;\n  return [\n    bind(rvf.VIEW_POOL_CAPACITY).toValue(viewCacheCapacity),\n    bind(VIEW_POOL_CAPACITY).toValue(viewCacheCapacity)\n  ];\n}\n\nfunction setupReflector() {\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n}\n\nvar BASELINE_TREE_TEMPLATE;\nvar BASELINE_IF_TEMPLATE;\n\nexport function main() {\n  BrowserDomAdapter.makeCurrent();\n  var maxDepth = getIntParameter('depth');\n\n  setupReflector();\n\n  BASELINE_TREE_TEMPLATE = DOM.createTemplate(\n    '<span>_<template class=\"ng-binding\"></template><template class=\"ng-binding\"></template></span>');\n  BASELINE_IF_TEMPLATE = DOM.createTemplate(\n    '<span template=\"if\"><tree></tree></span>');\n\n  var app;\n  var lifeCycle;\n  var baselineRootTreeComponent;\n  var count = 0;\n\n  function ng2DestroyDom() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    app.initData = new TreeNode('', null, null);\n    lifeCycle.tick();\n  }\n\n  function profile(create, destroy, name) {\n    return function() {\n      window.console.profile(name + ' w GC');\n      var duration = 0;\n      var count = 0;\n      while(count++ < 150) {\n        gc();\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n\n      window.console.profile(name + ' w/o GC');\n      duration = 0;\n      count = 0;\n      while(count++ < 150) {\n        var start = window.performance.now();\n        create();\n        duration += window.performance.now() - start;\n        destroy();\n      }\n      window.console.profileEnd(name + ' w/o GC');\n      window.console.log(`Iterations: ${count}; time: ${duration / count} ms / iteration`);\n    };\n  }\n\n  function ng2CreateDom() {\n    var values = count++ % 2 == 0 ?\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*'] :\n      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '-'];\n\n    app.initData = buildTree(maxDepth, values, 0);\n    lifeCycle.tick();\n  }\n\n  function noop() {}\n\n  function initNg2() {\n    bootstrap(AppComponent, createBindings()).then((ref) => {\n      var injector = ref.injector;\n      lifeCycle = injector.get(LifeCycle);\n\n      app = injector.get(AppComponent);\n      bindAction('#ng2DestroyDom', ng2DestroyDom);\n      bindAction('#ng2CreateDom', ng2CreateDom);\n      bindAction('#ng2UpdateDomProfile', profile(ng2CreateDom, noop, 'ng2-update'));\n      bindAction('#ng2CreateDomProfile', profile(ng2CreateDom, ng2DestroyDom, 'ng2-create'));\n    });\n  }\n\n  function baselineDestroyDom() {\n    baselineRootTreeComponent.update(new TreeNode('', null, null));\n  }\n\n  function baselineCreateDom() {\n    var values = count++ % 2 == 0 ?\n      ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '*'] :\n      ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', '-'];\n\n    baselineRootTreeComponent.update(buildTree(maxDepth, values, 0));\n  }\n\n  function initBaseline() {\n    var tree = DOM.createElement('tree');\n    DOM.appendChild(DOM.querySelector(document, 'baseline'), tree);\n    baselineRootTreeComponent = new BaseLineTreeComponent(tree);\n\n    bindAction('#baselineDestroyDom', baselineDestroyDom);\n    bindAction('#baselineCreateDom', baselineCreateDom);\n\n    bindAction('#baselineUpdateDomProfile', profile(baselineCreateDom, noop, 'baseline-update'));\n    bindAction('#baselineCreateDomProfile', profile(baselineCreateDom, baselineDestroyDom, 'baseline-create'));\n  }\n\n  initNg2();\n  initBaseline();\n}\n\nclass TreeNode {\n  value:string;\n  left:TreeNode;\n  right:TreeNode;\n  constructor(value, left, right) {\n    this.value = value;\n    this.left = left;\n    this.right = right;\n  }\n}\n\nfunction buildTree(maxDepth, values, curDepth) {\n  if (maxDepth === curDepth) return new TreeNode('', null, null);\n  return new TreeNode(\n      values[curDepth],\n      buildTree(maxDepth, values, curDepth+1),\n      buildTree(maxDepth, values, curDepth+1));\n}\n\n// http://jsperf.com/nextsibling-vs-childnodes\n\nclass BaseLineTreeComponent {\n  element;\n  value:BaseLineInterpolation;\n  left:BaseLineIf;\n  right:BaseLineIf;\n  constructor(element) {\n    this.element = element;\n    var clone = DOM.clone(BASELINE_TREE_TEMPLATE.content.firstChild);\n    var shadowRoot = this.element.createShadowRoot();\n    DOM.appendChild(shadowRoot, clone);\n\n    var child = clone.firstChild;\n    this.value = new BaseLineInterpolation(child);\n    child = DOM.nextSibling(child);\n    this.left = new BaseLineIf(child);\n    child = DOM.nextSibling(child);\n    this.right = new BaseLineIf(child);\n  }\n  update(value:TreeNode) {\n    this.value.update(value.value);\n    this.left.update(value.left);\n    this.right.update(value.right);\n  }\n}\n\nclass BaseLineInterpolation {\n  value:string;\n  textNode;\n  constructor(textNode) {\n    this.value = null;\n    this.textNode = textNode;\n  }\n  update(value:string) {\n    if (this.value !== value) {\n      this.value = value;\n      DOM.setText(this.textNode, value + ' ');\n    }\n  }\n}\n\nclass BaseLineIf {\n  condition:boolean;\n  component:BaseLineTreeComponent;\n  anchor;\n  constructor(anchor) {\n    this.anchor = anchor;\n    this.condition = false;\n    this.component = null;\n  }\n  update(value:TreeNode) {\n    var newCondition = isPresent(value);\n    if (this.condition !== newCondition) {\n      this.condition = newCondition;\n      if (isPresent(this.component)) {\n        DOM.remove(this.component.element);\n        this.component = null;\n      }\n      if (this.condition) {\n        var element = DOM.firstChild(DOM.clone(BASELINE_IF_TEMPLATE).content);\n        this.anchor.parentNode.insertBefore(element, DOM.nextSibling(this.anchor));\n        this.component = new BaseLineTreeComponent(DOM.firstChild(element));\n      }\n    }\n    if (isPresent(this.component)) {\n      this.component.update(value);\n    }\n  }\n}\n\n@Component({selector: 'app'})\n@View({\n  directives: [TreeComponent],\n  template: `<tree [data]='initData'></tree>`\n})\nclass AppComponent {\n  initData:TreeNode;\n  constructor() {\n    // TODO: We need an initial value as otherwise the getter for data.value will fail\n    // --> this should be already caught in change detection!\n    this.initData = new TreeNode('', null, null);\n  }\n}\n\n@Component({\n  selector: 'tree',\n  properties: {'data': 'data'}\n})\n@View({\n  directives: [TreeComponent, If],\n  template: `<span> {{data.value}} <span template='if data.right != null'><tree [data]='data.right'></tree></span><span template='if data.left != null'><tree [data]='data.left'></tree></span></span>`\n})\nclass TreeComponent {\n  data:TreeNode;\n}\n\n"]}