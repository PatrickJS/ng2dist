{"version":3,"sources":["async_spec.js"],"names":[],"mappings":"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","file":"angular2/test/di/async_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n} from 'angular2/test_lib';\nimport {Injector, Inject, InjectPromise, bind, Key} from 'angular2/di';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\n\nclass UserList {\n}\n\nfunction fetchUsers() {\n  return PromiseWrapper.resolve(new UserList());\n}\n\nclass SynchronousUserList {\n}\n\nclass UserController {\n  list:UserList;\n  constructor(list:UserList) {\n    this.list = list;\n  }\n}\n\nclass AsyncUserController {\n  userList;\n  constructor(@InjectPromise(UserList) userList) {\n    this.userList = userList;\n  }\n}\n\nexport function main() {\n  describe(\"async injection\", function () {\n\n    describe(\"asyncGet\", function () {\n      it('should return a promise', function () {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers)\n        ]);\n        var p = injector.asyncGet(UserList);\n        expect(p).toBePromise();\n      });\n\n      it('should return a promise when the binding is sync', function () {\n        var injector = Injector.resolveAndCreate([\n          SynchronousUserList\n        ]);\n        var p = injector.asyncGet(SynchronousUserList);\n        expect(p).toBePromise();\n      });\n\n      it(\"should return a promise when the binding is sync (from cache)\", function () {\n        var injector = Injector.resolveAndCreate([\n          UserList\n        ]);\n        expect(injector.get(UserList)).toBeAnInstanceOf(UserList);\n        expect(injector.asyncGet(UserList)).toBePromise();\n      });\n\n      it('should return the injector', inject([AsyncTestCompleter], (async) => {\n        var injector = Injector.resolveAndCreate([]);\n        var p = injector.asyncGet(Injector);\n        p.then(function (injector) {\n          expect(injector).toBe(injector);\n          async.done();\n        });\n      }));\n\n      it('should return a promise when instantiating a sync binding ' +\n      'with an async dependency', inject([AsyncTestCompleter], (async) => {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          UserController\n        ]);\n\n        injector.asyncGet(UserController).then(function (userController) {\n          expect(userController).toBeAnInstanceOf(UserController);\n          expect(userController.list).toBeAnInstanceOf(UserList);\n          async.done();\n        });\n      }));\n\n      it(\"should create only one instance (async + async)\", inject([AsyncTestCompleter], (async) => {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers)\n        ]);\n\n        var ul1 = injector.asyncGet(UserList);\n        var ul2 = injector.asyncGet(UserList);\n\n        PromiseWrapper.all([ul1, ul2]).then(function (uls) {\n          expect(uls[0]).toBe(uls[1]);\n          async.done();\n        });\n      }));\n\n      it(\"should create only one instance (sync + async)\", inject([AsyncTestCompleter], (async) => {\n        var injector = Injector.resolveAndCreate([\n          UserList\n        ]);\n\n        var promise = injector.asyncGet(UserList);\n        var ul = injector.get(UserList);\n\n        expect(promise).toBePromise();\n        expect(ul).toBeAnInstanceOf(UserList);\n\n        promise.then(function (ful) {\n          expect(ful).toBe(ul);\n          async.done();\n        });\n      }));\n\n      it('should show the full path when error happens in a constructor', inject([AsyncTestCompleter], (async) => {\n        var injector = Injector.resolveAndCreate([\n          UserController,\n          bind(UserList).toAsyncFactory(function () {\n            throw \"Broken UserList\";\n          })\n        ]);\n\n        var promise = injector.asyncGet(UserController);\n        PromiseWrapper.then(promise, null, function (e) {\n          expect(e.message).toContain(\"Error during instantiation of UserList! (UserController -> UserList)\");\n          async.done();\n        });\n      }));\n    });\n\n    describe(\"get\", function () {\n      it('should throw when instantiating an async binding', function () {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers)\n        ]);\n\n        expect(() => injector.get(UserList))\n          .toThrowError('Cannot instantiate UserList synchronously. It is provided as a promise!');\n      });\n\n      it('should throw when instantiating a sync binding with an async dependency', function () {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          UserController\n        ]);\n\n        expect(() => injector.get(UserController))\n          .toThrowError('Cannot instantiate UserList synchronously. It is provided as a promise! (UserController -> UserList)');\n      });\n\n      it('should not throw when instantiating a sync binding with a resolved async dependency',\n        inject([AsyncTestCompleter], (async) => {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          UserController\n        ]);\n\n        injector.asyncGet(UserList).then((_) => {\n          expect(() => { injector.get(UserController); }).not.toThrow();\n          async.done();\n        });\n      }));\n\n      it('should resolve synchronously when an async dependency requested as a promise', function () {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toAsyncFactory(fetchUsers),\n          AsyncUserController\n        ]);\n        var controller = injector.get(AsyncUserController);\n\n        expect(controller).toBeAnInstanceOf(AsyncUserController);\n        expect(controller.userList).toBePromise();\n      });\n\n      it('should wrap sync dependencies into promises if required', function () {\n        var injector = Injector.resolveAndCreate([\n          bind(UserList).toFactory(() => new UserList()),\n          AsyncUserController\n        ]);\n        var controller = injector.get(AsyncUserController);\n\n        expect(controller).toBeAnInstanceOf(AsyncUserController);\n        expect(controller.userList).toBePromise();\n      });\n    });\n  });\n}\n"]}