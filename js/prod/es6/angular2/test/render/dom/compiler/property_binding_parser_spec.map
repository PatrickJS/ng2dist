{"version":3,"sources":["property_binding_parser_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/compiler/property_binding_parser_spec.es6","sourcesContent":["import {describe, beforeEach, it, expect, iit, ddescribe, el} from 'angular2/test_lib';\nimport {PropertyBindingParser} from 'angular2/src/render/dom/compiler/property_binding_parser';\nimport {CompilePipeline} from 'angular2/src/render/dom/compiler/compile_pipeline';\nimport {MapWrapper, ListWrapper} from 'angular2/src/facade/collection';\nimport {CompileElement} from 'angular2/src/render/dom/compiler/compile_element';\nimport {CompileStep} from 'angular2/src/render/dom/compiler/compile_step'\nimport {CompileControl} from 'angular2/src/render/dom/compiler/compile_control';\nimport {Lexer, Parser} from 'angular2/change_detection';\n\nvar EMPTY_MAP = MapWrapper.create();\n\nexport function main() {\n  describe('PropertyBindingParser', () => {\n    function createPipeline(hasNestedProtoView = false) {\n      return new CompilePipeline([\n        new MockStep((parent, current, control) => {\n          if (hasNestedProtoView) {\n            current.bindElement().bindNestedProtoView(el('<template></template>'));\n          }\n        }),\n        new PropertyBindingParser(new Parser(new Lexer()))]);\n    }\n\n    function process(element, hasNestedProtoView = false) {\n      return ListWrapper.map(\n        createPipeline(hasNestedProtoView).process(element),\n        (compileElement) => compileElement.inheritedElementBinder\n      );\n    }\n\n    it('should detect [] syntax', () => {\n      var results = process(el('<div [a]=\"b\"></div>'));\n      expect(MapWrapper.get(results[0].propertyBindings, 'a').source).toEqual('b');\n    });\n\n    it('should detect [] syntax only if an attribute name starts and ends with []', () => {\n      expect(process(el('<div z[a]=\"b\"></div>'))[0]).toBe(null);\n      expect(process(el('<div [a]v=\"b\"></div>'))[0]).toBe(null);\n    });\n\n    it('should detect bind- syntax', () => {\n      var results = process(el('<div bind-a=\"b\"></div>'));\n      expect(MapWrapper.get(results[0].propertyBindings, 'a').source).toEqual('b');\n    });\n\n    it('should detect bind- syntax only if an attribute name starts with bind', () => {\n      expect(process(el('<div _bind-a=\"b\"></div>'))[0]).toEqual(null);\n    });\n\n    it('should detect interpolation syntax', () => {\n      var results = process(el('<div a=\"{{b}}\"></div>'));\n      expect(MapWrapper.get(results[0].propertyBindings, 'a').source).toEqual('{{b}}');\n    });\n\n    it('should detect var- syntax', () => {\n      var results = process(el('<template var-a=\"b\"></template>'));\n      expect(MapWrapper.get(results[0].variableBindings, 'b')).toEqual('a');\n    });\n\n    it('should store variable binding for a template element on the nestedProtoView', () => {\n      var results = process(el('<template var-george=\"washington\"></p>'), true);\n      expect(results[0].variableBindings).toEqual(EMPTY_MAP);\n      expect(MapWrapper.get(results[0].nestedProtoView.variableBindings, 'washington')).toEqual('george');\n    });\n\n    it('should store variable binding for a non-template element using shorthand syntax on the nestedProtoView', () => {\n      var results = process(el('<template #george=\"washington\"></template>'), true);\n      expect(results[0].variableBindings).toEqual(EMPTY_MAP);\n      expect(MapWrapper.get(results[0].nestedProtoView.variableBindings, 'washington')).toEqual('george');\n    });\n\n    it('should store variable binding for a non-template element', () => {\n      var results = process(el('<p var-george=\"washington\"></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, 'washington')).toEqual('george');\n    });\n\n    it('should store variable binding for a non-template element using shorthand syntax', () => {\n      var results = process(el('<p #george=\"washington\"></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, 'washington')).toEqual('george');\n    });\n\n    it('should store a variable binding with an implicit value', () => {\n      var results = process(el('<p var-george></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, '\\$implicit')).toEqual('george');\n    });\n\n    it('should store a variable binding with an implicit value using shorthand syntax', () => {\n      var results = process(el('<p #george></p>'));\n      expect(MapWrapper.get(results[0].variableBindings, '\\$implicit')).toEqual('george');\n    });\n\n    it('should detect variable bindings only if an attribute name starts with #', () => {\n      var results = process(el('<p b#george></p>'));\n      expect(results[0]).toEqual(null);\n    });\n\n    it('should detect () syntax', () => {\n      var results = process(el('<div (click)=\"b()\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('b()');\n      expect(eventBinding.fullName).toEqual('click');\n      // \"(click[])\" is not an expected syntax and is only used to validate the regexp\n      results = process(el('<div (click[])=\"b()\"></div>'));\n      eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('b()');\n      expect(eventBinding.fullName).toEqual('click[]');\n    });\n\n    it('should detect () syntax only if an attribute name starts and ends with ()', () => {\n      expect(process(el('<div z(a)=\"b()\"></div>'))[0]).toEqual(null);\n      expect(process(el('<div (a)v=\"b()\"></div>'))[0]).toEqual(null);\n    });\n\n    it('should parse event handlers using () syntax as actions', () => {\n      var results = process(el('<div (click)=\"foo=bar\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('foo=bar');\n      expect(eventBinding.fullName).toEqual('click');\n    });\n\n    it('should detect on- syntax', () => {\n      var results = process(el('<div on-click=\"b()\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('b()');\n      expect(eventBinding.fullName).toEqual('click');\n    });\n\n    it('should parse event handlers using on- syntax as actions', () => {\n      var results = process(el('<div on-click=\"foo=bar\"></div>'));\n      var eventBinding = results[0].eventBindings[0];\n      expect(eventBinding.source.source).toEqual('foo=bar');\n      expect(eventBinding.fullName).toEqual('click');\n    });\n\n    it('should store bound properties as temporal attributes', () => {\n      var results = createPipeline().process(el('<div bind-a=\"b\" [c]=\"d\"></div>'));\n      expect(MapWrapper.get(results[0].attrs(), 'a')).toEqual('b');\n      expect(MapWrapper.get(results[0].attrs(), 'c')).toEqual('d');\n    });\n\n    it('should store variables as temporal attributes', () => {\n      var results = createPipeline().process(el('<div var-a=\"b\" #c=\"d\"></div>'));\n      expect(MapWrapper.get(results[0].attrs(), 'a')).toEqual('b');\n      expect(MapWrapper.get(results[0].attrs(), 'c')).toEqual('d');\n    });\n\n    it('should store working property setters', () => {\n      var element = el('<input bind-value=\"1\">');\n      var results = process(element);\n      var setter = MapWrapper.get(results[0].propertySetters, 'value');\n      setter(element, 'abc');\n      expect(element.value).toEqual('abc');\n    });\n\n    it('should store property setters as camel case', () => {\n      var element = el('<div bind-some-prop=\"1\">');\n      var results = process(element);\n      expect(MapWrapper.get(results[0].propertySetters, 'someProp')).toBeTruthy();\n    });\n  });\n}\n\nclass MockStep extends CompileStep {\n  processClosure:Function;\n  constructor(process) {\n    super();\n    this.processClosure = process;\n  }\n  process(parent:CompileElement, current:CompileElement, control:CompileControl) {\n    this.processClosure(parent, current, control);\n  }\n}\n"]}