{"version":3,"sources":["emulated_scoped_shadow_dom_strategy_spec.js"],"names":[],"mappings":"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","file":"angular2/test/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy_spec.es6","sourcesContent":["import {\n  AsyncTestCompleter,\n  beforeEach,\n  ddescribe,\n  describe,\n  el,\n  expect,\n  iit,\n  inject,\n  it,\n  xit,\n  SpyObject,\n} from 'angular2/test_lib';\n\nimport {isPresent, isBlank} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Map, MapWrapper} from 'angular2/src/facade/collection';\nimport {PromiseWrapper, Promise} from 'angular2/src/facade/async';\n\nimport {XHR} from 'angular2/src/services/xhr';\n\nimport {\n  EmulatedScopedShadowDomStrategy,\n} from 'angular2/src/render/dom/shadow_dom/emulated_scoped_shadow_dom_strategy';\nimport {\n  resetShadowDomCache,\n} from 'angular2/src/render/dom/shadow_dom/util';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {RenderView} from 'angular2/src/render/dom/view/view';\n\nexport function main() {\n  describe('EmulatedScoped', () => {\n    var xhr, styleHost, strategy;\n\n    beforeEach(() => {\n      var urlResolver = new UrlResolver();\n      var styleUrlResolver = new StyleUrlResolver(urlResolver);\n      xhr = new FakeXHR();\n      var styleInliner = new StyleInliner(xhr, styleUrlResolver, urlResolver);\n      styleHost = el('<div></div>');\n      strategy = new EmulatedScopedShadowDomStrategy(styleInliner, styleUrlResolver, styleHost);\n      resetShadowDomCache();\n    });\n\n    it('should attach the view nodes as child of the host element', () => {\n      var host = el('<div><span>original content</span></div>');\n      var nodes = el('<div>view</div>');\n      var view = new RenderView(null, [nodes], [], [], [], [], null);\n\n      strategy.attachTemplate(host, view);\n      var firstChild = DOM.firstChild(host);\n      expect(DOM.tagName(firstChild).toLowerCase()).toEqual('div');\n      expect(firstChild).toHaveText('view');\n      expect(host).toHaveText('view');\n    });\n\n    it('should rewrite style urls', () => {\n      var styleElement = el('<style>.foo {background-image: url(\"img.jpg\");}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\" +\n        \"background-image: url(http://base/img.jpg);\\n\" +\n        \"}\");\n    });\n\n    it('should scope styles', () => {\n      var styleElement = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(styleElement).toHaveText(\".foo[_ngcontent-0] {\\n\\n}\\n\\n[_nghost-0] {\\n\\n}\");\n    });\n\n    it('should inline @import rules', inject([AsyncTestCompleter], (async) => {\n      xhr.reply('http://base/one.css', '.one {}');\n\n      var styleElement = el('<style>@import \"one.css\";</style>');\n      var stylePromise = strategy.processStyleElement('someComponent', 'http://base', styleElement);\n      expect(stylePromise).toBePromise();\n      expect(styleElement).toHaveText('');\n\n      stylePromise.then((_) => {\n        expect(styleElement).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n        async.done();\n      });\n    }));\n\n    it('should return the same style given the same component', () => {\n      var styleElement = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n\n      var styleElement2 = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent', 'http://base', styleElement2);\n\n      expect(DOM.getText(styleElement)).toEqual(DOM.getText(styleElement2));\n    });\n\n    it('should return different styles given different components', () => {\n      var styleElement = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent1', 'http://base', styleElement);\n\n      var styleElement2 = el('<style>.foo {} :host {}</style>');\n      strategy.processStyleElement('someComponent2', 'http://base', styleElement2);\n\n      expect(DOM.getText(styleElement)).not.toEqual(DOM.getText(styleElement2));\n    });\n\n    it('should move the style element to the style host', () => {\n      var compileElement = el('<div><style>.one {}</style></div>');\n      var styleElement = DOM.firstChild(compileElement);\n      strategy.processStyleElement('someComponent', 'http://base', styleElement);\n\n      expect(compileElement).toHaveText('');\n      expect(styleHost).toHaveText('.one[_ngcontent-0] {\\n\\n}');\n    });\n\n    it('should add an attribute to component elements', () => {\n      var element = el('<div></div>');\n      strategy.processElement(null, 'elComponent', element);\n      expect(DOM.getAttribute(element, '_nghost-0')).toEqual('');\n    });\n\n    it('should add an attribute to the content elements', () => {\n      var element = el('<div></div>');\n      strategy.processElement('hostComponent', null, element);\n      expect(DOM.getAttribute(element, '_ngcontent-0')).toEqual('');\n    });\n\n  });\n}\n\nclass FakeXHR extends XHR {\n  _responses: Map;\n\n  constructor() {\n    super();\n    this._responses = MapWrapper.create();\n  }\n\n  get(url: string): Promise<string> {\n    var response = MapWrapper.get(this._responses, url);\n    if (isBlank(response)) {\n      return PromiseWrapper.reject('xhr error');\n    }\n\n    return PromiseWrapper.resolve(response);\n  }\n\n  reply(url: string, response: string) {\n    MapWrapper.set(this._responses, url, response);\n  }\n}\n"]}