{"version":3,"sources":["test_lib.es6"],"names":[],"mappings":"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","file":"angular2/src/test_lib/test_lib.es6","sourcesContent":["import {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {bind} from 'angular2/di';\n\nimport {createTestInjector, FunctionWithParamTokens, inject} from './test_injector';\n\nexport {inject} from './test_injector';\n\nexport {proxy} from 'rtts_assert/rtts_assert';\n\nvar _global = typeof window === 'undefined' ? global : window;\n\nexport var afterEach = _global.afterEach;\nexport var expect = _global.expect;\n\nexport var IS_DARTIUM = false;\n\nexport class AsyncTestCompleter {\n  _done: Function;\n\n  constructor(done: Function) {\n    this._done = done;\n  }\n\n  done() {\n    this._done();\n  }\n}\n\nvar jsmBeforeEach = _global.beforeEach;\nvar jsmDescribe = _global.describe;\nvar jsmDDescribe = _global.ddescribe;\nvar jsmXDescribe = _global.xdescribe;\nvar jsmIt = _global.it;\nvar jsmIIt = _global.iit;\nvar jsmXIt = _global.xit;\n\nvar runnerStack = [];\nvar inIt = false;\n\nvar testBindings;\n\nclass BeforeEachRunner {\n  constructor(parent: BeforeEachRunner) {\n    this._fns = [];\n    this._parent = parent;\n  }\n\n  beforeEach(fn: FunctionWithParamTokens) {\n    this._fns.push(fn);\n  }\n\n  run(injector) {\n    if (this._parent) this._parent.run();\n    this._fns.forEach((fn) => fn.execute(injector));\n  }\n}\n\n// Reset the test bindings before each test\njsmBeforeEach(() => { testBindings = []; });\n\nfunction _describe(jsmFn, ...args) {\n  var parentRunner = runnerStack.length === 0 ? null : runnerStack[runnerStack.length - 1];\n  var runner = new BeforeEachRunner(parentRunner);\n  runnerStack.push(runner);\n  var suite = jsmFn(...args);\n  runnerStack.pop();\n  return suite;\n}\n\nexport function describe(...args) {\n  return _describe(jsmDescribe, ...args);\n}\n\nexport function ddescribe(...args) {\n  return _describe(jsmDDescribe, ...args);\n}\n\nexport function xdescribe(...args) {\n  return _describe(jsmXDescribe, ...args);\n}\n\nexport function beforeEach(fn) {\n  if (runnerStack.length > 0) {\n    // Inside a describe block, beforeEach() uses a BeforeEachRunner\n    var runner = runnerStack[runnerStack.length - 1];\n    if (!(fn instanceof FunctionWithParamTokens)) {\n      fn = inject([], fn);\n    }\n    runner.beforeEach(fn);\n  } else {\n    // Top level beforeEach() are delegated to jasmine\n    jsmBeforeEach(fn);\n  }\n}\n\n/**\n * Allows overriding default bindings defined in test_injector.js.\n *\n * The given function must return a list of DI bindings.\n *\n * Example:\n *\n *   beforeEachBindings(() => [\n *     bind(Compiler).toClass(MockCompiler),\n *     bind(SomeToken).toValue(myValue),\n *   ]);\n */\nexport function beforeEachBindings(fn) {\n  jsmBeforeEach(() => {\n    var bindings = fn();\n    if (!bindings) return;\n    testBindings = [...testBindings, ...bindings];\n  });\n}\n\nfunction _it(jsmFn, name, fn) {\n  var runner = runnerStack[runnerStack.length - 1];\n\n  jsmFn(name, function(done) {\n    var async = false;\n\n    var completerBinding = bind(AsyncTestCompleter).toFactory(() => {\n      // Mark the test as async when an AsyncTestCompleter is injected in an it()\n      if (!inIt) throw new Error('AsyncTestCompleter can only be injected in an \"it()\"');\n      async = true;\n      return new AsyncTestCompleter(done);\n    });\n\n    var injector = createTestInjector([...testBindings, completerBinding]);\n\n    runner.run(injector);\n\n    if (!(fn instanceof FunctionWithParamTokens)) {\n      fn = inject([], fn);\n    }\n    inIt = true;\n    fn.execute(injector);\n    inIt = false;\n\n    if (!async) done();\n  });\n}\n\nexport function it(name, fn) {\n  return _it(jsmIt, name, fn);\n}\n\nexport function xit(name, fn) {\n  return _it(jsmXIt, name, fn);\n}\n\nexport function iit(name, fn) {\n  return _it(jsmIIt, name, fn);\n}\n\n// To make testing consistent between dart and js\n_global.print = function(msg) {\n  if (_global.dump) {\n    _global.dump(msg);\n  } else {\n    _global.console.log(msg);\n  }\n};\n\n// Some Map polyfills don't polyfill Map.toString correctly, which\n// gives us bad error messages in tests.\n// The only way to do this in Jasmine is to monkey patch a method\n// to the object :-(\n_global.Map.prototype.jasmineToString = function() {\n  var m = this;\n  if (!m) {\n    return ''+m;\n  }\n  var res = [];\n  m.forEach( (v,k) => {\n    res.push(`${k}:${v}`);\n  });\n  return `{ ${res.join(',')} }`;\n}\n\n_global.beforeEach(function() {\n  jasmine.addMatchers({\n    // Custom handler for Map as Jasmine does not support it yet\n    toEqual: function(util, customEqualityTesters) {\n      return {\n        compare: function(actual, expected) {\n          return {\n            pass: util.equals(actual, expected, [compareMap])\n          };\n        }\n      };\n\n      function compareMap(actual, expected) {\n        if (actual instanceof Map) {\n          var pass = actual.size === expected.size;\n          if (pass) {\n            actual.forEach( (v,k) => {\n              pass = pass && util.equals(v, expected.get(k));\n            });\n          }\n          return pass;\n        } else {\n          return undefined;\n        }\n      }\n    },\n\n    toBePromise: function() {\n      return {\n        compare: function (actual, expectedClass) {\n          var pass = typeof actual === 'object' && typeof actual.then === 'function';\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be a promise';\n            }\n          };\n        }\n      };\n    },\n\n    toBeAnInstanceOf: function() {\n      return {\n        compare: function(actual, expectedClass) {\n          var pass = typeof actual === 'object' && actual instanceof expectedClass;\n          return {\n            pass: pass,\n            get message() {\n              return 'Expected ' + actual + ' to be an instance of ' + expectedClass;\n            }\n          };\n        }\n      };\n    },\n\n    toHaveText: function() {\n      return {\n        compare: function(actual, expectedText) {\n          var actualText = elementText(actual);\n          return {\n            pass: actualText == expectedText,\n            get message() {\n              return 'Expected ' + actualText + ' to be equal to ' + expectedText;\n            }\n          };\n        }\n      };\n    },\n\n    toImplement: function() {\n      return {\n        compare: function(actualObject, expectedInterface) {\n          var objProps = Object.keys(actualObject.constructor.prototype);\n          var intProps = Object.keys(expectedInterface.prototype);\n\n          var missedMethods = [];\n          intProps.forEach((k) => {\n            if (!actualObject.constructor.prototype[k]) missedMethods.push(k);\n          });\n\n          return {\n            pass: missedMethods.length == 0,\n            get message() {\n              return 'Expected ' + actualObject + ' to have the following methods: ' + missedMethods.join(\", \");\n            }\n          };\n        }\n      };\n    }\n  });\n});\n\nexport class SpyObject {\n  spy(name){\n    if (! this[name]) {\n      this[name] = this._createGuinnessCompatibleSpy();\n    }\n    return this[name];\n  }\n\n  rttsAssert(value) {\n    return true;\n  }\n\n  _createGuinnessCompatibleSpy(){\n    var newSpy = jasmine.createSpy();\n    newSpy.andCallFake = newSpy.and.callFake;\n    return newSpy;\n  }\n}\n\nfunction elementText(n) {\n  var hasNodes = (n) => {var children = DOM.childNodes(n); return children && children.length > 0;}\n\n  if (n instanceof Array) {\n    return n.map((nn) => elementText(nn)).join(\"\");\n  }\n\n  if (DOM.isCommentNode(n)) {\n    return '';\n  }\n\n  if (DOM.isElementNode(n) && DOM.tagName(n) == 'CONTENT') {\n    return elementText(Array.prototype.slice.apply(DOM.getDistributedNodes(n)));\n  }\n\n  if (DOM.hasShadowRoot(n)) {\n    return elementText(DOM.childNodesAsList(DOM.getShadowRoot(n)));\n  }\n\n  if (hasNodes(n)) {\n    return elementText(DOM.childNodesAsList(n));\n  }\n\n  return DOM.getText(n);\n}\n"]}