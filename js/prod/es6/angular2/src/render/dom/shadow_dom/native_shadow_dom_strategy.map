{"version":3,"sources":["native_shadow_dom_strategy.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,OAAM,CAAC,KAAO,4BAA0B,CAAC;AAEjD,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,UAAY,WAAS,CAAA,IAAO,eAAa,CAAC;AAE1C,KAAO,EAAC,gBAAe,CAAC,KAAO,uBAAqB,CAAC;AACrD,KAAO,EAAC,iBAAgB,CAAC,KAAO,wBAAsB,CAAC;AACvD,KAAO,EAAC,uBAAsB,CAAC,KAAO,SAAO,CAAC;AAQ9C,KAAO,MAAM,wBAAsB,QAAU,kBAAgB;AAG3D,YAAU,CAAE,gBAAe,AAAkB,CAAG;AAC9C,QAAI,AAAC,EAAC,CAAC;AACP,OAAG,iBAAiB,EAAI,iBAAe,CAAC;EAC1C;AAAA,AAEA,eAAa,CAAE,EAAC,CAAG,CAAA,IAAG,AAAsB,CAAE;AAC5C,0BAAsB,AAAC,CAAC,GAAE,iBAAiB,AAAC,CAAC,EAAC,CAAC,CAAG,KAAG,CAAC,CAAC;EACzD;AAAA,AAEA,oBAAkB,CAAE,eAAc,AAAO,CAAG,CAAA,WAAU,AAAO,CAAG,CAAA,OAAM,CAAW;AAC/E,AAAI,MAAA,CAAA,OAAM,EAAI,CAAA,GAAE,QAAQ,AAAC,CAAC,OAAM,CAAC,CAAC;AAClC,UAAM,EAAI,CAAA,IAAG,iBAAiB,YAAY,AAAC,CAAC,OAAM,CAAG,YAAU,CAAC,CAAC;AACjE,MAAE,QAAQ,AAAC,CAAC,OAAM,CAAG,QAAM,CAAC,CAAC;AAC7B,SAAO,KAAG,CAAC;EACb;AAAA,AACF;AAAA,AAlCA,KAAK,eAAe,AAAC,uCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAkBM,gBAAe,GAlBE;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,gBAuBA,UAAS,WAAW,GAvBG;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,qEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,WAArB,MAAK,KAAgB,cAC4B;EAAC,CAAC,CAAC,CAAC;AAkCrD","file":"angular2/src/render/dom/shadow_dom/native_shadow_dom_strategy.es6","sourcesContent":["import {Promise} from 'angular2/src/facade/async';\n\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport * as viewModule from '../view/view';\n\nimport {StyleUrlResolver} from './style_url_resolver';\nimport {ShadowDomStrategy} from './shadow_dom_strategy';\nimport {moveViewNodesIntoParent} from './util';\n\n/**\n * This strategies uses the native Shadow DOM support.\n *\n * The templates for the component are inserted in a Shadow Root created on the component element.\n * Hence they are strictly isolated.\n */\nexport class NativeShadowDomStrategy extends ShadowDomStrategy {\n  styleUrlResolver: StyleUrlResolver;\n\n  constructor(styleUrlResolver: StyleUrlResolver) {\n    super();\n    this.styleUrlResolver = styleUrlResolver;\n  }\n\n  attachTemplate(el, view:viewModule.RenderView){\n    moveViewNodesIntoParent(DOM.createShadowRoot(el), view);\n  }\n\n  processStyleElement(hostComponentId:string, templateUrl:string, styleEl):Promise {\n    var cssText = DOM.getText(styleEl);\n    cssText = this.styleUrlResolver.resolveUrls(cssText, templateUrl);\n    DOM.setText(styleEl, cssText);\n    return null;\n  }\n}\n"]}