{"version":3,"sources":["proto_view.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClD,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,KAAO,EAAC,IAAG;AAAG,IAAE;AAAG,YAAU;AAAG,WAAS,CAAC,KAAO,iCAA+B,CAAC;AAEjF,KAAO,EAAC,aAAY,CAAC,KAAO,mBAAiB,CAAC;AAC9C,KAAO,EAAC,gBAAe,CAAC,KAAO,UAAQ,CAAC;AAExC,KAAO,MAAM,gBAAc;AAOzB,YAAU,CAAE,CACV,cAAa;AACb,UAAM;AACN,aAAS,CACX,CAAG;AACD,OAAG,QAAQ,EAAI,QAAM,CAAC;AACtB,OAAG,eAAe,EAAI,eAAa,CAAC;AACpC,OAAG,kBAAkB,EAAI,CAAA,GAAE,kBAAkB,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAC;AAC5D,OAAG,WAAW,EAAI,WAAS,CAAC;AAC5B,OAAG,kBAAkB,EAAI,CAAA,CAAC,SAAQ,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAA,EAAK,CAAA,GAAE,SAAS,AAAC,CAAC,IAAG,QAAQ,CAAG,iBAAe,CAAC,CAAC,EAAI,EAAA,EAAI,EAAA,CAAC;EAC5G;AAAA,AAEA,8BAA4B,CAAE,mBAAkB,AAAsB,CAAG;AACvE,AAAI,MAAA,CAAA,uBAAsB,EAAI,EAAA,CAAC;AAC/B,QAAS,GAAA,CAAA,CAAA,EAAE,EAAA,CAAG,CAAA,CAAA,EAAE,CAAA,IAAG,eAAe,OAAO,CAAG,CAAA,CAAA,EAAE,CAAG;AAC/C,AAAI,QAAA,CAAA,EAAC,EAAI,CAAA,IAAG,eAAe,CAAE,CAAA,CAAC,CAAC;AAC/B,SAAI,SAAQ,AAAC,CAAC,EAAC,YAAY,CAAC,CAAG;AAC7B,SAAC,gBAAgB,EAAI,CAAA,mBAAkB,CAAE,uBAAsB,CAAC,CAAC;AACjE,8BAAsB,EAAE,CAAC;MAC3B;AAAA,IACF;AAAA,EACF;AAAA,AACF;AAAA,AArCA,KAAK,eAAe,AAAC,uEACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,YAAuB,AA2BwB,CAAA,IAAG,CAAE,gBAAc,CAAC,AA3BzB,GACE;EAAC,CAAC,CAAC,CAAC;AAqCrD","file":"angular2/src/render/dom/view/proto_view.es6","sourcesContent":["import {isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {List, Map, ListWrapper, MapWrapper} from 'angular2/src/facade/collection';\n\nimport {ElementBinder} from './element_binder';\nimport {NG_BINDING_CLASS} from '../util';\n\nexport class RenderProtoView {\n  element;\n  elementBinders:List<ElementBinder>;\n  isTemplateElement:boolean;\n  isRootView:boolean;\n  rootBindingOffset:int;\n\n  constructor({\n    elementBinders,\n    element,\n    isRootView\n  }) {\n    this.element = element;\n    this.elementBinders = elementBinders;\n    this.isTemplateElement = DOM.isTemplateElement(this.element);\n    this.isRootView = isRootView;\n    this.rootBindingOffset = (isPresent(this.element) && DOM.hasClass(this.element, NG_BINDING_CLASS)) ? 1 : 0;\n  }\n\n  mergeChildComponentProtoViews(componentProtoViews:List<RenderProtoView>) {\n    var componentProtoViewIndex = 0;\n    for (var i=0; i<this.elementBinders.length; i++) {\n      var eb = this.elementBinders[i];\n      if (isPresent(eb.componentId)) {\n        eb.nestedProtoView = componentProtoViews[componentProtoViewIndex];\n        componentProtoViewIndex++;\n      }\n    }\n  }\n}\n"]}