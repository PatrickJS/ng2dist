{"version":3,"sources":["async.es6"],"names":[],"mappings":"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","file":"angular2/src/facade/async.es6","sourcesContent":["import {int, global, isPresent} from 'angular2/src/facade/lang';\nimport {List} from 'angular2/src/facade/collection';\nimport Rx from 'rx/dist/rx.all';\n\nexport var Promise = global.Promise;\n\nexport class PromiseWrapper {\n  static resolve(obj):Promise {\n    return Promise.resolve(obj);\n  }\n\n  static reject(obj):Promise {\n    return Promise.reject(obj);\n  }\n\n  // Note: We can't rename this method into `catch`, as this is not a valid\n  // method name in Dart.\n  static catchError(promise:Promise, onError:Function):Promise {\n    return promise.catch(onError);\n  }\n\n  static all(promises:List):Promise {\n    if (promises.length == 0) return Promise.resolve([]);\n    return Promise.all(promises);\n  }\n\n  static then(promise:Promise, success:Function, rejection:Function):Promise {\n    return promise.then(success, rejection);\n  }\n\n  static completer() {\n    var resolve;\n    var reject;\n\n    var p = new Promise(function(res, rej) {\n      resolve = res;\n      reject = rej;\n    });\n\n    return {\n      promise: p,\n      resolve: resolve,\n      reject: reject\n    };\n  }\n\n  static setTimeout(fn:Function, millis:int) {\n    global.setTimeout(fn, millis);\n  }\n\n  static isPromise(maybePromise):boolean {\n    return maybePromise instanceof Promise;\n  }\n}\n\n\n/**\n * Use Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n */\nexport var Observable = Rx.Observable;\nexport var ObservableController = Rx.Subject;\n\nexport class ObservableWrapper {\n  static createController():Rx.Subject {\n    return new Rx.Subject();\n  }\n\n  static createObservable(subject:Rx.Subject):Observable {\n    return subject;\n  }\n\n  static subscribe(observable:Observable, generatorOrOnNext, onThrow = null, onReturn = null) {\n    if (isPresent(generatorOrOnNext.next)) {\n      return observable.observeOn(Rx.Scheduler.timeout).subscribe(\n        (value) => generatorOrOnNext.next(value),\n        (error) => generatorOrOnNext.throw(error),\n        () => generatorOrOnNext.return()\n      );\n    } else {\n      return observable.observeOn(Rx.Scheduler.timeout).subscribe(generatorOrOnNext, onThrow, onReturn);\n    }\n  }\n\n  static callNext(subject:Rx.Subject, value:any) {\n    subject.onNext(value);\n  }\n\n  static callThrow(subject:Rx.Subject, error:any) {\n    subject.onError(error);\n  }\n\n  static callReturn(subject:Rx.Subject) {\n    subject.onCompleted();\n  }\n}"]}