{"version":3,"sources":["dynamic_change_detector.js"],"names":[],"mappings":"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","file":"angular2/src/change_detection/dynamic_change_detector.es6","sourcesContent":["import {isPresent, isBlank, BaseException, FunctionWrapper} from 'angular2/src/facade/lang';\nimport {List, ListWrapper, MapWrapper, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {AbstractChangeDetector} from './abstract_change_detector';\nimport {BindingRecord} from './binding_record';\nimport {DirectiveRecord} from './directive_record';\nimport {PipeRegistry} from './pipes/pipe_registry';\nimport {ChangeDetectionUtil, uninitialized} from './change_detection_util';\n\n\nimport {\n  ProtoRecord,\n  RECORD_TYPE_SELF,\n  RECORD_TYPE_PROPERTY,\n  RECORD_TYPE_LOCAL,\n  RECORD_TYPE_INVOKE_METHOD,\n  RECORD_TYPE_CONST,\n  RECORD_TYPE_INVOKE_CLOSURE,\n  RECORD_TYPE_PRIMITIVE_OP,\n  RECORD_TYPE_KEYED_ACCESS,\n  RECORD_TYPE_PIPE,\n  RECORD_TYPE_BINDING_PIPE,\n  RECORD_TYPE_INTERPOLATE\n  } from './proto_record';\n\nimport {ExpressionChangedAfterItHasBeenChecked, ChangeDetectionError} from './exceptions';\n\nexport class DynamicChangeDetector extends AbstractChangeDetector {\n  dispatcher:any;\n  pipeRegistry;\n\n  locals:any;\n  values:List;\n  changes:List;\n  pipes:List;\n  prevContexts:List;\n\n  protos:List<ProtoRecord>;\n  directives:any;\n  directiveRecords:List;\n  changeControlStrategy:string;\n\n  constructor(changeControlStrategy:string, dispatcher:any, pipeRegistry:PipeRegistry,\n              protoRecords:List<ProtoRecord>, directiveRecords:List) {\n    super();\n    this.dispatcher = dispatcher;\n    this.pipeRegistry = pipeRegistry;\n\n    this.values = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.pipes = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.prevContexts = ListWrapper.createFixedSize(protoRecords.length + 1);\n    this.changes = ListWrapper.createFixedSize(protoRecords.length + 1);\n\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    this.locals = null;\n    this.directives = null;\n\n    this.protos = protoRecords;\n    this.directiveRecords = directiveRecords;\n    this.changeControlStrategy = changeControlStrategy;\n  }\n\n  hydrate(context:any, locals:any, directives:any) {\n    this.mode = ChangeDetectionUtil.changeDetectionMode(this.changeControlStrategy);\n    this.values[0] = context;\n    this.locals = locals;\n    this.directives = directives;\n  }\n\n  dehydrate() {\n    this._destroyPipes();\n    ListWrapper.fill(this.values, uninitialized);\n    ListWrapper.fill(this.changes, false);\n    ListWrapper.fill(this.pipes, null);\n    ListWrapper.fill(this.prevContexts, uninitialized);\n    this.locals = null;\n  }\n\n  _destroyPipes() {\n    for(var i = 0; i < this.pipes.length; ++i) {\n      if (isPresent(this.pipes[i])) {\n        this.pipes[i].onDestroy();\n      }\n    }\n  }\n\n  hydrated():boolean {\n    return this.values[0] !== uninitialized;\n  }\n\n  detectChangesInRecords(throwOnChange:boolean) {\n    var protos:List<ProtoRecord> = this.protos;\n\n    var changes = null;\n    for (var i = 0; i < protos.length; ++i) {\n      var proto:ProtoRecord = protos[i];\n\n      var change = this._check(proto);\n      if (isPresent(change)) {\n        if (throwOnChange) ChangeDetectionUtil.throwOnChange(proto, change);\n        this._updateDirectiveOrElement(change, proto.bindingRecord);\n        changes = this._addChange(proto.bindingRecord, change, changes);\n      }\n\n      if (proto.lastInDirective && isPresent(changes)) {\n        this._directive(proto.bindingRecord.directiveRecord).onChange(changes);\n        changes = null;\n      }\n    }\n  }\n\n  callOnAllChangesDone() {\n    var dirs = this.directiveRecords;\n    for (var i = dirs.length - 1; i >= 0; --i) {\n      var dir = dirs[i];\n      if (dir.callOnAllChangesDone) {\n        this._directive(dir).onAllChangesDone();\n      }\n    }\n  }\n\n  _updateDirectiveOrElement(change, bindingRecord) {\n    if (isBlank(bindingRecord.directiveRecord)) {\n      this.dispatcher.notifyOnBinding(bindingRecord, change.currentValue);\n    } else {\n      bindingRecord.setter(this._directive(bindingRecord.directiveRecord), change.currentValue);\n    }\n  }\n\n  _addChange(bindingRecord:BindingRecord, change, changes) {\n    if (bindingRecord.callOnChange()) {\n      return ChangeDetectionUtil.addChange(changes, bindingRecord.propertyName, change);\n    } else {\n      return changes;\n    }\n  }\n\n  _directive(directive:DirectiveRecord) {\n    return this.directives.directive(directive);\n  }\n\n  _check(proto:ProtoRecord) {\n    try {\n      if (proto.mode === RECORD_TYPE_PIPE || proto.mode === RECORD_TYPE_BINDING_PIPE) {\n        return this._pipeCheck(proto);\n      } else {\n        return this._referenceCheck(proto);\n      }\n    } catch (e) {\n      throw new ChangeDetectionError(proto, e);\n    }\n  }\n\n  _referenceCheck(proto:ProtoRecord) {\n    if (this._pureFuncAndArgsDidNotChange(proto)) {\n      this._setChanged(proto, false);\n      return null;\n    }\n\n    var prevValue = this._readSelf(proto);\n    var currValue = this._calculateCurrValue(proto);\n\n    if (!isSame(prevValue, currValue)) {\n      this._writeSelf(proto, currValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, currValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _calculateCurrValue(proto:ProtoRecord) {\n    switch (proto.mode) {\n      case RECORD_TYPE_SELF:\n        return this._readContext(proto);\n\n      case RECORD_TYPE_CONST:\n        return proto.funcOrValue;\n\n      case RECORD_TYPE_PROPERTY:\n        var context = this._readContext(proto);\n        return proto.funcOrValue(context);\n\n      case RECORD_TYPE_LOCAL:\n        return this.locals.get(proto.name);\n\n      case RECORD_TYPE_INVOKE_METHOD:\n        var context = this._readContext(proto);\n        var args = this._readArgs(proto);\n        return proto.funcOrValue(context, args);\n\n      case RECORD_TYPE_KEYED_ACCESS:\n        var arg = this._readArgs(proto)[0];\n        return this._readContext(proto)[arg];\n\n      case RECORD_TYPE_INVOKE_CLOSURE:\n        return FunctionWrapper.apply(this._readContext(proto), this._readArgs(proto));\n\n      case RECORD_TYPE_INTERPOLATE:\n      case RECORD_TYPE_PRIMITIVE_OP:\n        return FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto));\n\n      default:\n        throw new BaseException(`Unknown operation ${proto.mode}`);\n    }\n  }\n\n  _pipeCheck(proto:ProtoRecord) {\n    var context = this._readContext(proto);\n    var pipe = this._pipeFor(proto, context);\n\n    var newValue = pipe.transform(context);\n    if (! ChangeDetectionUtil.noChangeMarker(newValue)) {\n      var prevValue = this._readSelf(proto);\n      this._writeSelf(proto, newValue);\n      this._setChanged(proto, true);\n\n      if (proto.lastInBinding) {\n        return ChangeDetectionUtil.simpleChange(prevValue, newValue);\n      } else {\n        return null;\n      }\n    } else {\n      this._setChanged(proto, false);\n      return null;\n    }\n  }\n\n  _pipeFor(proto:ProtoRecord, context) {\n    var storedPipe = this._readPipe(proto);\n    if (isPresent(storedPipe) && storedPipe.supports(context)) {\n      return storedPipe;\n    }\n    if (isPresent(storedPipe)) {\n      storedPipe.onDestroy();\n    }\n\n    // Currently, only pipes that used in bindings in the template get\n    // the bindingPropagationConfig of the encompassing component.\n    //\n    // In the future, pipes declared in the bind configuration should\n    // be able to access the bindingPropagationConfig of that component.\n    var bpc = proto.mode === RECORD_TYPE_BINDING_PIPE ? this.bindingPropagationConfig : null;\n    var pipe = this.pipeRegistry.get(proto.name, context, bpc);\n    this._writePipe(proto, pipe);\n    return pipe;\n  }\n\n  _readContext(proto:ProtoRecord) {\n    return this.values[proto.contextIndex];\n  }\n\n  _readSelf(proto:ProtoRecord) {\n    return this.values[proto.selfIndex];\n  }\n\n  _writeSelf(proto:ProtoRecord, value) {\n    this.values[proto.selfIndex] = value;\n  }\n\n  _readPipe(proto:ProtoRecord) {\n    return this.pipes[proto.selfIndex];\n  }\n\n  _writePipe(proto:ProtoRecord, value) {\n    this.pipes[proto.selfIndex] = value;\n  }\n\n  _setChanged(proto:ProtoRecord, value:boolean) {\n    this.changes[proto.selfIndex] = value;\n  }\n\n  _pureFuncAndArgsDidNotChange(proto:ProtoRecord):boolean {\n    return proto.isPureFunction() && !this._argsChanged(proto);\n  }\n\n  _argsChanged(proto:ProtoRecord):boolean {\n    var args = proto.args;\n    for(var i = 0; i < args.length; ++i) {\n      if (this.changes[args[i]]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _readArgs(proto:ProtoRecord) {\n    var res = ListWrapper.createFixedSize(proto.args.length);\n    var args = proto.args;\n    for (var i = 0; i < args.length; ++i) {\n      res[i] = this.values[args[i]];\n    }\n    return res;\n  }\n}\n\nfunction isSame(a, b) {\n  if (a === b) return true;\n  if (a instanceof String && b instanceof String && a == b) return true;\n  if ((a !== a) && (b !== b)) return true;\n  return false;\n}\n\n\n\n"]}