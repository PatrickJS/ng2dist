{"version":3,"sources":["application.js"],"names":[],"mappings":"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","file":"angular2/src/core/application.es6","sourcesContent":["import {Injector, bind, OpaqueToken, Optional} from 'angular2/di';\nimport {NumberWrapper, Type, isBlank, isPresent, BaseException,\n    assertionsEnabled, print, stringify} from 'angular2/src/facade/lang';\nimport {BrowserDomAdapter} from 'angular2/src/dom/browser_adapter';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\nimport {Compiler, CompilerCache} from './compiler/compiler';\nimport {Reflector, reflector} from 'angular2/src/reflection/reflection';\nimport {Parser, Lexer, ChangeDetection, dynamicChangeDetection, jitChangeDetection} from 'angular2/change_detection';\nimport {ExceptionHandler} from './exception_handler';\nimport {TemplateLoader} from 'angular2/src/render/dom/compiler/template_loader';\nimport {TemplateResolver} from './compiler/template_resolver';\nimport {DirectiveMetadataReader} from './compiler/directive_metadata_reader';\nimport {List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {VmTurnZone} from 'angular2/src/core/zone/vm_turn_zone';\nimport {LifeCycle} from 'angular2/src/core/life_cycle/life_cycle';\nimport {ShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/shadow_dom_strategy';\nimport {EmulatedUnscopedShadowDomStrategy} from 'angular2/src/render/dom/shadow_dom/emulated_unscoped_shadow_dom_strategy';\nimport {XHR} from 'angular2/src/services/xhr';\nimport {XHRImpl} from 'angular2/src/services/xhr_impl';\nimport {EventManager, DomEventsPlugin} from 'angular2/src/render/dom/events/event_manager';\nimport {KeyEventsPlugin} from 'angular2/src/render/dom/events/key_events';\nimport {HammerGesturesPlugin} from 'angular2/src/render/dom/events/hammer_gestures';\nimport {Binding} from 'angular2/src/di/binding';\nimport {ComponentUrlMapper} from 'angular2/src/core/compiler/component_url_mapper';\nimport {UrlResolver} from 'angular2/src/services/url_resolver';\nimport {StyleUrlResolver} from 'angular2/src/render/dom/shadow_dom/style_url_resolver';\nimport {StyleInliner} from 'angular2/src/render/dom/shadow_dom/style_inliner';\nimport {ComponentRef, DynamicComponentLoader} from 'angular2/src/core/compiler/dynamic_component_loader';\nimport {TestabilityRegistry, Testability} from 'angular2/src/core/testability/testability';\nimport {ViewFactory, VIEW_POOL_CAPACITY} from 'angular2/src/core/compiler/view_factory';\nimport {ProtoViewFactory} from 'angular2/src/core/compiler/proto_view_factory';\nimport {Renderer} from 'angular2/src/render/api';\nimport {DirectDomRenderer} from 'angular2/src/render/dom/direct_dom_renderer';\nimport * as rc from 'angular2/src/render/dom/compiler/compiler';\nimport * as rvf from 'angular2/src/render/dom/view/view_factory';\n\nimport {\n  appComponentRefToken,\n  appChangeDetectorToken,\n  appElementToken,\n  appComponentAnnotatedTypeToken,\n  appDocumentToken,\n} from './application_tokens';\n\nvar _rootInjector: Injector;\n\n// Contains everything that is safe to share between applications.\nvar _rootBindings = [\n  bind(Reflector).toValue(reflector),\n  TestabilityRegistry\n];\n\nfunction _injectorBindings(appComponentType): List<Binding> {\n  return [\n      bind(appDocumentToken).toValue(DOM.defaultDoc()),\n      bind(appComponentAnnotatedTypeToken).toFactory((reader) => {\n        // TODO(rado): investigate whether to support bindings on root component.\n        return reader.read(appComponentType);\n      }, [DirectiveMetadataReader]),\n\n      bind(appElementToken).toFactory((appComponentAnnotatedType, appDocument) => {\n        var selector = appComponentAnnotatedType.annotation.selector;\n        var element = DOM.querySelector(appDocument, selector);\n        if (isBlank(element)) {\n          throw new BaseException(`The app selector \"${selector}\" did not match any elements`);\n        }\n        return element;\n      }, [appComponentAnnotatedTypeToken, appDocumentToken]),\n      bind(appComponentRefToken).toAsyncFactory((dynamicComponentLoader, injector, appElement,\n        appComponentAnnotatedType, testability, registry) => {\n\n        // We need to do this here to ensure that we create Testability and\n        // it's ready on the window for users.\n        registry.registerApplication(appElement, testability);\n        return dynamicComponentLoader.loadIntoNewLocation(appElement, appComponentAnnotatedType.type, null, injector);\n      }, [DynamicComponentLoader, Injector, appElementToken, appComponentAnnotatedTypeToken,\n        Testability, TestabilityRegistry]),\n\n      bind(appChangeDetectorToken).toFactory((ref) => ref.hostView.changeDetector,\n          [appComponentRefToken]),\n      bind(appComponentType).toFactory((ref) => ref.instance,\n          [appComponentRefToken]),\n      bind(LifeCycle).toFactory((exceptionHandler) => new LifeCycle(exceptionHandler, null, assertionsEnabled()),[ExceptionHandler]),\n      bind(EventManager).toFactory((zone) => {\n        var plugins = [new HammerGesturesPlugin(), new KeyEventsPlugin(), new DomEventsPlugin()];\n        return new EventManager(plugins, zone);\n      }, [VmTurnZone]),\n      bind(ShadowDomStrategy).toFactory(\n          (styleUrlResolver, doc) => new EmulatedUnscopedShadowDomStrategy(styleUrlResolver, doc.head),\n          [StyleUrlResolver, appDocumentToken]),\n      bind(Renderer).toClass(DirectDomRenderer),\n      bind(rc.Compiler).toClass(rc.DefaultCompiler),\n      // TODO(tbosch): We need an explicit factory here, as\n      // we are getting errors in dart2js with mirrors...\n      bind(rvf.ViewFactory).toFactory(\n        (capacity, eventManager, shadowDomStrategy) => new rvf.ViewFactory(capacity, eventManager, shadowDomStrategy),\n        [rvf.VIEW_POOL_CAPACITY, EventManager, ShadowDomStrategy]\n      ),\n      bind(rvf.VIEW_POOL_CAPACITY).toValue(10000),\n      ProtoViewFactory,\n      // TODO(tbosch): We need an explicit factory here, as\n      // we are getting errors in dart2js with mirrors...\n      bind(ViewFactory).toFactory(\n        (capacity) => new ViewFactory(capacity),\n        [VIEW_POOL_CAPACITY]\n      ),\n      bind(VIEW_POOL_CAPACITY).toValue(10000),\n      Compiler,\n      CompilerCache,\n      TemplateResolver,\n      bind(ChangeDetection).toValue(dynamicChangeDetection),\n      TemplateLoader,\n      DirectiveMetadataReader,\n      Parser,\n      Lexer,\n      ExceptionHandler,\n      bind(XHR).toValue(new XHRImpl()),\n      ComponentUrlMapper,\n      UrlResolver,\n      StyleUrlResolver,\n      StyleInliner,\n      DynamicComponentLoader,\n      Testability\n  ];\n}\n\nfunction _createVmZone(givenReporter:Function): VmTurnZone {\n  var defaultErrorReporter = (exception, stackTrace) => {\n    var longStackTrace = ListWrapper.join(stackTrace, \"\\n\\n-----async gap-----\\n\");\n    print(`${exception}\\n\\n${longStackTrace}`);\n    throw exception;\n  };\n\n  var reporter = isPresent(givenReporter) ? givenReporter : defaultErrorReporter;\n\n  var zone = new VmTurnZone({enableLongStackTrace: assertionsEnabled()});\n  zone.initCallbacks({onErrorHandler: reporter});\n  return zone;\n}\n\n/**\n * Bootstrapping for Angular applications.\n *\n * You instantiate an Angular application by explicitly specifying a component to use as the root component for your\n * application via the `bootstrap()` method.\n *\n * ## Simple Example\n *\n * Assuming this `index.html`:\n *\n * ```html\n * <html>\n *   <!-- load Angular script tags here. -->\n *   <body>\n *     <my-app>loading...</my-app>\n *   </body>\n * </html>\n * ```\n *\n * An application is bootstrapped inside an existing browser DOM, typically `index.html`. Unlike Angular 1, Angular 2\n * does not compile/process bindings in `index.html`. This is mainly for security reasons, as well as architectural\n * changes in Angular 2. This means that `index.html` can safely be processed using server-side technologies such as\n * bindings. Bindings can thus use double-curly `{{ syntax }}` without collision from Angular 2 component double-curly\n * `{{ syntax }}`.\n *\n * We can use this script code:\n *\n * ```\n * @Component({\n *    selector: 'my-app'\n * })\n * @View({\n *    template: 'Hello {{ name }}!'\n * })\n * class MyApp {\n *   name:string;\n *\n *   constructor() {\n *     this.name = 'World';\n *   }\n * }\n *\n * main() {\n *   return bootstrap(MyApp);\n * }\n * ```\n *\n * When the app developer invokes `bootstrap()` with the root component `MyApp` as its argument, Angular performs the\n * following tasks:\n *\n *  1. It uses the component's `selector` property to locate the DOM element which needs to be upgraded into\n *     the angular component.\n *  2. It creates a new child injector (from the primordial injector) and configures the injector with the component's\n *     `injectables`. Optionally, you can also override the injector configuration for an app by invoking\n *     `bootstrap` with the `componentInjectableBindings` argument.\n *  3. It creates a new [Zone] and connects it to the angular application's change detection domain instance.\n *  4. It creates a shadow DOM on the selected component's host element and loads the template into it.\n *  5. It instantiates the specified component.\n *  6. Finally, Angular performs change detection to apply the initial data bindings for the application.\n *\n *\n * ## Instantiating Multiple Applications on a Single Page\n *\n * There are two ways to do this.\n *\n *\n * ### Isolated Applications\n *\n * Angular creates a new application each time that the `bootstrap()` method is invoked. When multiple applications\n * are created for a page, Angular treats each application as independent within an isolated change detection and\n * [Zone] domain. If you need to share data between applications, use the strategy described in the next\n * section, \"Applications That Share Change Detection.\"\n *\n *\n * ### Applications That Share Change Detection\n *\n * If you need to bootstrap multiple applications that share common data, the applications must share a common\n * change detection and zone. To do that, create a meta-component that lists the application components in its template.\n * By only invoking the `bootstrap()` method once, with the meta-component as its argument, you ensure that only a\n * single change detection zone is created and therefore data can be shared across the applications.\n *\n *\n * ## Primordial Injector\n *\n * When working within a browser window, there are many singleton resources: cookies, title, location, and others.\n * Angular services that represent these resources must likewise be shared across all Angular applications that\n * occupy the same browser window.  For this reason, Angular creates exactly one global primordial injector which stores\n * all shared services, and each angular application injector has the primordial injector as its parent.\n *\n * Each application has its own private injector as well. When there are multiple applications on a page, Angular treats\n * each application injector's services as private to that application.\n *\n *\n * # API\n * - [appComponentType]: The root component which should act as the application. This is a reference to a [Type]\n *   which is annotated with `@Component(...)`.\n * - [componentInjectableBindings]: An additional set of bindings that can be added to the [Component.injectables] to\n *   override default injection behavior.\n * - [errorReporter]: `function(exception:any, stackTrace:string)` a default error reporter for unhandled exceptions.\n *\n * Returns a [Promise] with the application`s private [Injector].\n *\n * @exportedAs angular2/core\n */\nexport function bootstrap(appComponentType: Type,\n                          componentInjectableBindings: List<Binding> = null,\n                          errorReporter: Function = null): Promise<ComponentRef> {\n  BrowserDomAdapter.makeCurrent();\n  var bootstrapProcess = PromiseWrapper.completer();\n\n  var zone = _createVmZone(errorReporter);\n  zone.run(() => {\n    // TODO(rado): prepopulate template cache, so applications with only\n    // index.html and main.js are possible.\n\n    var appInjector = _createAppInjector(appComponentType, componentInjectableBindings, zone);\n\n    PromiseWrapper.then(appInjector.asyncGet(appComponentRefToken),\n      (componentRef) => {\n        var appChangeDetector = componentRef.hostView.changeDetector;\n        // retrieve life cycle: may have already been created if injected in root component\n        var lc = appInjector.get(LifeCycle);\n        lc.registerWith(zone, appChangeDetector);\n        lc.tick(); //the first tick that will bootstrap the app\n\n        bootstrapProcess.resolve(componentRef);\n      },\n\n      (err) => {\n        bootstrapProcess.reject(err)\n      });\n  });\n\n  return bootstrapProcess.promise;\n}\n\nfunction _createAppInjector(appComponentType: Type, bindings: List<Binding>, zone: VmTurnZone): Injector {\n  if (isBlank(_rootInjector)) _rootInjector = Injector.resolveAndCreate(_rootBindings);\n  var mergedBindings = isPresent(bindings) ?\n      ListWrapper.concat(_injectorBindings(appComponentType), bindings) :\n      _injectorBindings(appComponentType);\n  ListWrapper.push(mergedBindings, bind(VmTurnZone).toValue(zone));\n  return _rootInjector.resolveAndCreateChild(mergedBindings);\n}\n"]}