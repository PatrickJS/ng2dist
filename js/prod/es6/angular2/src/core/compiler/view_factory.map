{"version":3,"sources":["view_factory.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,UAAS;AAAG,OAAK;AAAG,YAAU,CAAC,KAAO,cAAY,CAAC;AAC3D,KAAO,EAAC,WAAU;AAAG,WAAS;AAAG,IAAE;AAAG,iBAAe;AAAG,KAAG,CAAC,KAAO,iCAA+B,CAAC;AACnG,UAAY,IAAE,CAAA,IAAO,qBAAmB,CAAC;AACzC,KAAO,EAAC,SAAQ;AAAG,QAAM;AAAG,cAAY,CAAC,KAAO,2BAAyB,CAAC;AAC1E,KAAO,EAAC,SAAQ,CAAC,KAAO,wCAAsC,CAAC;AAC/D,UAAY,SAAO,CAAA,IAAO,mBAAiB,CAAC;AAC5C,UAAY,WAAS,CAAA,IAAO,SAAO,CAAC;AACpC,KAAO,EAAC,wBAAuB,CAAC,KAAO,4BAA0B,CAAC;AAGlE,KAAO,CAAM,KAAA,CAAA,kBAAiB,EAAI,+BAA6B,CAAC;AAAA,AAGhE,KAAO,MAAM,YAAU;AAIrB,YAAU,CAAE,AAA4B,wBAAuB,CAAG;AAChE,OAAG,0BAA0B,EAAI,yBAAuB,CAAC;AACzD,OAAG,yBAAyB,EAAI,CAAA,UAAS,OAAO,AAAC,EAAC,CAAC;EACrD;AAAA,AAEA,QAAM,CAAE,SAAQ,AAAwB,CAAsB;AAC5D,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,yBAAyB,CAAG,UAAQ,CAAC,CAAC;AAC1E,OAAI,SAAQ,AAAC,CAAC,WAAU,CAAC,CAAG;AAC1B,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,WAAU,WAAW,AAAC,CAAC,WAAU,CAAC,CAAC;AAChD,SAAI,WAAU,OAAO,IAAM,EAAA,CAAG;AAC5B,iBAAS,OAAO,AAAC,CAAC,IAAG,yBAAyB,CAAG,UAAQ,CAAC,CAAC;MAC7D;AAAA,AACA,WAAO,OAAK,CAAC;IACf;AAAA,AACA,SAAO,CAAA,IAAG,YAAY,AAAC,CAAC,SAAQ,CAAC,CAAC;EACpC;AAAA,AAEA,WAAS,CAAE,IAAG,AAAmB,CAAG;AAClC,OAAI,IAAG,SAAS,AAAC,EAAC,CAAG;AACnB,UAAM,IAAI,cAAY,AAAC,CAAC,sDAAqD,CAAC,CAAC;IACjF;AAAA,AACI,MAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,MAAM,CAAC;AAC1B,AAAI,MAAA,CAAA,WAAU,EAAI,CAAA,UAAS,IAAI,AAAC,CAAC,IAAG,yBAAyB,CAAG,UAAQ,CAAC,CAAC;AAC1E,OAAI,OAAM,AAAC,CAAC,WAAU,CAAC,CAAG;AACxB,gBAAU,EAAI,GAAC,CAAC;AAChB,eAAS,IAAI,AAAC,CAAC,IAAG,yBAAyB,CAAG,UAAQ,CAAG,YAAU,CAAC,CAAC;IACvE;AAAA,AACA,OAAI,WAAU,OAAO,EAAI,CAAA,IAAG,0BAA0B,CAAG;AACvD,gBAAU,KAAK,AAAC,CAAC,WAAU,CAAG,KAAG,CAAC,CAAC;IACrC;AAAA,EACF;AAAA,AAEA,YAAU,CAAE,SAAQ,AAAwB,CAAuB;AACjE,AAAI,MAAA,CAAA,IAAG,EAAI,IAAI,CAAA,UAAS,QAAQ,AAAC,CAAC,SAAQ,CAAG,CAAA,SAAQ,YAAY,CAAC,CAAC;AACnE,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,SAAQ,oBAAoB,YAAY,AAAC,CAAC,IAAG,CAAG,CAAA,SAAQ,SAAS,CACpF,CAAA,SAAQ,oBAAoB,AAAC,EAAC,CAAG,CAAA,SAAQ,oBAAoB,AAAC,EAAC,CAAC,CAAC;AAEnE,AAAI,MAAA,CAAA,OAAM,EAAI,CAAA,SAAQ,eAAe,CAAC;AACtC,AAAI,MAAA,CAAA,gBAAe,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,OAAM,OAAO,CAAC,CAAC;AAClE,AAAI,MAAA,CAAA,oBAAmB,EAAI,GAAC,CAAC;AAC7B,AAAI,MAAA,CAAA,eAAc,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,OAAM,OAAO,CAAC,CAAC;AACjE,AAAI,MAAA,CAAA,cAAa,EAAI,CAAA,WAAU,gBAAgB,AAAC,CAAC,OAAM,OAAO,CAAC,CAAC;AAChE,AAAI,MAAA,CAAA,mBAAkB,EAAI,GAAC,CAAC;AAE5B,QAAS,GAAA,CAAA,SAAQ,EAAI,EAAA,CAAG,CAAA,SAAQ,EAAI,CAAA,OAAM,OAAO,CAAG,CAAA,SAAQ,EAAE,CAAG;AAC/D,AAAI,QAAA,CAAA,MAAK,EAAI,CAAA,OAAM,CAAE,SAAQ,CAAC,CAAC;AAC/B,AAAI,QAAA,CAAA,eAAc,EAAI,KAAG,CAAC;AAG1B,AAAI,QAAA,CAAA,oBAAmB,EAAI,CAAA,MAAK,qBAAqB,CAAC;AACtD,SAAI,SAAQ,AAAC,CAAC,oBAAmB,CAAC,CAAG;AACnC,WAAI,SAAQ,AAAC,CAAC,oBAAmB,OAAO,CAAC,CAAG;AAC1C,AAAI,YAAA,CAAA,qBAAoB,EAAI,CAAA,gBAAe,CAAE,oBAAmB,OAAO,MAAM,CAAC,CAAC;AAC/E,wBAAc,EAAI,CAAA,oBAAmB,YAAY,AAAC,CAAC,qBAAoB,CAAC,CAAC;QAC3E,KAAO;AACL,wBAAc,EAAI,CAAA,oBAAmB,YAAY,AAAC,CAAC,IAAG,CAAC,CAAC;AACxD,oBAAU,KAAK,AAAC,CAAC,oBAAmB,CAAG,gBAAc,CAAC,CAAC;QACzD;AAAA,MACF;AAAA,AACA,qBAAe,CAAE,SAAQ,CAAC,EAAI,gBAAc,CAAC;AAG7C,AAAI,QAAA,CAAA,wBAAuB,EAAI,KAAG,CAAC;AACnC,SAAI,SAAQ,AAAC,CAAC,MAAK,gBAAgB,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,MAAK,mBAAmB,CAAC,CAAG;AAC7E,AAAI,UAAA,CAAA,SAAQ,EAAI,CAAA,IAAG,YAAY,AAAC,CAAC,MAAK,gBAAgB,CAAC,CAAC;AACxD,qBAAa,SAAS,AAAC,CAAC,SAAQ,eAAe,CAAC,CAAC;AAEjD,+BAAuB,EAAI,IAAI,yBAAuB,AAAC,CAAC,SAAQ,eAAe,CAAC,CAAC;AAEjF,kBAAU,KAAK,AAAC,CAAC,mBAAkB,CAAG,UAAQ,CAAC,CAAC;MAClD;AAAA,AAGI,QAAA,CAAA,aAAY,EAAI,KAAG,CAAC;AACxB,SAAI,SAAQ,AAAC,CAAC,MAAK,kBAAkB,CAAC,CAAG;AACvC,oBAAY,EAAI,IAAI,CAAA,QAAO,cAAc,AAAC,CAAC,IAAG,CAAG,KAAG,CAAG,CAAA,MAAK,gBAAgB,CAAG,gBAAc,CAAC,CAAC;MACjG;AAAA,AACA,mBAAa,CAAE,SAAQ,CAAC,EAAI,cAAY,CAAC;AAGzC,SAAI,SAAQ,AAAC,CAAC,eAAc,CAAC,CAAG;AAC9B,sBAAc,CAAE,SAAQ,CAAC,EAAI,IAAI,CAAA,GAAE,gBAAgB,AAAC,CAAC,IAAG,CAAG,IAAI,UAAQ,AAAC,CAAC,IAAG,CAAG,UAAQ,CAAC,CAAG,cAAY,CACrG,yBAAuB,CAAC,CAAC;MAC7B;AAAA,IACF;AAAA,AAEA,OAAG,KAAK,AAAC,CAAC,cAAa,CAAG,iBAAe,CAAG,qBAAmB,CAC7D,eAAa,CAAG,gBAAc,CAAG,oBAAkB,CAAC,CAAC;AAEvD,SAAO,KAAG,CAAC;EACb;AAAA,AAEF;AAAA,AA7GA,KAAK,eAAe,AAAC,4BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cAWzB,WAAS,AAAC,EAAC,EAXqC;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,eAgBX,OAAK,AAAC,CAAC,kBAAiB,CAAC,GAhBS;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,6CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAqBN,UAAS,aAAa,GArBO;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,gDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAiCR,UAAS,QAAQ,GAjCc;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,iDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgDF,UAAS,aAAa,GAhDG;EAAC,CAAC,CAAC,CAAC;AA6GrD","file":"angular2/src/core/compiler/view_factory.es6","sourcesContent":["import {Injectable, Inject, OpaqueToken} from 'angular2/di';\nimport {ListWrapper, MapWrapper, Map, StringMapWrapper, List} from 'angular2/src/facade/collection';\nimport * as eli from './element_injector';\nimport {isPresent, isBlank, BaseException} from 'angular2/src/facade/lang';\nimport {NgElement} from 'angular2/src/core/compiler/ng_element';\nimport * as vcModule from './view_container';\nimport * as viewModule from './view';\nimport {BindingPropagationConfig} from 'angular2/change_detection';\n\n// TODO(tbosch): Make this an OpaqueToken as soon as our transpiler supports this!\nexport const VIEW_POOL_CAPACITY = 'ViewFactory.viewPoolCapacity';\n\n@Injectable()\nexport class ViewFactory {\n  _poolCapacityPerProtoView:number;\n  _pooledViewsPerProtoView:Map<viewModule.AppProtoView, List<viewModule.AppView>>;\n\n  constructor(@Inject(VIEW_POOL_CAPACITY) poolCapacityPerProtoView) {\n    this._poolCapacityPerProtoView = poolCapacityPerProtoView;\n    this._pooledViewsPerProtoView = MapWrapper.create();\n  }\n\n  getView(protoView:viewModule.AppProtoView):viewModule.AppView {\n    var pooledViews = MapWrapper.get(this._pooledViewsPerProtoView, protoView);\n    if (isPresent(pooledViews)) {\n      var result = ListWrapper.removeLast(pooledViews);\n      if (pooledViews.length === 0) {\n        MapWrapper.delete(this._pooledViewsPerProtoView, protoView);\n      }\n      return result;\n    }\n    return this._createView(protoView);\n  }\n\n  returnView(view:viewModule.AppView) {\n    if (view.hydrated()) {\n      throw new BaseException('Only dehydrated Views can be put back into the pool!');\n    }\n    var protoView = view.proto;\n    var pooledViews = MapWrapper.get(this._pooledViewsPerProtoView, protoView);\n    if (isBlank(pooledViews)) {\n      pooledViews = [];\n      MapWrapper.set(this._pooledViewsPerProtoView, protoView, pooledViews);\n    }\n    if (pooledViews.length < this._poolCapacityPerProtoView) {\n      ListWrapper.push(pooledViews, view);\n    }\n  }\n\n  _createView(protoView:viewModule.AppProtoView): viewModule.AppView {\n    var view = new viewModule.AppView(protoView, protoView.protoLocals);\n    var changeDetector = protoView.protoChangeDetector.instantiate(view, protoView.bindings,\n      protoView.getVariableBindings(), protoView.getdirectiveRecords());\n\n    var binders = protoView.elementBinders;\n    var elementInjectors = ListWrapper.createFixedSize(binders.length);\n    var rootElementInjectors = [];\n    var preBuiltObjects = ListWrapper.createFixedSize(binders.length);\n    var viewContainers = ListWrapper.createFixedSize(binders.length);\n    var componentChildViews = [];\n\n    for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {\n      var binder = binders[binderIdx];\n      var elementInjector = null;\n\n      // elementInjectors and rootElementInjectors\n      var protoElementInjector = binder.protoElementInjector;\n      if (isPresent(protoElementInjector)) {\n        if (isPresent(protoElementInjector.parent)) {\n          var parentElementInjector = elementInjectors[protoElementInjector.parent.index];\n          elementInjector = protoElementInjector.instantiate(parentElementInjector);\n        } else {\n          elementInjector = protoElementInjector.instantiate(null);\n          ListWrapper.push(rootElementInjectors, elementInjector);\n        }\n      }\n      elementInjectors[binderIdx] = elementInjector;\n\n      // componentChildViews\n      var bindingPropagationConfig = null;\n      if (isPresent(binder.nestedProtoView) && isPresent(binder.componentDirective)) {\n        var childView = this._createView(binder.nestedProtoView);\n        changeDetector.addChild(childView.changeDetector);\n\n        bindingPropagationConfig = new BindingPropagationConfig(childView.changeDetector);\n\n        ListWrapper.push(componentChildViews, childView);\n      }\n\n      // viewContainers\n      var viewContainer = null;\n      if (isPresent(binder.viewportDirective)) {\n        viewContainer = new vcModule.ViewContainer(this, view, binder.nestedProtoView, elementInjector);\n      }\n      viewContainers[binderIdx] = viewContainer;\n\n      // preBuiltObjects\n      if (isPresent(elementInjector)) {\n        preBuiltObjects[binderIdx] = new eli.PreBuiltObjects(view, new NgElement(view, binderIdx), viewContainer,\n          bindingPropagationConfig);\n      }\n    }\n\n    view.init(changeDetector, elementInjectors, rootElementInjectors,\n      viewContainers, preBuiltObjects, componentChildViews);\n\n    return view;\n  }\n\n}\n"]}